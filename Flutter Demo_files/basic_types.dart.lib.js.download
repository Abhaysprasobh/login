// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/painting/basic_types.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__packages__flutter__src__painting__basic_types_dart(dart_sdk) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var basic_types = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOfRenderComparison: () => (T.ListOfRenderComparison = dart.constFn(dart_rti.findType("core|List<flutter__src__painting__basic_types|RenderComparison>")))(),
    RenderComparison: () => (T.RenderComparison = dart.constFn(dart_rti.findType("flutter__src__painting__basic_types|RenderComparison")))(),
    ListOfAxis: () => (T.ListOfAxis = dart.constFn(dart_rti.findType("core|List<flutter__src__painting__basic_types|Axis>")))(),
    Axis: () => (T.Axis = dart.constFn(dart_rti.findType("flutter__src__painting__basic_types|Axis")))(),
    ListOfVerticalDirection: () => (T.ListOfVerticalDirection = dart.constFn(dart_rti.findType("core|List<flutter__src__painting__basic_types|VerticalDirection>")))(),
    VerticalDirection: () => (T.VerticalDirection = dart.constFn(dart_rti.findType("flutter__src__painting__basic_types|VerticalDirection")))(),
    ListOfAxisDirection: () => (T.ListOfAxisDirection = dart.constFn(dart_rti.findType("core|List<flutter__src__painting__basic_types|AxisDirection>")))(),
    AxisDirection: () => (T.AxisDirection = dart.constFn(dart_rti.findType("flutter__src__painting__basic_types|AxisDirection")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "identical",
        [_Enum_index]: 0
      }, basic_types.RenderComparison.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "metadata",
        [_Enum_index]: 1
      }, basic_types.RenderComparison.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "paint",
        [_Enum_index]: 2
      }, basic_types.RenderComparison.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "layout",
        [_Enum_index]: 3
      }, basic_types.RenderComparison.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T.RenderComparison());
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "horizontal",
        [_Enum_index]: 0
      }, basic_types.Axis.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "vertical",
        [_Enum_index]: 1
      }, basic_types.Axis.prototype));
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7], T.Axis());
    },
    get C9() {
      return C[9] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "up",
        [_Enum_index]: 0
      }, basic_types.VerticalDirection.prototype));
    },
    get C10() {
      return C[10] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "down",
        [_Enum_index]: 1
      }, basic_types.VerticalDirection.prototype));
    },
    get C8() {
      return C[8] = dart.constList([C[9] || CT.C9, C[10] || CT.C10], T.VerticalDirection());
    },
    get C12() {
      return C[12] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "up",
        [_Enum_index]: 0
      }, basic_types.AxisDirection.prototype));
    },
    get C13() {
      return C[13] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "right",
        [_Enum_index]: 1
      }, basic_types.AxisDirection.prototype));
    },
    get C14() {
      return C[14] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "down",
        [_Enum_index]: 2
      }, basic_types.AxisDirection.prototype));
    },
    get C15() {
      return C[15] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "left",
        [_Enum_index]: 3
      }, basic_types.AxisDirection.prototype));
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15], T.AxisDirection());
    },
    get C16() {
      return C[16] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "rtl",
        [_Enum_index]: 0
      }, ui.TextDirection.prototype));
    },
    get C17() {
      return C[17] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "ltr",
        [_Enum_index]: 1
      }, ui.TextDirection.prototype));
    }
  }, false);
  var C = Array(18).fill(void 0);
  var I = [
    "package:flutter/src/painting/basic_types.dart",
    "dart:core"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  basic_types.RenderComparison = class RenderComparison extends core._Enum {
    [_enumToString]() {
      return "RenderComparison." + this[_name];
    }
  };
  (basic_types.RenderComparison.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(basic_types.RenderComparison).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = basic_types.RenderComparison.prototype;
  dart.addTypeTests(basic_types.RenderComparison);
  dart.addRtiResources(basic_types.RenderComparison, ["flutter__src__painting__basic_types|RenderComparison"]);
  dart.addTypeCaches(basic_types.RenderComparison);
  dart.setMethodSignature(basic_types.RenderComparison, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(basic_types.RenderComparison))));
  dart.setLibraryUri(basic_types.RenderComparison, I[0]);
  dart.setStaticFieldSignature(basic_types.RenderComparison, () => ['values', 'identical', 'metadata', 'paint', 'layout']);
  dart.defineLazy(basic_types.RenderComparison, {
    /*basic_types.RenderComparison.values*/get values() {
      return C[0] || CT.C0;
    },
    /*basic_types.RenderComparison.identical*/get identical() {
      return C[1] || CT.C1;
    },
    /*basic_types.RenderComparison.metadata*/get metadata() {
      return C[2] || CT.C2;
    },
    /*basic_types.RenderComparison.paint*/get paint() {
      return C[3] || CT.C3;
    },
    /*basic_types.RenderComparison.layout*/get layout() {
      return C[4] || CT.C4;
    }
  }, false);
  basic_types.Axis = class Axis extends core._Enum {
    [_enumToString]() {
      return "Axis." + this[_name];
    }
  };
  (basic_types.Axis.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(basic_types.Axis).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = basic_types.Axis.prototype;
  dart.addTypeTests(basic_types.Axis);
  dart.addRtiResources(basic_types.Axis, ["flutter__src__painting__basic_types|Axis"]);
  dart.addTypeCaches(basic_types.Axis);
  dart.setMethodSignature(basic_types.Axis, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(basic_types.Axis))));
  dart.setLibraryUri(basic_types.Axis, I[0]);
  dart.setStaticFieldSignature(basic_types.Axis, () => ['values', 'horizontal', 'vertical']);
  dart.defineLazy(basic_types.Axis, {
    /*basic_types.Axis.values*/get values() {
      return C[5] || CT.C5;
    },
    /*basic_types.Axis.horizontal*/get horizontal() {
      return C[6] || CT.C6;
    },
    /*basic_types.Axis.vertical*/get vertical() {
      return C[7] || CT.C7;
    }
  }, false);
  basic_types.VerticalDirection = class VerticalDirection extends core._Enum {
    [_enumToString]() {
      return "VerticalDirection." + this[_name];
    }
  };
  (basic_types.VerticalDirection.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(basic_types.VerticalDirection).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = basic_types.VerticalDirection.prototype;
  dart.addTypeTests(basic_types.VerticalDirection);
  dart.addRtiResources(basic_types.VerticalDirection, ["flutter__src__painting__basic_types|VerticalDirection"]);
  dart.addTypeCaches(basic_types.VerticalDirection);
  dart.setMethodSignature(basic_types.VerticalDirection, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(basic_types.VerticalDirection))));
  dart.setLibraryUri(basic_types.VerticalDirection, I[0]);
  dart.setStaticFieldSignature(basic_types.VerticalDirection, () => ['values', 'up', 'down']);
  dart.defineLazy(basic_types.VerticalDirection, {
    /*basic_types.VerticalDirection.values*/get values() {
      return C[8] || CT.C8;
    },
    /*basic_types.VerticalDirection.up*/get up() {
      return C[9] || CT.C9;
    },
    /*basic_types.VerticalDirection.down*/get down() {
      return C[10] || CT.C10;
    }
  }, false);
  basic_types.AxisDirection = class AxisDirection extends core._Enum {
    [_enumToString]() {
      return "AxisDirection." + this[_name];
    }
  };
  (basic_types.AxisDirection.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(basic_types.AxisDirection).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = basic_types.AxisDirection.prototype;
  dart.addTypeTests(basic_types.AxisDirection);
  dart.addRtiResources(basic_types.AxisDirection, ["flutter__src__painting__basic_types|AxisDirection"]);
  dart.addTypeCaches(basic_types.AxisDirection);
  dart.setMethodSignature(basic_types.AxisDirection, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(basic_types.AxisDirection))));
  dart.setLibraryUri(basic_types.AxisDirection, I[0]);
  dart.setStaticFieldSignature(basic_types.AxisDirection, () => ['values', 'up', 'right', 'down', 'left']);
  dart.defineLazy(basic_types.AxisDirection, {
    /*basic_types.AxisDirection.values*/get values() {
      return C[11] || CT.C11;
    },
    /*basic_types.AxisDirection.up*/get up() {
      return C[12] || CT.C12;
    },
    /*basic_types.AxisDirection.right*/get right() {
      return C[13] || CT.C13;
    },
    /*basic_types.AxisDirection.down*/get down() {
      return C[14] || CT.C14;
    },
    /*basic_types.AxisDirection.left*/get left() {
      return C[15] || CT.C15;
    }
  }, false);
  basic_types.flipAxis = function flipAxis(direction) {
    switch (direction) {
      case C[6] || CT.C6:
        {
          return basic_types.Axis.vertical;
        }
      case C[7] || CT.C7:
        {
          return basic_types.Axis.horizontal;
        }
    }
  };
  basic_types.axisDirectionToAxis = function axisDirectionToAxis(axisDirection) {
    switch (axisDirection) {
      case C[12] || CT.C12:
      case C[14] || CT.C14:
        {
          return basic_types.Axis.vertical;
        }
      case C[15] || CT.C15:
      case C[13] || CT.C13:
        {
          return basic_types.Axis.horizontal;
        }
    }
  };
  basic_types.textDirectionToAxisDirection = function textDirectionToAxisDirection(textDirection) {
    switch (textDirection) {
      case C[16] || CT.C16:
        {
          return basic_types.AxisDirection.left;
        }
      case C[17] || CT.C17:
        {
          return basic_types.AxisDirection.right;
        }
    }
  };
  basic_types.flipAxisDirection = function flipAxisDirection(axisDirection) {
    switch (axisDirection) {
      case C[12] || CT.C12:
        {
          return basic_types.AxisDirection.down;
        }
      case C[13] || CT.C13:
        {
          return basic_types.AxisDirection.left;
        }
      case C[14] || CT.C14:
        {
          return basic_types.AxisDirection.up;
        }
      case C[15] || CT.C15:
        {
          return basic_types.AxisDirection.right;
        }
    }
  };
  basic_types.axisDirectionIsReversed = function axisDirectionIsReversed(axisDirection) {
    switch (axisDirection) {
      case C[12] || CT.C12:
      case C[15] || CT.C15:
        {
          return true;
        }
      case C[14] || CT.C14:
      case C[13] || CT.C13:
        {
          return false;
        }
    }
  };
  dart.moduleConstCaches.set("packages/flutter/src/painting/basic_types.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__painting__basic_types|RenderComparison":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"flutter__src__painting__basic_types|Axis":{"core|_Enum":[],"core|Enum":[]},"flutter__src__painting__basic_types|VerticalDirection":{"core|_Enum":[],"core|Enum":[]},"flutter__src__painting__basic_types|AxisDirection":{"core|_Enum":[],"core|Enum":[]}}'));
  dart.trackLibraries("packages/flutter/src/painting/basic_types.dart", {
    "package:flutter/src/painting/basic_types.dart": basic_types
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["basic_types.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4GA;;;;;;;;;;;;;MA5BK,mCAAM;;;MAGT,sCAAS;;;MAMT,qCAAQ;;;MAQR,kCAAK;;;MAUL,mCAAM;;;;;;;IA0BR;;;;;;;;;;;;;MAXK,uBAAM;;;MAOT,2BAAU;;;MAGV,yBAAQ;;;;;;;IAyCV;;;;;;;;;;;;;MAVK,oCAAM;;;MAIT,gCAAE;;;MAKF,kCAAI;;;;;;;IAoGN;;;;;;;;;;;;;MApEK,gCAAM;;;MAeT,4BAAE;;;MAiBF,+BAAK;;;MAiBL,8BAAI;;;MAkBJ,8BAAI;;;;2CAhIa;AACjB,YAAQ,SAAS;;;AAEb,gBAAY;;;;AAEZ,gBAAY;;;EAElB;iEAiIuC;AACrC,YAAQ,aAAa;;;;AAGjB,gBAAY;;;;;AAGZ,gBAAY;;;EAElB;mFAMyD;AACvD,YAAQ,aAAa;;;AAEjB,gBAAqB;;;;AAErB,gBAAqB;;;EAE3B;6DAW8C;AAC5C,YAAQ,aAAa;;;AAEjB,gBAAqB;;;;AAErB,gBAAqB;;;;AAErB,gBAAqB;;;;AAErB,gBAAqB;;;EAE3B;yEAO2C;AACzC,YAAQ,aAAa;;;;AAGjB,gBAAO;;;;;AAGP,gBAAO;;;EAEb","file":"../../../../../../../../F:/packages/flutter/src/painting/basic_types.dart.lib.js"}');
  // Exports:
  return {
    src__painting__basic_types: basic_types
  };
}));

//# sourceMappingURL=basic_types.dart.lib.js.map

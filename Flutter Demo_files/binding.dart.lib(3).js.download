// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/painting/binding.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/binding.dart', 'packages/flutter/src/painting/image_cache.dart', 'packages/flutter/src/foundation/change_notifier.dart'], (function load__packages__flutter__src__painting__binding_dart(dart_sdk, packages__flutter__src__foundation__binding$46dart, packages__flutter__src__painting__image_cache$46dart, packages__flutter__src__foundation__change_notifier$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = packages__flutter__src__foundation__binding$46dart.src__foundation__binding;
  const image_cache = packages__flutter__src__painting__image_cache$46dart.src__painting__image_cache;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  var binding$ = Object.create(dart.library);
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    PaintingBinding: () => (T.PaintingBinding = dart.constFn(dart_rti.findType("flutter__src__painting__binding|PaintingBinding")))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(dart_rti.findType("core|Map<core|String,@>")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    ImageCache: () => (T.ImageCache = dart.constFn(dart_rti.findType("flutter__src__painting__image_cache|ImageCache")))(),
    VoidToImageCache: () => (T.VoidToImageCache = dart.constFn(dart_rti.findType("flutter__src__painting__image_cache|ImageCache()")))(),
    ImmutableBuffer__ToFutureOfCodec: () => (T.ImmutableBuffer__ToFutureOfCodec = dart.constFn(dart_rti.findType("async|Future<ui|Codec>(ui|ImmutableBuffer{allowUpscaling:core|bool,cacheHeight:core|int?,cacheWidth:core|int?})")))(),
    ImmutableBuffer__ToFutureOfCodec$1: () => (T.ImmutableBuffer__ToFutureOfCodec$1 = dart.constFn(dart_rti.findType("async|Future<ui|Codec>(ui|ImmutableBuffer{getTargetSize:ui|TargetImageSize(core|int,core|int)?})")))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart_rti.findType("~(core|String)")))(),
    Listenable: () => (T.Listenable = dart.constFn(dart_rti.findType("flutter__src__foundation__change_notifier|Listenable")))(),
    ObjectToFutureOfvoid: () => (T.ObjectToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(core|Object)")))(),
    PaintingBindingN: () => (T.PaintingBindingN = dart.constFn(dart_rti.findType("flutter__src__painting__binding|PaintingBinding?")))(),
    ShaderWarmUpN: () => (T.ShaderWarmUpN = dart.constFn(dart_rti.findType("flutter__src__painting__shader_warm_up|ShaderWarmUp?")))(),
    ImageCacheN: () => (T.ImageCacheN = dart.constFn(dart_rti.findType("flutter__src__painting__image_cache|ImageCache?")))(),
    _SystemFontsNotifier: () => (T._SystemFontsNotifier = dart.constFn(dart_rti.findType("flutter__src__painting__binding|_SystemFontsNotifier")))(),
    FnTovoid: () => (T.FnTovoid = dart.constFn(dart_rti.findType("~(~())")))(),
    SetOfVoidTovoid: () => (T.SetOfVoidTovoid = dart.constFn(dart_rti.findType("core|Set<~()>")))()
  };
  var G = {
    LinkedHashSetOfVoidTovoid: () => (G.LinkedHashSetOfVoidTovoid = dart.constFn(collection.LinkedHashSet$(T.VoidTovoid())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/painting/binding.dart",
    "package:flutter/src/painting/binding.dart",
    "package:flutter/src/painting/shader_warm_up.dart",
    "package:flutter/src/painting/image_cache.dart",
    "dart:core"
  ];
  var __PaintingBinding__imageCache = dart.privateName(binding$, "_#PaintingBinding#_imageCache");
  var _systemFonts = dart.privateName(binding$, "_systemFonts");
  var _imageCache = dart.privateName(binding$, "_imageCache");
  var _as = dart.privateName(dart_rti, "_as");
  const handleSystemMessage = Symbol("handleSystemMessage");
  binding$.PaintingBinding = class PaintingBinding extends core.Object {
    static get instance() {
      return binding.BindingBase.checkInstance(T.PaintingBinding(), binding$.PaintingBinding._instance);
    }
  };
  binding$.PaintingBinding[dart.mixinOn] = _PaintingBinding$36BindingBase$36ServicesBinding => class PaintingBinding extends _PaintingBinding$36BindingBase$36ServicesBinding {
    initInstances() {
      let t$360;
      super.initInstances();
      binding$.PaintingBinding._instance = this;
      this[_imageCache] = this.createImageCache();
      t$360 = binding$.PaintingBinding.shaderWarmUp;
      t$360 == null ? null : t$360.execute();
    }
    get imageCache() {
      return this[_imageCache];
    }
    get [_imageCache]() {
      let t$360;
      t$360 = this[__PaintingBinding__imageCache];
      return t$360 == null ? dart.throw(new _internal.LateError.fieldNI("_imageCache")) : t$360;
    }
    set [_imageCache](_imageCache$35param) {
      this[__PaintingBinding__imageCache] = _imageCache$35param;
    }
    createImageCache() {
      return new image_cache.ImageCache.new();
    }
    instantiateImageCodecFromBuffer(buffer, opts) {
      let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
      let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
      let allowUpscaling = opts && 'allowUpscaling' in opts ? opts.allowUpscaling : false;
      if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, I[0], 112, 12, "cacheWidth == null || cacheWidth > 0");
      if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, I[0], 113, 12, "cacheHeight == null || cacheHeight > 0");
      return ui.instantiateImageCodecFromBuffer(buffer, {targetWidth: cacheWidth, targetHeight: cacheHeight, allowUpscaling: allowUpscaling});
    }
    instantiateImageCodecWithSize(buffer, opts) {
      let getTargetSize = opts && 'getTargetSize' in opts ? opts.getTargetSize : null;
      return ui.instantiateImageCodecWithSize(buffer, {getTargetSize: getTargetSize});
    }
    evict(asset) {
      super.evict(asset);
      this.imageCache.clear();
      this.imageCache.clearLiveImages();
    }
    handleMemoryPressure() {
      super.handleMemoryPressure();
      this.imageCache.clear();
    }
    get systemFonts() {
      return this[_systemFonts];
    }
    handleSystemMessage(systemMessage) {
      return async.async(T.void(), (function* handleSystemMessage$() {
        yield this[handleSystemMessage](systemMessage);
        let message = T.MapOfString$dynamic()[_as](systemMessage);
        let type = T.String()[_as](message[$_get]("type"));
        switch (type) {
          case "fontsChange":
            {
              this[_systemFonts].notifyListeners();
            }
        }
        return;
      }).bind(this));
    }
    [handleSystemMessage](systemMessage) {
      return super.handleSystemMessage(systemMessage);
    }
  };
  (binding$.PaintingBinding[dart.mixinNew] = function() {
    this[__PaintingBinding__imageCache] = null;
    this[_systemFonts] = new binding$._SystemFontsNotifier.new();
  }).prototype = binding$.PaintingBinding.prototype;
  dart.addTypeTests(binding$.PaintingBinding);
  dart.addRtiResources(binding$.PaintingBinding, ["flutter__src__painting__binding|PaintingBinding"]);
  dart.addTypeCaches(binding$.PaintingBinding);
  dart.setMethodSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    initInstances: T.VoidTovoid(),
    createImageCache: T.VoidToImageCache(),
    instantiateImageCodecFromBuffer: T.ImmutableBuffer__ToFutureOfCodec(),
    instantiateImageCodecWithSize: T.ImmutableBuffer__ToFutureOfCodec$1(),
    evict: T.StringTovoid(),
    handleMemoryPressure: T.VoidTovoid(),
    handleSystemMessage: T.ObjectToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setGetterSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    imageCache: T.ImageCache(),
    [_imageCache]: T.ImageCache(),
    systemFonts: T.Listenable()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setSetterSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({[_imageCache]: T.ImageCache()}, dart.getSetters(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setStaticGetterSignature(binding$.PaintingBinding, () => ['instance']);
  dart.setLibraryUri(binding$.PaintingBinding, I[1]);
  dart.setFieldSignature(binding$.PaintingBinding, () => dart.global.Object.setPrototypeOf({
    [__PaintingBinding__imageCache]: {type: T.ImageCacheN(), isConst: false, isFinal: false, libraryUri: I[3]},
    [_systemFonts]: {type: T._SystemFontsNotifier(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(binding$.PaintingBinding))));
  dart.setStaticFieldSignature(binding$.PaintingBinding, () => ['_instance', 'shaderWarmUp']);
  dart.defineLazy(binding$.PaintingBinding, {
    /*binding$.PaintingBinding._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*binding$.PaintingBinding.shaderWarmUp*/get shaderWarmUp() {
      return null;
    },
    set shaderWarmUp(value) {}
  }, false);
  var _systemFontsCallbacks = dart.privateName(binding$, "_systemFontsCallbacks");
  binding$._SystemFontsNotifier = class _SystemFontsNotifier extends change_notifier.Listenable {
    notifyListeners() {
      for (let callback of this[_systemFontsCallbacks]) {
        callback();
      }
    }
    addListener(listener) {
      this[_systemFontsCallbacks].add(listener);
    }
    removeListener(listener) {
      this[_systemFontsCallbacks].remove(listener);
    }
    static ['_#new#tearOff']() {
      return new binding$._SystemFontsNotifier.new();
    }
  };
  (binding$._SystemFontsNotifier.new = function() {
    this[_systemFontsCallbacks] = G.LinkedHashSetOfVoidTovoid().new();
    dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier).new.call(this);
    ;
  }).prototype = binding$._SystemFontsNotifier.prototype;
  dart.addTypeTests(binding$._SystemFontsNotifier);
  dart.addRtiResources(binding$._SystemFontsNotifier, ["flutter__src__painting__binding|_SystemFontsNotifier"]);
  dart.addTypeCaches(binding$._SystemFontsNotifier);
  dart.setMethodSignature(binding$._SystemFontsNotifier, () => dart.global.Object.setPrototypeOf({
    notifyListeners: T.VoidTovoid(),
    addListener: T.FnTovoid(),
    removeListener: T.FnTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier))));
  dart.setLibraryUri(binding$._SystemFontsNotifier, I[1]);
  dart.setFieldSignature(binding$._SystemFontsNotifier, () => dart.global.Object.setPrototypeOf({[_systemFontsCallbacks]: {type: T.SetOfVoidTovoid(), isConst: false, isFinal: true, libraryUri: I[4]}}, dart.getFields(dart.global.Object.getPrototypeOf(binding$._SystemFontsNotifier))));
  dart.copyProperties(binding$, {
    get imageCache() {
      return binding$.PaintingBinding.instance.imageCache;
    }
  });
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__painting__binding|PaintingBinding":{"flutter__src__foundation__binding|BindingBase":[],"flutter__src__services__binding|ServicesBinding":[],"flutter__src__scheduler__binding|SchedulerBinding":[]},"flutter__src__services__binding|ServicesBinding":{"flutter__src__foundation__binding|BindingBase":[],"flutter__src__scheduler__binding|SchedulerBinding":[]},"flutter__src__scheduler__binding|SchedulerBinding":{"flutter__src__foundation__binding|BindingBase":[]},"core|Map":{"Map.K":"1","Map.V":"2"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"async|Future":{"Future.T":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__painting__binding|_SystemFontsNotifier":{"flutter__src__foundation__change_notifier|Listenable":[]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]}}'));
  dart.trackLibraries("packages/flutter/src/painting/binding.dart", {
    "package:flutter/src/painting/binding.dart": binding$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["binding.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ByC,YAAY,wDAAc;IAAU;;;;;AAXnE;AACN,2CAAY;AACZ,0BAAc;AACd;6BAAc;IAChB;;AAgD6B;IAAW;;;AACxB;;IAAW;sBAAX;;IAAW;;AAMM;IAAY;oCA4BxB;UACd;UACA;UACA;AAEL,YAAO,AAAW,AAAQ,UAAT,YAAuB,aAAX,UAAU,IAAG;AAC1C,YAAO,AAAY,AAAQ,WAAT,YAAwB,aAAZ,WAAW,IAAG;AAC5C,YAAU,oCACR,MAAM,gBACO,UAAU,gBACT,WAAW,kBACT,cAAc;IAElC;kCAkBqB;UACS;AAE5B,YAAU,kCAA8B,MAAM,kBAAiB,aAAa;IAC9E;UAGkB;AACV,kBAAM,KAAK;AACN,MAAX;AACW,MAAX;IACF;;AAIQ;AACK,MAAX;IACF;;AAW8B;IAAY;wBAIF;AAAR;AAC9B,cAAY,0BAAoB,aAAa;AAClB,sBAAwB,6BAAd,aAAa;AACrC,mBAAuB,gBAAhB,AAAO,OAAA,QAAC;AAC5B,gBAAQ,IAAI;;;AAEK,cAAb;;;AAEJ;MACF;;;;;;;0CA1GgB;IA8FW,qBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAvIlB,kCAAS;;;;MA+BZ,qCAAY;;;;;;;;AA2H/B,eAAwB,WAAY;AAC1B,QAAR,QAAQ;;IAEZ;gBAG8B;AACN,MAAtB,gCAA0B,QAAQ;IACpC;mBAEiC;AACT,MAAtB,mCAA6B,QAAQ;IACvC;;;;;;IAfwB,8BAAsC;;;EAgBhE;;;;;;;;;;;;;AAS6B,YAAgB,AAAS;IAAU","file":"../../../../../../../../F:/packages/flutter/src/painting/binding.dart.lib.js"}');
  // Exports:
  return {
    src__painting__binding: binding$
  };
}));

//# sourceMappingURL=binding.dart.lib.js.map

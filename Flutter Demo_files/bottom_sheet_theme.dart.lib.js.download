// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/material/bottom_sheet_theme.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/widgets/unique_widget.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__material__bottom_sheet_theme_dart(dart_sdk, packages__flutter__src__painting__borders$46dart, packages__flutter__src__widgets__unique_widget$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const box = packages__flutter__src__widgets__unique_widget$46dart.src__rendering__box;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var bottom_sheet_theme = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    BottomSheetThemeData: () => (T.BottomSheetThemeData = dart.constFn(dart_rti.findType("flutter__src__material__bottom_sheet_theme|BottomSheetThemeData")))(),
    ShapeBorder: () => (T.ShapeBorder = dart.constFn(dart_rti.findType("flutter__src__painting__borders|ShapeBorder")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    Size: () => (T.Size = dart.constFn(dart_rti.findType("ui|Size")))(),
    Clip: () => (T.Clip = dart.constFn(dart_rti.findType("ui|Clip")))(),
    BoxConstraints: () => (T.BoxConstraints = dart.constFn(dart_rti.findType("flutter__src__rendering__box|BoxConstraints")))(),
    __ToBottomSheetThemeData: () => (T.__ToBottomSheetThemeData = dart.constFn(dart_rti.findType("flutter__src__material__bottom_sheet_theme|BottomSheetThemeData({backgroundColor:ui|Color?,clipBehavior:ui|Clip?,constraints:flutter__src__rendering__box|BoxConstraints?,dragHandleColor:ui|Color?,dragHandleSize:ui|Size?,elevation:core|double?,modalBackgroundColor:ui|Color?,modalBarrierColor:ui|Color?,modalElevation:core|double?,shadowColor:ui|Color?,shape:flutter__src__painting__borders|ShapeBorder?,showDragHandle:core|bool?,surfaceTintColor:ui|Color?})")))(),
    BottomSheetThemeDataNAndBottomSheetThemeDataNAnddoubleToBottomSheetThemeDataN: () => (T.BottomSheetThemeDataNAndBottomSheetThemeDataNAnddoubleToBottomSheetThemeDataN = dart.constFn(dart_rti.findType("flutter__src__material__bottom_sheet_theme|BottomSheetThemeData?(flutter__src__material__bottom_sheet_theme|BottomSheetThemeData?,flutter__src__material__bottom_sheet_theme|BottomSheetThemeData?,core|double)")))(),
    ColorN: () => (T.ColorN = dart.constFn(dart_rti.findType("ui|Color?")))(),
    doubleN: () => (T.doubleN = dart.constFn(dart_rti.findType("core|double?")))(),
    ShapeBorderN: () => (T.ShapeBorderN = dart.constFn(dart_rti.findType("flutter__src__painting__borders|ShapeBorder?")))(),
    boolN: () => (T.boolN = dart.constFn(dart_rti.findType("core|bool?")))(),
    SizeN: () => (T.SizeN = dart.constFn(dart_rti.findType("ui|Size?")))(),
    ClipN: () => (T.ClipN = dart.constFn(dart_rti.findType("ui|Clip?")))(),
    BoxConstraintsN: () => (T.BoxConstraintsN = dart.constFn(dart_rti.findType("flutter__src__rendering__box|BoxConstraints?")))()
  };
  var G = {
    DiagnosticsPropertyOfShapeBorder: () => (G.DiagnosticsPropertyOfShapeBorder = dart.constFn(diagnostics.DiagnosticsProperty$(T.ShapeBorder())))(),
    DiagnosticsPropertyOfbool: () => (G.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(T.bool())))(),
    DiagnosticsPropertyOfSize: () => (G.DiagnosticsPropertyOfSize = dart.constFn(diagnostics.DiagnosticsProperty$(T.Size())))(),
    DiagnosticsPropertyOfClip: () => (G.DiagnosticsPropertyOfClip = dart.constFn(diagnostics.DiagnosticsProperty$(T.Clip())))(),
    DiagnosticsPropertyOfBoxConstraints: () => (G.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(T.BoxConstraints())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:flutter/src/material/bottom_sheet_theme.dart",
    "dart:ui",
    "dart:core",
    "package:flutter/src/painting/borders.dart",
    "package:flutter/src/rendering/box.dart"
  ];
  var backgroundColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.backgroundColor");
  var surfaceTintColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.surfaceTintColor");
  var elevation$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.elevation");
  var modalBackgroundColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBackgroundColor");
  var modalBarrierColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBarrierColor");
  var shadowColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shadowColor");
  var modalElevation$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalElevation");
  var shape$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shape");
  var showDragHandle$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.showDragHandle");
  var dragHandleColor$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.dragHandleColor");
  var dragHandleSize$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.dragHandleSize");
  var clipBehavior$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.clipBehavior");
  var constraints$ = dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.constraints");
  var _is = dart.privateName(dart_rti, "_is");
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  bottom_sheet_theme.BottomSheetThemeData = class BottomSheetThemeData extends Object_Diagnosticable$36 {
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get surfaceTintColor() {
      return this[surfaceTintColor$];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get modalBackgroundColor() {
      return this[modalBackgroundColor$];
    }
    set modalBackgroundColor(value) {
      super.modalBackgroundColor = value;
    }
    get modalBarrierColor() {
      return this[modalBarrierColor$];
    }
    set modalBarrierColor(value) {
      super.modalBarrierColor = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get modalElevation() {
      return this[modalElevation$];
    }
    set modalElevation(value) {
      super.modalElevation = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get showDragHandle() {
      return this[showDragHandle$];
    }
    set showDragHandle(value) {
      super.showDragHandle = value;
    }
    get dragHandleColor() {
      return this[dragHandleColor$];
    }
    set dragHandleColor(value) {
      super.dragHandleColor = value;
    }
    get dragHandleSize() {
      return this[dragHandleSize$];
    }
    set dragHandleSize(value) {
      super.dragHandleSize = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let modalBackgroundColor = opts && 'modalBackgroundColor' in opts ? opts.modalBackgroundColor : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let modalElevation = opts && 'modalElevation' in opts ? opts.modalElevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let showDragHandle = opts && 'showDragHandle' in opts ? opts.showDragHandle : null;
      let dragHandleColor = opts && 'dragHandleColor' in opts ? opts.dragHandleColor : null;
      let dragHandleSize = opts && 'dragHandleSize' in opts ? opts.dragHandleSize : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new bottom_sheet_theme.BottomSheetThemeData.new({backgroundColor: backgroundColor, surfaceTintColor: surfaceTintColor, elevation: elevation, modalBackgroundColor: modalBackgroundColor, modalBarrierColor: modalBarrierColor, shadowColor: shadowColor, modalElevation: modalElevation, shape: shape, showDragHandle: showDragHandle, dragHandleColor: dragHandleColor, dragHandleSize: dragHandleSize, clipBehavior: clipBehavior, constraints: constraints});
    }
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let modalBackgroundColor = opts && 'modalBackgroundColor' in opts ? opts.modalBackgroundColor : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let modalElevation = opts && 'modalElevation' in opts ? opts.modalElevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let showDragHandle = opts && 'showDragHandle' in opts ? opts.showDragHandle : null;
      let dragHandleColor = opts && 'dragHandleColor' in opts ? opts.dragHandleColor : null;
      let dragHandleSize = opts && 'dragHandleSize' in opts ? opts.dragHandleSize : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new bottom_sheet_theme.BottomSheetThemeData.new({backgroundColor: (t$360 = backgroundColor, t$360 == null ? this.backgroundColor : t$360), surfaceTintColor: (t$360$ = surfaceTintColor, t$360$ == null ? this.surfaceTintColor : t$360$), elevation: (t$360$0 = elevation, t$360$0 == null ? this.elevation : t$360$0), modalBackgroundColor: (t$360$1 = modalBackgroundColor, t$360$1 == null ? this.modalBackgroundColor : t$360$1), modalBarrierColor: (t$360$2 = modalBarrierColor, t$360$2 == null ? this.modalBarrierColor : t$360$2), shadowColor: (t$360$3 = shadowColor, t$360$3 == null ? this.shadowColor : t$360$3), modalElevation: (t$360$4 = modalElevation, t$360$4 == null ? this.modalElevation : t$360$4), shape: (t$360$5 = shape, t$360$5 == null ? this.shape : t$360$5), showDragHandle: (t$360$6 = showDragHandle, t$360$6 == null ? this.showDragHandle : t$360$6), dragHandleColor: (t$360$7 = dragHandleColor, t$360$7 == null ? this.dragHandleColor : t$360$7), dragHandleSize: (t$360$8 = dragHandleSize, t$360$8 == null ? this.dragHandleSize : t$360$8), clipBehavior: (t$360$9 = clipBehavior, t$360$9 == null ? this.clipBehavior : t$360$9), constraints: (t$360$10 = constraints, t$360$10 == null ? this.constraints : t$360$10)});
    }
    static lerp(a, b, t) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18, t$360$19, t$360$20, t$360$21, t$360$22, t$360$23;
      if (a == b) {
        return a;
      }
      return new bottom_sheet_theme.BottomSheetThemeData.new({backgroundColor: ui.Color.lerp((t$360 = a, t$360 == null ? null : t$360.backgroundColor), (t$360$ = b, t$360$ == null ? null : t$360$.backgroundColor), t), surfaceTintColor: ui.Color.lerp((t$360$0 = a, t$360$0 == null ? null : t$360$0.surfaceTintColor), (t$360$1 = b, t$360$1 == null ? null : t$360$1.surfaceTintColor), t), elevation: ui.lerpDouble((t$360$2 = a, t$360$2 == null ? null : t$360$2.elevation), (t$360$3 = b, t$360$3 == null ? null : t$360$3.elevation), t), modalBackgroundColor: ui.Color.lerp((t$360$4 = a, t$360$4 == null ? null : t$360$4.modalBackgroundColor), (t$360$5 = b, t$360$5 == null ? null : t$360$5.modalBackgroundColor), t), modalBarrierColor: ui.Color.lerp((t$360$6 = a, t$360$6 == null ? null : t$360$6.modalBarrierColor), (t$360$7 = b, t$360$7 == null ? null : t$360$7.modalBarrierColor), t), shadowColor: ui.Color.lerp((t$360$8 = a, t$360$8 == null ? null : t$360$8.shadowColor), (t$360$9 = b, t$360$9 == null ? null : t$360$9.shadowColor), t), modalElevation: ui.lerpDouble((t$360$10 = a, t$360$10 == null ? null : t$360$10.modalElevation), (t$360$11 = b, t$360$11 == null ? null : t$360$11.modalElevation), t), shape: borders.ShapeBorder.lerp((t$360$12 = a, t$360$12 == null ? null : t$360$12.shape), (t$360$13 = b, t$360$13 == null ? null : t$360$13.shape), t), showDragHandle: t < 0.5 ? (t$360$14 = a, t$360$14 == null ? null : t$360$14.showDragHandle) : (t$360$15 = b, t$360$15 == null ? null : t$360$15.showDragHandle), dragHandleColor: ui.Color.lerp((t$360$16 = a, t$360$16 == null ? null : t$360$16.dragHandleColor), (t$360$17 = b, t$360$17 == null ? null : t$360$17.dragHandleColor), t), dragHandleSize: ui.Size.lerp((t$360$18 = a, t$360$18 == null ? null : t$360$18.dragHandleSize), (t$360$19 = b, t$360$19 == null ? null : t$360$19.dragHandleSize), t), clipBehavior: t < 0.5 ? (t$360$20 = a, t$360$20 == null ? null : t$360$20.clipBehavior) : (t$360$21 = b, t$360$21 == null ? null : t$360$21.clipBehavior), constraints: box.BoxConstraints.lerp((t$360$22 = a, t$360$22 == null ? null : t$360$22.constraints), (t$360$23 = b, t$360$23 == null ? null : t$360$23.constraints), t)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.surfaceTintColor, this.elevation, this.modalBackgroundColor, this.modalBarrierColor, this.shadowColor, this.modalElevation, this.shape, this.showDragHandle, this.dragHandleColor, this.dragHandleSize, this.clipBehavior, this.constraints);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return T.BottomSheetThemeData()[_is](other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && other.elevation == this.elevation && dart.equals(other.modalBackgroundColor, this.modalBackgroundColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.modalBarrierColor, this.modalBarrierColor) && other.modalElevation == this.modalElevation && dart.equals(other.shape, this.shape) && other.showDragHandle == this.showDragHandle && dart.equals(other.dragHandleColor, this.dragHandleColor) && dart.equals(other.dragHandleSize, this.dragHandleSize) && other.clipBehavior == this.clipBehavior && dart.equals(other.constraints, this.constraints);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("modalBackgroundColor", this.modalBackgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("modalBarrierColor", this.modalBarrierColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("modalElevation", this.modalElevation, {defaultValue: null}));
      properties.add(new (G.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (G.DiagnosticsPropertyOfbool()).new("showDragHandle", this.showDragHandle, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dragHandleColor", this.dragHandleColor, {defaultValue: null}));
      properties.add(new (G.DiagnosticsPropertyOfSize()).new("dragHandleSize", this.dragHandleSize, {defaultValue: null}));
      properties.add(new (G.DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: null}));
      properties.add(new (G.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
    }
  };
  (bottom_sheet_theme.BottomSheetThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let modalBackgroundColor = opts && 'modalBackgroundColor' in opts ? opts.modalBackgroundColor : null;
    let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let modalElevation = opts && 'modalElevation' in opts ? opts.modalElevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let showDragHandle = opts && 'showDragHandle' in opts ? opts.showDragHandle : null;
    let dragHandleColor = opts && 'dragHandleColor' in opts ? opts.dragHandleColor : null;
    let dragHandleSize = opts && 'dragHandleSize' in opts ? opts.dragHandleSize : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    this[backgroundColor$] = backgroundColor;
    this[surfaceTintColor$] = surfaceTintColor;
    this[elevation$] = elevation;
    this[modalBackgroundColor$] = modalBackgroundColor;
    this[modalBarrierColor$] = modalBarrierColor;
    this[shadowColor$] = shadowColor;
    this[modalElevation$] = modalElevation;
    this[shape$] = shape;
    this[showDragHandle$] = showDragHandle;
    this[dragHandleColor$] = dragHandleColor;
    this[dragHandleSize$] = dragHandleSize;
    this[clipBehavior$] = clipBehavior;
    this[constraints$] = constraints;
    ;
  }).prototype = bottom_sheet_theme.BottomSheetThemeData.prototype;
  dart.addTypeTests(bottom_sheet_theme.BottomSheetThemeData);
  dart.addRtiResources(bottom_sheet_theme.BottomSheetThemeData, ["flutter__src__material__bottom_sheet_theme|BottomSheetThemeData"]);
  dart.addTypeCaches(bottom_sheet_theme.BottomSheetThemeData);
  dart.setMethodSignature(bottom_sheet_theme.BottomSheetThemeData, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToBottomSheetThemeData()}, dart.getMethods(dart.global.Object.getPrototypeOf(bottom_sheet_theme.BottomSheetThemeData))));
  dart.setStaticMethodSignature(bottom_sheet_theme.BottomSheetThemeData, () => ['lerp']);
  dart.setLibraryUri(bottom_sheet_theme.BottomSheetThemeData, I[0]);
  dart.setFieldSignature(bottom_sheet_theme.BottomSheetThemeData, () => dart.global.Object.setPrototypeOf({
    backgroundColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    surfaceTintColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    elevation: {type: T.doubleN(), isConst: false, isFinal: true, libraryUri: I[2]},
    modalBackgroundColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    modalBarrierColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    shadowColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    modalElevation: {type: T.doubleN(), isConst: false, isFinal: true, libraryUri: I[2]},
    shape: {type: T.ShapeBorderN(), isConst: false, isFinal: true, libraryUri: I[3]},
    showDragHandle: {type: T.boolN(), isConst: false, isFinal: true, libraryUri: I[2]},
    dragHandleColor: {type: T.ColorN(), isConst: false, isFinal: true, libraryUri: I[1]},
    dragHandleSize: {type: T.SizeN(), isConst: false, isFinal: true, libraryUri: I[1]},
    clipBehavior: {type: T.ClipN(), isConst: false, isFinal: true, libraryUri: I[1]},
    constraints: {type: T.BoxConstraintsN(), isConst: false, isFinal: true, libraryUri: I[4]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(bottom_sheet_theme.BottomSheetThemeData))));
  dart.defineExtensionMethods(bottom_sheet_theme.BottomSheetThemeData, ['_equals']);
  dart.defineExtensionAccessors(bottom_sheet_theme.BottomSheetThemeData, ['hashCode']);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__material__bottom_sheet_theme|BottomSheetThemeData":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"ui|Size":{"ui|OffsetBase":[]},"ui|Clip":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"flutter__src__rendering__box|BoxConstraints":{"flutter__src__rendering__object|Constraints":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"}}'));
  dart.trackLibraries("packages/flutter/src/material/bottom_sheet_theme.dart", {
    "package:flutter/src/material/bottom_sheet_theme.dart": bottom_sheet_theme
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["bottom_sheet_theme.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/material/bottom_sheet_theme.dart.lib.js"}');
  // Exports:
  return {
    src__material__bottom_sheet_theme: bottom_sheet_theme
  };
}));

//# sourceMappingURL=bottom_sheet_theme.dart.lib.js.map

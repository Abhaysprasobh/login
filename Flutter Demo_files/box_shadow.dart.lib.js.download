// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/painting/box_shadow.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/painting/debug.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__painting__box_shadow_dart(dart_sdk, packages__flutter__src__painting__debug$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const debug = packages__flutter__src__painting__debug$46dart.src__painting__debug;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  var box_shadow = Object.create(dart.library);
  var $length = dartx.length;
  var $_get = dartx._get;
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))(),
    BoxShadow: () => (T.BoxShadow = dart.constFn(dart_rti.findType("flutter__src__painting__box_shadow|BoxShadow")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    doubleToBoxShadow: () => (T.doubleToBoxShadow = dart.constFn(dart_rti.findType("flutter__src__painting__box_shadow|BoxShadow(core|double)")))(),
    BoxShadowNAndBoxShadowNAnddoubleToBoxShadowN: () => (T.BoxShadowNAndBoxShadowNAnddoubleToBoxShadowN = dart.constFn(dart_rti.findType("flutter__src__painting__box_shadow|BoxShadow?(flutter__src__painting__box_shadow|BoxShadow?,flutter__src__painting__box_shadow|BoxShadow?,core|double)")))(),
    ListNOfBoxShadowAndListNOfBoxShadowAnddoubleToListNOfBoxShadow: () => (T.ListNOfBoxShadowAndListNOfBoxShadowAnddoubleToListNOfBoxShadow = dart.constFn(dart_rti.findType("core|List<flutter__src__painting__box_shadow|BoxShadow>?(core|List<flutter__src__painting__box_shadow|BoxShadow>?,core|List<flutter__src__painting__box_shadow|BoxShadow>?,core|double)")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    BlurStyle: () => (T.BlurStyle = dart.constFn(dart_rti.findType("ui|BlurStyle")))()
  };
  var G = {
    JSArrayOfBoxShadow: () => (G.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(T.BoxShadow())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        [Color_value]: 4278190080.0
      }, ui.Color.prototype));
    },
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      }, ui.Offset.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      }, ui.BlurStyle.prototype));
    }
  }, false);
  var C = Array(3).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/painting/box_shadow.dart",
    "package:flutter/src/painting/box_shadow.dart",
    "dart:core",
    "dart:ui"
  ];
  var spreadRadius$ = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var blurStyle$ = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var Color_value = dart.privateName(ui, "Color.value");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var _is = dart.privateName(dart_rti, "_is");
  box_shadow.BoxShadow = class BoxShadow extends ui.Shadow {
    get spreadRadius() {
      return this[spreadRadius$];
    }
    set spreadRadius(value) {
      super.spreadRadius = value;
    }
    get blurStyle() {
      return this[blurStyle$];
    }
    set blurStyle(value) {
      super.blurStyle = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : C[0] || CT.C0;
      let offset = opts && 'offset' in opts ? opts.offset : C[1] || CT.C1;
      let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : 0;
      let spreadRadius = opts && 'spreadRadius' in opts ? opts.spreadRadius : 0;
      let blurStyle = opts && 'blurStyle' in opts ? opts.blurStyle : C[2] || CT.C2;
      return new box_shadow.BoxShadow.new({color: color, offset: offset, blurRadius: blurRadius, spreadRadius: spreadRadius, blurStyle: blurStyle});
    }
    toPaint() {
      let t$360;
      let result = (t$360 = ui.Paint.new(), (() => {
        t$360.color = this.color;
        t$360.maskFilter = new ui.MaskFilter.blur(this.blurStyle, this.blurSigma);
        return t$360;
      })());
      if (!dart.fn(() => {
        if (debug.debugDisableShadows) {
          result.maskFilter = null;
        }
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[0], 60, 12, "() {\r\n      if (debugDisableShadows) {\r\n        result.maskFilter = null;\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    scale(factor) {
      return new box_shadow.BoxShadow.new({color: this.color, offset: this.offset['*'](factor), blurRadius: this.blurRadius * factor, spreadRadius: this.spreadRadius * factor, blurStyle: this.blurStyle});
    }
    static lerp(a, b, t) {
      if (a == b) {
        return a;
      }
      if (a == null) {
        return dart.nullCheck(b).scale(t);
      }
      if (b == null) {
        return a.scale(1.0 - t);
      }
      return new box_shadow.BoxShadow.new({color: dart.nullCheck(ui.Color.lerp(a.color, b.color, t)), offset: dart.nullCheck(ui.Offset.lerp(a.offset, b.offset, t)), blurRadius: dart.nullCheck(ui.lerpDouble(a.blurRadius, b.blurRadius, t)), spreadRadius: dart.nullCheck(ui.lerpDouble(a.spreadRadius, b.spreadRadius, t)), blurStyle: a.blurStyle === ui.BlurStyle.normal ? b.blurStyle : a.blurStyle});
    }
    static lerpList(a, b, t) {
      if (a == b) {
        return a;
      }
      a == null ? a = G.JSArrayOfBoxShadow().of([]) : null;
      b == null ? b = G.JSArrayOfBoxShadow().of([]) : null;
      let commonLength = math.min(T.int(), a[$length], b[$length]);
      return (() => {
        let t$360 = G.JSArrayOfBoxShadow().of([]);
        for (let i = 0; i < commonLength; i = i + 1)
          t$360.push(dart.nullCheck(box_shadow.BoxShadow.lerp(a[$_get](i), b[$_get](i), t)));
        for (let i = commonLength; i < a[$length]; i = i + 1)
          t$360.push(a[$_get](i).scale(1.0 - t));
        for (let i = commonLength; i < b[$length]; i = i + 1)
          t$360.push(b[$_get](i).scale(t));
        return t$360;
      })();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return T.BoxShadow()[_is](other) && dart.equals(other.color, this.color) && dart.equals(other.offset, this.offset) && other.blurRadius === this.blurRadius && other.spreadRadius === this.spreadRadius && other.blurStyle === this.blurStyle;
    }
    get hashCode() {
      return core.Object.hash(this.color, this.offset, this.blurRadius, this.spreadRadius, this.blurStyle);
    }
    toString() {
      return "BoxShadow(" + dart.str(this.color) + ", " + dart.str(this.offset) + ", " + debug$.debugFormatDouble(this.blurRadius) + ", " + debug$.debugFormatDouble(this.spreadRadius) + ", " + dart.str(this.blurStyle) + ")";
    }
  };
  (box_shadow.BoxShadow.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : C[0] || CT.C0;
    let offset = opts && 'offset' in opts ? opts.offset : C[1] || CT.C1;
    let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : 0;
    let spreadRadius = opts && 'spreadRadius' in opts ? opts.spreadRadius : 0;
    let blurStyle = opts && 'blurStyle' in opts ? opts.blurStyle : C[2] || CT.C2;
    this[spreadRadius$] = spreadRadius;
    this[blurStyle$] = blurStyle;
    dart.global.Object.getPrototypeOf(box_shadow.BoxShadow).new.call(this, {color: color, offset: offset, blurRadius: blurRadius});
    ;
  }).prototype = box_shadow.BoxShadow.prototype;
  dart.addTypeTests(box_shadow.BoxShadow);
  dart.addRtiResources(box_shadow.BoxShadow, ["flutter__src__painting__box_shadow|BoxShadow"]);
  dart.addTypeCaches(box_shadow.BoxShadow);
  dart.setMethodSignature(box_shadow.BoxShadow, () => dart.global.Object.setPrototypeOf({scale: T.doubleToBoxShadow()}, dart.getMethods(dart.global.Object.getPrototypeOf(box_shadow.BoxShadow))));
  dart.setStaticMethodSignature(box_shadow.BoxShadow, () => ['lerp', 'lerpList']);
  dart.setLibraryUri(box_shadow.BoxShadow, I[1]);
  dart.setFieldSignature(box_shadow.BoxShadow, () => dart.global.Object.setPrototypeOf({
    spreadRadius: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    blurStyle: {type: T.BlurStyle(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(box_shadow.BoxShadow))));
  dart.defineExtensionMethods(box_shadow.BoxShadow, ['_equals', 'toString']);
  dart.defineExtensionAccessors(box_shadow.BoxShadow, ['hashCode']);
  dart.moduleConstCaches.set("packages/flutter/src/painting/box_shadow.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__painting__box_shadow|BoxShadow":{"ui|Shadow":[]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"ui|BlurStyle":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]}}'));
  dart.trackLibraries("packages/flutter/src/painting/box_shadow.dart", {
    "package:flutter/src/painting/box_shadow.dart": box_shadow
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["box_shadow.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyCe;;;;;;IAKG;;;;;;;;;;;;;;;;AAUF,4CAAS;AACjB,sBAAQ;AACR,2BAAwB,uBAAK,gBAAW;;;AAC5C,WAAO,AAKN;AAJC,YAAI;AACK,UAAP,MAAM,cAAc;;AAEtB,cAAO;;AAET,YAAO,OAAM;IACf;UAIuB;AACrB,YAAO,sCACE,oBACC,AAAO,iBAAE,MAAM,eACX,AAAW,kBAAE,MAAM,gBACjB,AAAa,oBAAE,MAAM,aACxB;IAEf;gBASkC,GAAc,GAAU;AACxD,UAAI,AAAU,CAAC,IAAE,CAAC;AAChB,cAAO,EAAC;;AAEV,UAAI,AAAE,CAAD;AACH,cAAQ,AAAE,gBAAH,CAAC,QAAQ,CAAC;;AAEnB,UAAI,AAAE,CAAD;AACH,cAAO,AAAE,EAAD,OAAO,AAAI,MAAE,CAAC;;AAExB,YAAO,sCACiC,eAAzB,cAAK,AAAE,CAAD,QAAQ,AAAE,CAAD,QAAQ,CAAC,YACK,eAA3B,eAAK,AAAE,CAAD,SAAS,AAAE,CAAD,SAAS,CAAC,gBACe,eAAzC,cAAW,AAAE,CAAD,aAAa,AAAE,CAAD,aAAa,CAAC,kBACO,eAA7C,cAAW,AAAE,CAAD,eAAe,AAAE,CAAD,eAAe,CAAC,eAClD,AAAE,AAAU,CAAX,eAAwB,sBAAS,AAAE,CAAD,aAAa,AAAE,CAAD;IAEhE;oBAOkD,GAAoB,GAAU;AAC9E,UAAI,AAAU,CAAC,IAAE,CAAC;AAChB,cAAO,EAAC;;AAER,MAAF,CAAC,WAAD,IAAiB,gCAAf;AACA,MAAF,CAAC,WAAD,IAAiB,gCAAf;AACQ,yBAAoB,kBAAI,AAAE,CAAD,WAAS,AAAE,CAAD;AAC7C,YAAkB;;AAChB,iBAAS,IAAI,GAAG,AAAE,CAAD,GAAG,YAAY,EAAE,IAAA,AAAE,CAAD,GAAI;AAAgC,oCAAnB,0BAAK,AAAC,CAAA,QAAC,CAAC,GAAG,AAAC,CAAA,QAAC,CAAC,GAAG,CAAC;AACtE,iBAAS,IAAI,YAAY,EAAE,AAAE,CAAD,GAAG,AAAE,CAAD,WAAS,IAAA,AAAE,CAAD,GAAI;AAAQ,qBAAL,AAAC,CAAA,QAAC,CAAC,QAAQ,AAAI,MAAE,CAAC;AACnE,iBAAS,IAAI,YAAY,EAAE,AAAE,CAAD,GAAG,AAAE,CAAD,WAAS,IAAA,AAAE,CAAD,GAAI;AAAQ,qBAAL,AAAC,CAAA,QAAC,CAAC,QAAQ,CAAC;;;IAEjE;YAGwB;;AACtB,UAAI,AAAU,SAAM,KAAK;AACvB,cAAO;;AAET,uBAAU,iBAAN,KAAK,oBAAgB;AACvB,cAAO;;AAET,YAAa,AAKT,oBALG,KAAK,KACO,YAAZ,AAAM,KAAD,QAAU,eACF,YAAb,AAAM,KAAD,SAAW,gBAChB,AAAM,AAAW,KAAZ,gBAAe,mBACpB,AAAM,AAAa,KAAd,kBAAiB,qBACtB,AAAM,AAAU,KAAX,eAAc;IAC5B;;AAGoB,YAAO,kBAAK,YAAO,aAAQ,iBAAY,mBAAc;IAAU;;AAG9D,YAAA,AAA8G,yBAAlG,cAAK,gBAAG,eAAM,OAAI,yBAAkB,mBAAY,OAAI,yBAAkB,qBAAc,gBAAG,kBAAS;IAAE;;;QAhH3H;QACA;QACA;QACD;QACA;IADA;IACA;AALD,mFACE,KAAK,UACL,MAAM,cACN,UAAU;;EAGhB","file":"../../../../../../../../F:/packages/flutter/src/painting/box_shadow.dart.lib.js"}');
  // Exports:
  return {
    src__painting__box_shadow: box_shadow
  };
}));

//# sourceMappingURL=box_shadow.dart.lib.js.map

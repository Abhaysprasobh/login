// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/material_color_utilities/palettes/core_palette.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/palettes/tonal_palette.dart', 'packages/material_color_utilities/hct/cam16.dart'], (function load__packages__material_color_utilities__palettes__core_palette_dart(dart_sdk, packages__material_color_utilities__palettes__tonal_palette$46dart, packages__material_color_utilities__hct__cam16$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const tonal_palette = packages__material_color_utilities__palettes__tonal_palette$46dart.palettes__tonal_palette;
  const cam16 = packages__material_color_utilities__hct__cam16$46dart.hct__cam16;
  var core_palette = Object.create(dart.library);
  var $length = dartx.length;
  var $addAll = dartx.addAll;
  var $sublist = dartx.sublist;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    CorePalette: () => (T.CorePalette = dart.constFn(dart_rti.findType("material_color_utilities__palettes__core_palette|CorePalette")))(),
    intToCorePalette: () => (T.intToCorePalette = dart.constFn(dart_rti.findType("material_color_utilities__palettes__core_palette|CorePalette(core|int)")))(),
    VoidToListOfint: () => (T.VoidToListOfint = dart.constFn(dart_rti.findType("core|List<core|int>()")))(),
    TonalPalette: () => (T.TonalPalette = dart.constFn(dart_rti.findType("material_color_utilities__palettes__tonal_palette|TonalPalette")))()
  };
  var G = {
    ListOfint: () => (G.ListOfint = dart.constFn(core.List$(T.int())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/Users/abhay/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.8.0/lib/palettes/core_palette.dart",
    "package:material_color_utilities/palettes/core_palette.dart",
    "dart:core",
    "package:material_color_utilities/palettes/tonal_palette.dart"
  ];
  var primary = dart.privateName(core_palette, "CorePalette.primary");
  var secondary = dart.privateName(core_palette, "CorePalette.secondary");
  var tertiary = dart.privateName(core_palette, "CorePalette.tertiary");
  var neutral = dart.privateName(core_palette, "CorePalette.neutral");
  var neutralVariant = dart.privateName(core_palette, "CorePalette.neutralVariant");
  var error = dart.privateName(core_palette, "CorePalette.error");
  var _is = dart.privateName(dart_rti, "_is");
  core_palette.CorePalette = class CorePalette extends core.Object {
    get primary() {
      return this[primary];
    }
    set primary(value) {
      super.primary = value;
    }
    get secondary() {
      return this[secondary];
    }
    set secondary(value) {
      super.secondary = value;
    }
    get tertiary() {
      return this[tertiary];
    }
    set tertiary(value) {
      super.tertiary = value;
    }
    get neutral() {
      return this[neutral];
    }
    set neutral(value) {
      super.neutral = value;
    }
    get neutralVariant() {
      return this[neutralVariant];
    }
    set neutralVariant(value) {
      super.neutralVariant = value;
    }
    get error() {
      return this[error];
    }
    set error(value) {
      super.error = value;
    }
    static of(argb) {
      let cam = cam16.Cam16.fromInt(argb);
      return new core_palette.CorePalette.__(cam.hue, cam.chroma);
    }
    static ['_#_#tearOff'](hue, chroma) {
      return new core_palette.CorePalette.__(hue, chroma);
    }
    static contentOf(argb) {
      let cam = cam16.Cam16.fromInt(argb);
      return new core_palette.CorePalette._contentOf(cam.hue, cam.chroma);
    }
    static ['_#_contentOf#tearOff'](hue, chroma) {
      return new core_palette.CorePalette._contentOf(hue, chroma);
    }
    static ['_#fromList#tearOff'](colors) {
      return new core_palette.CorePalette.fromList(colors);
    }
    asList() {
      return (() => {
        let t$360 = G.ListOfint().of(this.primary.asList);
        t$360[$addAll](this.secondary.asList);
        t$360[$addAll](this.tertiary.asList);
        t$360[$addAll](this.neutral.asList);
        t$360[$addAll](this.neutralVariant.asList);
        return t$360;
      })();
    }
    _equals(other) {
      if (other == null) return false;
      return T.CorePalette()[_is](other) && dart.equals(this.primary, other.primary) && dart.equals(this.secondary, other.secondary) && dart.equals(this.tertiary, other.tertiary) && dart.equals(this.neutral, other.neutral) && dart.equals(this.neutralVariant, other.neutralVariant) && dart.equals(this.error, other.error);
    }
    get hashCode() {
      return core.Object.hash(this.primary, this.secondary, this.tertiary, this.neutral, this.neutralVariant, this.error);
    }
    toString() {
      return "primary: " + dart.str(this.primary) + "\n" + "secondary: " + dart.str(this.secondary) + "\n" + "tertiary: " + dart.str(this.tertiary) + "\n" + "neutral: " + dart.str(this.neutral) + "\n" + "neutralVariant: " + dart.str(this.neutralVariant) + "\n" + "error: " + dart.str(this.error) + "\n";
    }
  };
  (core_palette.CorePalette.__ = function(hue, chroma) {
    this[error] = tonal_palette.TonalPalette.of(25.0, 84.0);
    this[primary] = tonal_palette.TonalPalette.of(hue, math.max(T.double(), 48.0, chroma));
    this[secondary] = tonal_palette.TonalPalette.of(hue, 16.0);
    this[tertiary] = tonal_palette.TonalPalette.of(hue + 60, 24.0);
    this[neutral] = tonal_palette.TonalPalette.of(hue, 4.0);
    this[neutralVariant] = tonal_palette.TonalPalette.of(hue, 8.0);
    ;
  }).prototype = core_palette.CorePalette.prototype;
  (core_palette.CorePalette._contentOf = function(hue, chroma) {
    this[error] = tonal_palette.TonalPalette.of(25.0, 84.0);
    this[primary] = tonal_palette.TonalPalette.of(hue, chroma);
    this[secondary] = tonal_palette.TonalPalette.of(hue, chroma / 3);
    this[tertiary] = tonal_palette.TonalPalette.of(hue + 60, chroma / 2);
    this[neutral] = tonal_palette.TonalPalette.of(hue, math.min(T.double(), chroma / 12, 4.0));
    this[neutralVariant] = tonal_palette.TonalPalette.of(hue, math.min(T.double(), chroma / 6, 8.0));
    ;
  }).prototype = core_palette.CorePalette.prototype;
  (core_palette.CorePalette.fromList = function(colors) {
    this[error] = tonal_palette.TonalPalette.of(25.0, 84.0);
    if (!(colors[$length] === 5 * tonal_palette.TonalPalette.commonSize)) dart.assertFailed(null, I[0], 65, 16, "colors.length == size * TonalPalette.commonSize");
    this[primary] = tonal_palette.TonalPalette.fromList(core_palette._getPartition(colors, 0, tonal_palette.TonalPalette.commonSize));
    this[secondary] = tonal_palette.TonalPalette.fromList(core_palette._getPartition(colors, 1, tonal_palette.TonalPalette.commonSize));
    this[tertiary] = tonal_palette.TonalPalette.fromList(core_palette._getPartition(colors, 2, tonal_palette.TonalPalette.commonSize));
    this[neutral] = tonal_palette.TonalPalette.fromList(core_palette._getPartition(colors, 3, tonal_palette.TonalPalette.commonSize));
    this[neutralVariant] = tonal_palette.TonalPalette.fromList(core_palette._getPartition(colors, 4, tonal_palette.TonalPalette.commonSize));
    ;
  }).prototype = core_palette.CorePalette.prototype;
  dart.addTypeTests(core_palette.CorePalette);
  dart.addRtiResources(core_palette.CorePalette, ["material_color_utilities__palettes__core_palette|CorePalette"]);
  dart.addTypeCaches(core_palette.CorePalette);
  dart.setMethodSignature(core_palette.CorePalette, () => dart.global.Object.setPrototypeOf({asList: T.VoidToListOfint()}, dart.getMethods(dart.global.Object.getPrototypeOf(core_palette.CorePalette))));
  dart.setStaticMethodSignature(core_palette.CorePalette, () => ['of', 'contentOf']);
  dart.setLibraryUri(core_palette.CorePalette, I[1]);
  dart.setFieldSignature(core_palette.CorePalette, () => dart.global.Object.setPrototypeOf({
    primary: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]},
    secondary: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]},
    tertiary: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]},
    neutral: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]},
    neutralVariant: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]},
    error: {type: T.TonalPalette(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(core_palette.CorePalette))));
  dart.setStaticFieldSignature(core_palette.CorePalette, () => ['size']);
  dart.defineExtensionMethods(core_palette.CorePalette, ['_equals', 'toString']);
  dart.defineExtensionAccessors(core_palette.CorePalette, ['hashCode']);
  dart.defineLazy(core_palette.CorePalette, {
    /*core_palette.CorePalette.size*/get size() {
      return 5;
    }
  }, false);
  core_palette._getPartition = function _getPartition(list, partitionNumber, partitionSize) {
    return list[$sublist](partitionNumber * partitionSize, (partitionNumber + 1) * partitionSize);
  };
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]}}'));
  dart.trackLibraries("packages/material_color_utilities/palettes/core_palette.dart", {
    "package:material_color_utilities/palettes/core_palette.dart": core_palette
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["core_palette.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0BqB;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;cAGO;AAClB,gBAAY,oBAAQ,IAAI;AAC9B,YAAmB,iCAAE,AAAI,GAAD,MAAM,AAAI,GAAD;IACnC;;;;qBAUiC;AACzB,gBAAY,oBAAQ,IAAI;AAC9B,YAAmB,yCAAW,AAAI,GAAD,MAAM,AAAI,GAAD;IAC5C;;;;;;;;AA6BsB;qCACb,AAAQ;AACE,uBAAV;AACS,uBAAT;AACQ,uBAAR;AACe,uBAAf;;;IACJ;YAGmB;;AACpB,YAAM,AAKiC,sBALvC,KAAK,KACG,YAAR,cAAW,AAAM,KAAD,aACN,YAAV,gBAAa,AAAM,KAAD,eACT,YAAT,eAAY,AAAM,KAAD,cACT,YAAR,cAAW,AAAM,KAAD,aACD,YAAf,qBAAkB,AAAM,KAAD,oBACjB,YAAN,YAAS,AAAM,KAAD;IAAM;;AAGJ,YAAO,kBACrB,cACA,gBACA,eACA,cACA,qBACA;IACD;;AAIH,YAAO,wBAAW,gBAAO,OACrB,yBAAa,kBAAS,OACtB,wBAAY,iBAAQ,OACpB,uBAAW,gBAAO,OAClB,8BAAkB,uBAAc,OAChC,qBAAS,cAAK;IACpB;;0CA5EqB,KAAY;IARd,cAAqB,8BAAG,MAAI;IASjC,gBAAe,8BAAG,GAAG,EAAO,qBAAI,MAAI,MAAM;IACxC,kBAAe,8BAAG,GAAG,EAAE;IACxB,iBAAe,8BAAG,AAAI,GAAD,GAAG,IAAI;IAC7B,gBAAe,8BAAG,GAAG,EAAE;IAChB,uBAAe,8BAAG,GAAG,EAAE;;EAAE;kDAQhB,KAAY;IArBvB,cAAqB,8BAAG,MAAI;IAsBjC,gBAAe,8BAAG,GAAG,EAAE,MAAM;IAC3B,kBAAe,8BAAG,GAAG,EAAE,AAAO,MAAD,GAAG;IACjC,iBAAe,8BAAG,AAAI,GAAD,GAAG,IAAI,AAAO,MAAD,GAAG;IACtC,gBAAe,8BAAG,GAAG,EAAO,qBAAI,AAAO,MAAD,GAAG,IAAI;IACtC,uBAAe,8BAAG,GAAG,EAAO,qBAAI,AAAO,MAAD,GAAG,GAAG;;EAAG;gDAMrC;IAhCZ,cAAqB,8BAAG,MAAI;UAiClC,AAAO,AAAO,MAAR,cAAgB,IAAe;IACpC,gBAAe,oCACnB,2BAAc,MAAM,EAAE,GAAgB;IAChC,kBAAe,oCACrB,2BAAc,MAAM,EAAE,GAAgB;IACjC,iBAAe,oCACpB,2BAAc,MAAM,EAAE,GAAgB;IAClC,gBAAe,oCACnB,2BAAc,MAAM,EAAE,GAAgB;IAC3B,uBAAe,oCAC1B,2BAAc,MAAM,EAAE,GAAgB;;EAAY;;;;;;;;;;;;;;;;;;;MAlD/C,6BAAI;;;;sDAsGL,MAAU,iBAAqB;AAC3C,UAAO,AAAK,KAAD,WACT,AAAgB,eAAD,GAAG,aAAa,EACT,CAArB,AAAgB,eAAD,GAAG,KAAK,aAAa;EAEzC","file":"../../../../../../../../../../../../F:/packages/material_color_utilities/palettes/core_palette.dart.lib.js"}');
  // Exports:
  return {
    palettes__core_palette: core_palette
  };
}));

//# sourceMappingURL=core_palette.dart.lib.js.map

// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/painting/decoration.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__painting__decoration_dart(dart_sdk, packages__flutter__src__foundation__object$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var decoration = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))(),
    EdgeInsetsGeometry: () => (T.EdgeInsetsGeometry = dart.constFn(dart_rti.findType("flutter__src__painting__edge_insets|EdgeInsetsGeometry")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    DecorationNAnddoubleToDecorationN: () => (T.DecorationNAnddoubleToDecorationN = dart.constFn(dart_rti.findType("flutter__src__painting__decoration|Decoration?(flutter__src__painting__decoration|Decoration?,core|double)")))(),
    DecorationNAndDecorationNAnddoubleToDecorationN: () => (T.DecorationNAndDecorationNAnddoubleToDecorationN = dart.constFn(dart_rti.findType("flutter__src__painting__decoration|Decoration?(flutter__src__painting__decoration|Decoration?,flutter__src__painting__decoration|Decoration?,core|double)")))(),
    SizeAndOffset__Tobool: () => (T.SizeAndOffset__Tobool = dart.constFn(dart_rti.findType("core|bool(ui|Size,ui|Offset{textDirection:ui|TextDirection?})")))(),
    RectAndTextDirectionToPath: () => (T.RectAndTextDirectionToPath = dart.constFn(dart_rti.findType("ui|Path(ui|Rect,ui|TextDirection)")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    VoidToNvoid: () => (T.VoidToNvoid = dart.constFn(dart_rti.findType("~()?")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/painting/decoration.dart"];
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  decoration.Decoration = class Decoration extends Object_Diagnosticable$36 {
    toStringShort() {
      return object.objectRuntimeType(this, "Decoration");
    }
    debugAssertIsValid() {
      return true;
    }
    get padding() {
      return edge_insets.EdgeInsets.zero;
    }
    get isComplex() {
      return false;
    }
    lerpFrom(a, t) {
      return null;
    }
    lerpTo(b, t) {
      return null;
    }
    static lerp(a, b, t) {
      let t$360, t$360$, t$360$0, t$361, t$361$, t$360$1;
      if (a == b) {
        return a;
      }
      if (a == null) {
        t$360 = dart.nullCheck(b).lerpFrom(null, t);
        return t$360 == null ? b : t$360;
      }
      if (b == null) {
        t$360$ = a.lerpTo(null, t);
        return t$360$ == null ? a : t$360$;
      }
      if (t === 0.0) {
        return a;
      }
      if (t === 1.0) {
        return b;
      }
      t$360$1 = (t$360$0 = b.lerpFrom(a, t), t$360$0 == null ? a.lerpTo(b, t) : t$360$0);
      return t$360$1 == null ? t < 0.5 ? (t$361 = a.lerpTo(null, t * 2.0), t$361 == null ? a : t$361) : (t$361$ = b.lerpFrom(null, (t - 0.5) * 2.0), t$361$ == null ? b : t$361$) : t$360$1;
    }
    hitTest(size, position, opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return true;
    }
    getClipPath(rect, textDirection) {
      dart.throw(new core.UnsupportedError.new(object.objectRuntimeType(this, "This Decoration subclass") + " does not expect to be used for clipping."));
    }
  };
  (decoration.Decoration.new = function() {
    ;
  }).prototype = decoration.Decoration.prototype;
  dart.addTypeTests(decoration.Decoration);
  dart.addRtiResources(decoration.Decoration, ["flutter__src__painting__decoration|Decoration"]);
  dart.addTypeCaches(decoration.Decoration);
  dart.setMethodSignature(decoration.Decoration, () => dart.global.Object.setPrototypeOf({
    debugAssertIsValid: T.VoidTobool(),
    lerpFrom: T.DecorationNAnddoubleToDecorationN(),
    lerpTo: T.DecorationNAnddoubleToDecorationN(),
    hitTest: T.SizeAndOffset__Tobool(),
    getClipPath: T.RectAndTextDirectionToPath()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(decoration.Decoration))));
  dart.setStaticMethodSignature(decoration.Decoration, () => ['lerp']);
  dart.setGetterSignature(decoration.Decoration, () => dart.global.Object.setPrototypeOf({
    padding: T.EdgeInsetsGeometry(),
    isComplex: T.bool()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(decoration.Decoration))));
  dart.setLibraryUri(decoration.Decoration, I[0]);
  var onChanged$ = dart.privateName(decoration, "BoxPainter.onChanged");
  decoration.BoxPainter = class BoxPainter extends core.Object {
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    dispose() {
    }
  };
  (decoration.BoxPainter.new = function(onChanged = null) {
    this[onChanged$] = onChanged;
    ;
  }).prototype = decoration.BoxPainter.prototype;
  dart.addTypeTests(decoration.BoxPainter);
  dart.addRtiResources(decoration.BoxPainter, ["flutter__src__painting__decoration|BoxPainter"]);
  dart.addTypeCaches(decoration.BoxPainter);
  dart.setMethodSignature(decoration.BoxPainter, () => dart.global.Object.setPrototypeOf({dispose: T.VoidTovoid()}, dart.getMethods(dart.global.Object.getPrototypeOf(decoration.BoxPainter))));
  dart.setLibraryUri(decoration.BoxPainter, I[0]);
  dart.setFieldSignature(decoration.BoxPainter, () => dart.global.Object.setPrototypeOf({onChanged: {type: T.VoidToNvoid(), isConst: false, isFinal: true}}, dart.getFields(dart.global.Object.getPrototypeOf(decoration.BoxPainter))));
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"flutter__src__painting__decoration|Decoration":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"ui|Size":{"ui|OffsetBase":[]},"ui|Offset":{"ui|OffsetBase":[]},"ui|TextDirection":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]}}'));
  dart.trackLibraries("packages/flutter/src/painting/decoration.dart", {
    "package:flutter/src/painting/decoration.dart": decoration
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["decoration.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+B4B,sCAAkB,MAAM;IAAa;;AASlC;IAAI;;AAqBC,YAAW;IAAI;;AAG3B;IAAK;aA4BM,GAAU;AAAM;IAAI;WA6BtB,GAAU;AAAM;IAAI;gBASf,GAAe,GAAU;;AAC3D,UAAI,AAAU,CAAC,IAAE,CAAC;AAChB,cAAO,EAAC;;AAEV,UAAI,AAAE,CAAD;AACH,gBAAQ,AAAE,eAAH,CAAC,WAAW,MAAM,CAAC;cAAhB,iBAAqB,CAAC;;AAElC,UAAI,AAAE,CAAD;AACH,iBAAO,AAAE,CAAD,QAAQ,MAAM,CAAC;cAAd,kBAAmB,CAAC;;AAE/B,UAAI,AAAE,CAAD,KAAI;AACP,cAAO,EAAC;;AAEV,UAAI,AAAE,CAAD,KAAI;AACP,cAAO,EAAC;;AAEV,iBACI,UADG,AAAE,CAAD,UAAU,CAAC,EAAE,CAAC,GAAb,kBACF,AAAE,CAAD,QAAQ,CAAC,EAAE,CAAC;YAAhB,mBACI,AAAE,CAAD,GAAG,OAA+B,QAAxB,AAAE,CAAD,QAAQ,MAAM,AAAE,CAAD,GAAG,MAAjB,gBAAyB,CAAC,aAAuC,SAAlC,AAAE,CAAD,UAAU,MAAgB,CAAT,AAAE,CAAD,GAAG,OAAO,MAA3B,iBAAmC,CAAC;IAC5F;YAiBkB,MAAa;UAA2B;AAAoB;IAAI;gBAoB5D,MAAoB;AACxC,iBAAM,8BAAoB,AAA8F,yBAA5E,MAAM,8BAA4B;IAChF;;;;EAhKkB;;;;;;;;;;;;;;;;;;;IAkNE;;;;;;;IAOH;;;IA3CM;;EAAW","file":"../../../../../../../../F:/packages/flutter/src/painting/decoration.dart.lib.js"}');
  // Exports:
  return {
    src__painting__decoration: decoration
  };
}));

//# sourceMappingURL=decoration.dart.lib.js.map

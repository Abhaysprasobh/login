// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/collection/src/equality.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/collection/src/comparators.dart'], (function load__packages__collection__src__equality_dart(dart_sdk, packages__collection__src__comparators$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const comparators = packages__collection__src__comparators$46dart.src__comparators;
  var equality$ = Object.create(dart.library);
  var $hashCode = dartx.hashCode;
  var $iterator = dartx.iterator;
  var $rightShift = dartx['>>'];
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $keys = dartx.keys;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T$ = {
    VoidToEqualityOfE: () => (T$.VoidToEqualityOfE = dart.constFn(dart_rti.findType("collection__src__equality|Equality<0^>()<core|Object?>")))(),
    Never: () => (T$.Never = dart.constFn(dart_rti.findType("0&")))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(dart_rti.findType("collection__src__equality|DefaultEquality<0&>")))(),
    ObjectNAndObjectNTobool: () => (T$.ObjectNAndObjectNTobool = dart.constFn(dart_rti.findType("core|bool(core|Object?,core|Object?)")))(),
    ObjectNToint: () => (T$.ObjectNToint = dart.constFn(dart_rti.findType("core|int(core|Object?)")))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart_rti.findType("core|bool(core|Object?)")))(),
    int: () => (T$.int = dart.constFn(dart_rti.findType("core|int")))(),
    _MapEntry: () => (T$._MapEntry = dart.constFn(dart_rti.findType("collection__src__equality|_MapEntry")))(),
    MapEquality: () => (T$.MapEquality = dart.constFn(dart_rti.findType("collection__src__equality|MapEquality<@,@>")))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart_rti.findType("core|Object?")))(),
    Set: () => (T$.Set = dart.constFn(dart_rti.findType("core|Set<@>")))(),
    Map: () => (T$.Map = dart.constFn(dart_rti.findType("core|Map<@,@>")))(),
    List: () => (T$.List = dart.constFn(dart_rti.findType("core|List<@>")))(),
    Iterable: () => (T$.Iterable = dart.constFn(dart_rti.findType("core|Iterable<@>")))(),
    Equality: () => (T$.Equality = dart.constFn(dart_rti.findType("collection__src__equality|Equality<@>")))(),
    bool: () => (T$.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    String: () => (T$.String = dart.constFn(dart_rti.findType("core|String")))()
  };
  var G = {
    DefaultEqualityOfNever: () => (G.DefaultEqualityOfNever = dart.constFn(equality$.DefaultEquality$(T$.Never())))(),
    LinkedMapOf_MapEntry$int: () => (G.LinkedMapOf_MapEntry$int = dart.constFn(_js_helper.LinkedMap$(T$._MapEntry(), T$.int())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        $ti: T$.DefaultEqualityOfNever()
      }, G.DefaultEqualityOfNever().prototype));
    }
  }, false);
  var C = [void 0];
  var I = [
    "package:collection/src/equality.dart",
    "dart:core"
  ];
  const _is_Equality_default = Symbol('_is_Equality_default');
  equality$.Equality$ = dart.generic(E => {
    class Equality extends core.Object {
      static ['_#new#tearOff'](E) {
        return new (equality$.DefaultEquality$(E)).new();
      }
    }
    (Equality[dart.mixinNew] = function() {
    }).prototype = Equality.prototype;
    dart.addTypeTests(Equality);
    Equality.prototype[_is_Equality_default] = true;
    dart.addRtiResources(Equality, ["collection__src__equality|Equality"]);
    dart.addTypeCaches(Equality);
    dart.setStaticMethodSignature(Equality, () => ['new']);
    dart.setLibraryUri(Equality, I[0]);
    return Equality;
  });
  equality$.Equality = equality$.Equality$();
  dart.addTypeTests(equality$.Equality, _is_Equality_default);
  var _comparisonKey = dart.privateName(equality$, "_comparisonKey");
  var _inner = dart.privateName(equality$, "_inner");
  var _eval = dart.privateName(dart_rti, "_eval");
  var _bind = dart.privateName(dart_rti, "_bind");
  var _as = dart.privateName(dart_rti, "_as");
  var _is = dart.privateName(dart_rti, "_is");
  const _is_EqualityBy_default = Symbol('_is_EqualityBy_default');
  equality$.EqualityBy$ = dart.generic((E, F) => {
    var __t$EqualityByOfE$F = () => (__t$EqualityByOfE$F = dart.constFn(E[_eval]("@<0>")[_bind](F)[_eval]("collection__src__equality|EqualityBy<1,2>")))();
    var __t$EToF = () => (__t$EToF = dart.constFn(E[_eval]("@<0>")[_bind](F)[_eval]("2(1)")))();
    var __t$EqualityOfF = () => (__t$EqualityOfF = dart.constFn(F[_eval]("collection__src__equality|Equality<0>")))();
    class EqualityBy extends core.Object {
      static ['_#new#tearOff'](E, F, comparisonKey, inner = C[0] || CT.C0) {
        return new (equality$.EqualityBy$(E, F)).new(comparisonKey, inner);
      }
      equals(e1, e2) {
        let t$360, t$360$;
        E[_as](e1);
        E[_as](e2);
        return this[_inner].equals((t$360 = e1, this[_comparisonKey](t$360)), (t$360$ = e2, this[_comparisonKey](t$360$)));
      }
      hash(e) {
        let t$360;
        E[_as](e);
        return this[_inner].hash((t$360 = e, this[_comparisonKey](t$360)));
      }
      isValidKey(o) {
        let t$360;
        if (E[_is](o)) {
          let value = (t$360 = o, this[_comparisonKey](t$360));
          return this[_inner].isValidKey(value);
        }
        return false;
      }
    }
    (EqualityBy.new = function(comparisonKey, inner = C[0] || CT.C0) {
      this[_comparisonKey] = comparisonKey;
      this[_inner] = inner;
      this.$ti = this.$ti || __t$EqualityByOfE$F();
      ;
    }).prototype = EqualityBy.prototype;
    dart.addTypeTests(EqualityBy);
    EqualityBy.prototype[_is_EqualityBy_default] = true;
    dart.addRtiResources(EqualityBy, ["collection__src__equality|EqualityBy", "collection__src__equality|Equality"]);
    dart.addTypeCaches(EqualityBy);
    dart.setMethodSignature(EqualityBy, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(EqualityBy))));
    dart.setLibraryUri(EqualityBy, I[0]);
    dart.setFieldSignature(EqualityBy, () => dart.global.Object.setPrototypeOf({
      [_comparisonKey]: {type: __t$EToF(), isConst: false, isFinal: true},
      [_inner]: {type: __t$EqualityOfF(), isConst: false, isFinal: true, libraryUri: I[0]}
    }, dart.getFields(dart.global.Object.getPrototypeOf(EqualityBy))));
    return EqualityBy;
  });
  equality$.EqualityBy = equality$.EqualityBy$();
  dart.addTypeTests(equality$.EqualityBy, _is_EqualityBy_default);
  const _is_DefaultEquality_default = Symbol('_is_DefaultEquality_default');
  equality$.DefaultEquality$ = dart.generic(E => {
    var __t$DefaultEqualityOfE = () => (__t$DefaultEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|DefaultEquality<0>")))();
    class DefaultEquality extends core.Object {
      static ['_#new#tearOff'](E) {
        return new (equality$.DefaultEquality$(E)).new();
      }
      equals(e1, e2) {
        return dart.equals(e1, e2);
      }
      hash(e) {
        return dart.hashCode(e);
      }
      isValidKey(o) {
        return true;
      }
    }
    (DefaultEquality.new = function() {
      this.$ti = this.$ti || __t$DefaultEqualityOfE();
      ;
    }).prototype = DefaultEquality.prototype;
    dart.addTypeTests(DefaultEquality);
    DefaultEquality.prototype[_is_DefaultEquality_default] = true;
    dart.addRtiResources(DefaultEquality, ["collection__src__equality|DefaultEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(DefaultEquality);
    dart.setMethodSignature(DefaultEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(DefaultEquality))));
    dart.setLibraryUri(DefaultEquality, I[0]);
    return DefaultEquality;
  });
  equality$.DefaultEquality = equality$.DefaultEquality$();
  dart.addTypeTests(equality$.DefaultEquality, _is_DefaultEquality_default);
  const _is_IdentityEquality_default = Symbol('_is_IdentityEquality_default');
  equality$.IdentityEquality$ = dart.generic(E => {
    var __t$IdentityEqualityOfE = () => (__t$IdentityEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|IdentityEquality<0>")))();
    class IdentityEquality extends core.Object {
      static ['_#new#tearOff'](E) {
        return new (equality$.IdentityEquality$(E)).new();
      }
      equals(e1, e2) {
        E[_as](e1);
        E[_as](e2);
        return core.identical(e1, e2);
      }
      hash(e) {
        E[_as](e);
        return core.identityHashCode(e);
      }
      isValidKey(o) {
        return true;
      }
    }
    (IdentityEquality.new = function() {
      this.$ti = this.$ti || __t$IdentityEqualityOfE();
      ;
    }).prototype = IdentityEquality.prototype;
    dart.addTypeTests(IdentityEquality);
    IdentityEquality.prototype[_is_IdentityEquality_default] = true;
    dart.addRtiResources(IdentityEquality, ["collection__src__equality|IdentityEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(IdentityEquality);
    dart.setMethodSignature(IdentityEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(IdentityEquality))));
    dart.setLibraryUri(IdentityEquality, I[0]);
    return IdentityEquality;
  });
  equality$.IdentityEquality = equality$.IdentityEquality$();
  dart.addTypeTests(equality$.IdentityEquality, _is_IdentityEquality_default);
  var _elementEquality = dart.privateName(equality$, "IterableEquality._elementEquality");
  var _elementEquality$ = dart.privateName(equality$, "_elementEquality");
  const _is_IterableEquality_default = Symbol('_is_IterableEquality_default');
  equality$.IterableEquality$ = dart.generic(E => {
    var __t$IterableEqualityOfE = () => (__t$IterableEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|IterableEquality<0>")))();
    var __t$IterableNOfE = () => (__t$IterableNOfE = dart.constFn(E[_eval]("core|Iterable<0>?")))();
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(E[_eval]("core|Iterable<0>")))();
    var __t$EqualityOfEN = () => (__t$EqualityOfEN = dart.constFn(E[_eval]("collection__src__equality|Equality<0?>")))();
    class IterableEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
        return new (equality$.IterableEquality$(E)).new(elementEquality);
      }
      equals(elements1, elements2) {
        __t$IterableNOfE()[_as](elements1);
        __t$IterableNOfE()[_as](elements2);
        if (elements1 == elements2) return true;
        if (elements1 == null || elements2 == null) return false;
        let it1 = elements1[$iterator];
        let it2 = elements2[$iterator];
        while (true) {
          let hasNext = it1.moveNext();
          if (hasNext !== it2.moveNext()) return false;
          if (!hasNext) return true;
          if (!this[_elementEquality$].equals(it1.current, it2.current)) return false;
        }
      }
      hash(elements) {
        __t$IterableNOfE()[_as](elements);
        if (elements == null) return dart.hashCode(null);
        let hash = 0;
        for (let element of elements) {
          let c = this[_elementEquality$].hash(element);
          hash = (hash + c & 2147483647) >>> 0;
          hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
          hash = (hash ^ hash[$rightShift](6)) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return __t$IterableOfE()[_is](o);
      }
    }
    (IterableEquality.new = function(elementEquality = C[0] || CT.C0) {
      this[_elementEquality] = elementEquality;
      this.$ti = this.$ti || __t$IterableEqualityOfE();
      ;
    }).prototype = IterableEquality.prototype;
    dart.addTypeTests(IterableEquality);
    IterableEquality.prototype[_is_IterableEquality_default] = true;
    dart.addRtiResources(IterableEquality, ["collection__src__equality|IterableEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(IterableEquality);
    dart.setMethodSignature(IterableEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(IterableEquality))));
    dart.setLibraryUri(IterableEquality, I[0]);
    dart.setFieldSignature(IterableEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {type: __t$EqualityOfEN(), isConst: false, isFinal: true, libraryUri: I[0]}}, dart.getFields(dart.global.Object.getPrototypeOf(IterableEquality))));
    return IterableEquality;
  });
  equality$.IterableEquality = equality$.IterableEquality$();
  dart.addTypeTests(equality$.IterableEquality, _is_IterableEquality_default);
  var _elementEquality$0 = dart.privateName(equality$, "ListEquality._elementEquality");
  const _is_ListEquality_default = Symbol('_is_ListEquality_default');
  equality$.ListEquality$ = dart.generic(E => {
    var __t$ListEqualityOfE = () => (__t$ListEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|ListEquality<0>")))();
    var __t$ListNOfE = () => (__t$ListNOfE = dart.constFn(E[_eval]("core|List<0>?")))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(E[_eval]("core|List<0>")))();
    var __t$EqualityOfE = () => (__t$EqualityOfE = dart.constFn(E[_eval]("collection__src__equality|Equality<0>")))();
    class ListEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality$0];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
        return new (equality$.ListEquality$(E)).new(elementEquality);
      }
      equals(list1, list2) {
        __t$ListNOfE()[_as](list1);
        __t$ListNOfE()[_as](list2);
        if (list1 == list2) return true;
        if (list1 == null || list2 == null) return false;
        let length = list1[$length];
        if (length !== list2[$length]) return false;
        for (let i = 0; i < length; i = i + 1) {
          if (!this[_elementEquality$].equals(list1[$_get](i), list2[$_get](i))) return false;
        }
        return true;
      }
      hash(list) {
        __t$ListNOfE()[_as](list);
        if (list == null) return dart.hashCode(null);
        let hash = 0;
        for (let i = 0; i < list[$length]; i = i + 1) {
          let c = this[_elementEquality$].hash(list[$_get](i));
          hash = (hash + c & 2147483647) >>> 0;
          hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
          hash = (hash ^ hash[$rightShift](6)) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return __t$ListOfE()[_is](o);
      }
    }
    (ListEquality.new = function(elementEquality = C[0] || CT.C0) {
      this[_elementEquality$0] = elementEquality;
      this.$ti = this.$ti || __t$ListEqualityOfE();
      ;
    }).prototype = ListEquality.prototype;
    dart.addTypeTests(ListEquality);
    ListEquality.prototype[_is_ListEquality_default] = true;
    dart.addRtiResources(ListEquality, ["collection__src__equality|ListEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(ListEquality);
    dart.setMethodSignature(ListEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(ListEquality))));
    dart.setLibraryUri(ListEquality, I[0]);
    dart.setFieldSignature(ListEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {type: __t$EqualityOfE(), isConst: false, isFinal: true, libraryUri: I[0]}}, dart.getFields(dart.global.Object.getPrototypeOf(ListEquality))));
    return ListEquality;
  });
  equality$.ListEquality = equality$.ListEquality$();
  dart.addTypeTests(equality$.ListEquality, _is_ListEquality_default);
  var _elementEquality$1 = dart.privateName(equality$, "_UnorderedEquality._elementEquality");
  const _is__UnorderedEquality_default = Symbol('_is__UnorderedEquality_default');
  equality$._UnorderedEquality$ = dart.generic((E, T) => {
    var __t$_UnorderedEqualityOfE$T = () => (__t$_UnorderedEqualityOfE$T = dart.constFn(E[_eval]("@<0>")[_bind](T)[_eval]("collection__src__equality|_UnorderedEquality<1,2>")))();
    var __t$EAndETobool = () => (__t$EAndETobool = dart.constFn(E[_eval]("core|bool(0,0)")))();
    var __t$EToint = () => (__t$EToint = dart.constFn(E[_eval]("core|int(0)")))();
    var __t$EqualityOfE = () => (__t$EqualityOfE = dart.constFn(E[_eval]("collection__src__equality|Equality<0>")))();
    var __t$TN = () => (__t$TN = dart.constFn(T[_eval]("0?")))();
    var __t$HashMapOfE$int = () => (__t$HashMapOfE$int = dart.constFn(collection.HashMap$(E, T$.int())))();
    class _UnorderedEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality$1];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      equals(elements1, elements2) {
        let t$360;
        __t$TN()[_as](elements1);
        __t$TN()[_as](elements2);
        if (elements1 == elements2) return true;
        if (elements1 == null || elements2 == null) return false;
        let counts = __t$HashMapOfE$int().new({equals: __t$EAndETobool()[_as](dart.bind(this[_elementEquality$], 'equals')), hashCode: __t$EToint()[_as](dart.bind(this[_elementEquality$], 'hash')), isValidKey: dart.bind(this[_elementEquality$], 'isValidKey')});
        let length = 0;
        for (let e of elements1) {
          let count = (t$360 = counts[$_get](e), t$360 == null ? 0 : t$360);
          counts[$_set](e, count + 1);
          length = length + 1;
        }
        for (let e of elements2) {
          let count = counts[$_get](e);
          if (count == null || count === 0) return false;
          counts[$_set](e, dart.notNull(count) - 1);
          length = length - 1;
        }
        return length === 0;
      }
      hash(elements) {
        __t$TN()[_as](elements);
        if (elements == null) return dart.hashCode(null);
        let hash = 0;
        for (let element of elements) {
          let c = this[_elementEquality$].hash(element);
          hash = (hash + c & 2147483647) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
    }
    (_UnorderedEquality.new = function(_elementEquality) {
      this[_elementEquality$1] = _elementEquality;
      this.$ti = this.$ti || __t$_UnorderedEqualityOfE$T();
      ;
    }).prototype = _UnorderedEquality.prototype;
    dart.addTypeTests(_UnorderedEquality);
    _UnorderedEquality.prototype[_is__UnorderedEquality_default] = true;
    dart.addRtiResources(_UnorderedEquality, ["collection__src__equality|_UnorderedEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(_UnorderedEquality);
    dart.setMethodSignature(_UnorderedEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(_UnorderedEquality))));
    dart.setLibraryUri(_UnorderedEquality, I[0]);
    dart.setFieldSignature(_UnorderedEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {type: __t$EqualityOfE(), isConst: false, isFinal: true, libraryUri: I[0]}}, dart.getFields(dart.global.Object.getPrototypeOf(_UnorderedEquality))));
    return _UnorderedEquality;
  });
  equality$._UnorderedEquality = equality$._UnorderedEquality$();
  dart.addTypeTests(equality$._UnorderedEquality, _is__UnorderedEquality_default);
  const _is_UnorderedIterableEquality_default = Symbol('_is_UnorderedIterableEquality_default');
  equality$.UnorderedIterableEquality$ = dart.generic(E => {
    var __t$UnorderedIterableEqualityOfE = () => (__t$UnorderedIterableEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|UnorderedIterableEquality<0>")))();
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(E[_eval]("core|Iterable<0>")))();
    class UnorderedIterableEquality extends equality$._UnorderedEquality$(E, E[_eval]("core|Iterable<0>")) {
      static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
        return new (equality$.UnorderedIterableEquality$(E)).new(elementEquality);
      }
      isValidKey(o) {
        return __t$IterableOfE()[_is](o);
      }
    }
    (UnorderedIterableEquality.new = function(elementEquality = C[0] || CT.C0) {
      this.$ti = this.$ti || __t$UnorderedIterableEqualityOfE();
      dart.global.Object.getPrototypeOf(UnorderedIterableEquality).new.call(this, elementEquality);
      ;
    }).prototype = UnorderedIterableEquality.prototype;
    dart.addTypeTests(UnorderedIterableEquality);
    UnorderedIterableEquality.prototype[_is_UnorderedIterableEquality_default] = true;
    dart.addRtiResources(UnorderedIterableEquality, ["collection__src__equality|UnorderedIterableEquality"]);
    dart.addTypeCaches(UnorderedIterableEquality);
    dart.setMethodSignature(UnorderedIterableEquality, () => dart.global.Object.setPrototypeOf({isValidKey: T$.ObjectNTobool()}, dart.getMethods(dart.global.Object.getPrototypeOf(UnorderedIterableEquality))));
    dart.setLibraryUri(UnorderedIterableEquality, I[0]);
    return UnorderedIterableEquality;
  });
  equality$.UnorderedIterableEquality = equality$.UnorderedIterableEquality$();
  dart.addTypeTests(equality$.UnorderedIterableEquality, _is_UnorderedIterableEquality_default);
  const _is_SetEquality_default = Symbol('_is_SetEquality_default');
  equality$.SetEquality$ = dart.generic(E => {
    var __t$SetEqualityOfE = () => (__t$SetEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|SetEquality<0>")))();
    var __t$SetOfE = () => (__t$SetOfE = dart.constFn(E[_eval]("core|Set<0>")))();
    class SetEquality extends equality$._UnorderedEquality$(E, E[_eval]("core|Set<0>")) {
      static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
        return new (equality$.SetEquality$(E)).new(elementEquality);
      }
      isValidKey(o) {
        return __t$SetOfE()[_is](o);
      }
    }
    (SetEquality.new = function(elementEquality = C[0] || CT.C0) {
      this.$ti = this.$ti || __t$SetEqualityOfE();
      dart.global.Object.getPrototypeOf(SetEquality).new.call(this, elementEquality);
      ;
    }).prototype = SetEquality.prototype;
    dart.addTypeTests(SetEquality);
    SetEquality.prototype[_is_SetEquality_default] = true;
    dart.addRtiResources(SetEquality, ["collection__src__equality|SetEquality"]);
    dart.addTypeCaches(SetEquality);
    dart.setMethodSignature(SetEquality, () => dart.global.Object.setPrototypeOf({isValidKey: T$.ObjectNTobool()}, dart.getMethods(dart.global.Object.getPrototypeOf(SetEquality))));
    dart.setLibraryUri(SetEquality, I[0]);
    return SetEquality;
  });
  equality$.SetEquality = equality$.SetEquality$();
  dart.addTypeTests(equality$.SetEquality, _is_SetEquality_default);
  var _keyEquality = dart.privateName(equality$, "_keyEquality");
  var _valueEquality = dart.privateName(equality$, "_valueEquality");
  equality$._MapEntry = class _MapEntry extends core.Object {
    static ['_#new#tearOff'](equality, key, value) {
      return new equality$._MapEntry.new(equality, key, value);
    }
    get hashCode() {
      return (3 * this.equality[_keyEquality].hash(this.key) + 7 * this.equality[_valueEquality].hash(this.value) & 2147483647) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return T$._MapEntry()[_is](other) && this.equality[_keyEquality].equals(this.key, other.key) && this.equality[_valueEquality].equals(this.value, other.value);
    }
  };
  (equality$._MapEntry.new = function(equality, key, value) {
    this.equality = equality;
    this.key = key;
    this.value = value;
    ;
  }).prototype = equality$._MapEntry.prototype;
  dart.addTypeTests(equality$._MapEntry);
  dart.addRtiResources(equality$._MapEntry, ["collection__src__equality|_MapEntry"]);
  dart.addTypeCaches(equality$._MapEntry);
  dart.setLibraryUri(equality$._MapEntry, I[0]);
  dart.setFieldSignature(equality$._MapEntry, () => dart.global.Object.setPrototypeOf({
    equality: {type: T$.MapEquality(), isConst: false, isFinal: true, libraryUri: I[0]},
    key: {type: T$.ObjectN(), isConst: false, isFinal: true, libraryUri: I[1]},
    value: {type: T$.ObjectN(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality$._MapEntry))));
  dart.defineExtensionMethods(equality$._MapEntry, ['_equals']);
  dart.defineExtensionAccessors(equality$._MapEntry, ['hashCode']);
  var _keyEquality$ = dart.privateName(equality$, "MapEquality._keyEquality");
  var _valueEquality$ = dart.privateName(equality$, "MapEquality._valueEquality");
  const _is_MapEquality_default = Symbol('_is_MapEquality_default');
  equality$.MapEquality$ = dart.generic((K, V) => {
    var __t$MapEqualityOfK$V = () => (__t$MapEqualityOfK$V = dart.constFn(K[_eval]("@<0>")[_bind](V)[_eval]("collection__src__equality|MapEquality<1,2>")))();
    var __t$MapNOfK$V = () => (__t$MapNOfK$V = dart.constFn(K[_eval]("@<0>")[_bind](V)[_eval]("core|Map<1,2>?")))();
    var __t$MapOfK$V = () => (__t$MapOfK$V = dart.constFn(K[_eval]("@<0>")[_bind](V)[_eval]("core|Map<1,2>")))();
    var __t$EqualityOfK = () => (__t$EqualityOfK = dart.constFn(K[_eval]("collection__src__equality|Equality<0>")))();
    var __t$EqualityOfV = () => (__t$EqualityOfV = dart.constFn(V[_eval]("collection__src__equality|Equality<0>")))();
    class MapEquality extends core.Object {
      get [_keyEquality]() {
        return this[_keyEquality$];
      }
      set [_keyEquality](value) {
        super[_keyEquality] = value;
      }
      get [_valueEquality]() {
        return this[_valueEquality$];
      }
      set [_valueEquality](value) {
        super[_valueEquality] = value;
      }
      static ['_#new#tearOff'](K, V, opts) {
        let keys = opts && 'keys' in opts ? opts.keys : C[0] || CT.C0;
        let values = opts && 'values' in opts ? opts.values : C[0] || CT.C0;
        return new (equality$.MapEquality$(K, V)).new({keys: keys, values: values});
      }
      equals(map1, map2) {
        let t$360;
        __t$MapNOfK$V()[_as](map1);
        __t$MapNOfK$V()[_as](map2);
        if (map1 == map2) return true;
        if (map1 == null || map2 == null) return false;
        let length = map1[$length];
        if (length !== map2[$length]) return false;
        let equalElementCounts = new (G.LinkedMapOf_MapEntry$int()).new();
        for (let key of map1[$keys]) {
          let entry = new equality$._MapEntry.new(this, key, map1[$_get](key));
          let count = (t$360 = equalElementCounts[$_get](entry), t$360 == null ? 0 : t$360);
          equalElementCounts[$_set](entry, count + 1);
        }
        for (let key of map2[$keys]) {
          let entry = new equality$._MapEntry.new(this, key, map2[$_get](key));
          let count = equalElementCounts[$_get](entry);
          if (count == null || count === 0) return false;
          equalElementCounts[$_set](entry, dart.notNull(count) - 1);
        }
        return true;
      }
      hash(map) {
        __t$MapNOfK$V()[_as](map);
        if (map == null) return dart.hashCode(null);
        let hash = 0;
        for (let key of map[$keys]) {
          let keyHash = this[_keyEquality].hash(key);
          let valueHash = this[_valueEquality].hash(V[_as](map[$_get](key)));
          hash = (hash + 3 * keyHash + 7 * valueHash & 2147483647) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return __t$MapOfK$V()[_is](o);
      }
    }
    (MapEquality.new = function(opts) {
      let keys = opts && 'keys' in opts ? opts.keys : C[0] || CT.C0;
      let values = opts && 'values' in opts ? opts.values : C[0] || CT.C0;
      this[_keyEquality$] = keys;
      this[_valueEquality$] = values;
      this.$ti = this.$ti || __t$MapEqualityOfK$V();
      ;
    }).prototype = MapEquality.prototype;
    dart.addTypeTests(MapEquality);
    MapEquality.prototype[_is_MapEquality_default] = true;
    dart.addRtiResources(MapEquality, ["collection__src__equality|MapEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(MapEquality);
    dart.setMethodSignature(MapEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(MapEquality))));
    dart.setLibraryUri(MapEquality, I[0]);
    dart.setFieldSignature(MapEquality, () => dart.global.Object.setPrototypeOf({
      [_keyEquality]: {type: __t$EqualityOfK(), isConst: false, isFinal: true, libraryUri: I[0]},
      [_valueEquality]: {type: __t$EqualityOfV(), isConst: false, isFinal: true, libraryUri: I[0]}
    }, dart.getFields(dart.global.Object.getPrototypeOf(MapEquality))));
    return MapEquality;
  });
  equality$.MapEquality = equality$.MapEquality$();
  dart.addTypeTests(equality$.MapEquality, _is_MapEquality_default);
  var _equalities = dart.privateName(equality$, "MultiEquality._equalities");
  var _equalities$ = dart.privateName(equality$, "_equalities");
  const _is_MultiEquality_default = Symbol('_is_MultiEquality_default');
  equality$.MultiEquality$ = dart.generic(E => {
    var __t$MultiEqualityOfE = () => (__t$MultiEqualityOfE = dart.constFn(E[_eval]("collection__src__equality|MultiEquality<0>")))();
    var __t$IterableOfEqualityOfE = () => (__t$IterableOfEqualityOfE = dart.constFn(E[_eval]("core|Iterable<collection__src__equality|Equality<0>>")))();
    class MultiEquality extends core.Object {
      get [_equalities$]() {
        return this[_equalities];
      }
      set [_equalities$](value) {
        super[_equalities$] = value;
      }
      static ['_#new#tearOff'](E, equalities) {
        return new (equality$.MultiEquality$(E)).new(equalities);
      }
      equals(e1, e2) {
        E[_as](e1);
        E[_as](e2);
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(e1)) return eq.isValidKey(e2) && eq.equals(e1, e2);
        }
        return false;
      }
      hash(e) {
        E[_as](e);
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(e)) return eq.hash(e);
        }
        return 0;
      }
      isValidKey(o) {
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(o)) return true;
        }
        return false;
      }
    }
    (MultiEquality.new = function(equalities) {
      this[_equalities] = equalities;
      this.$ti = this.$ti || __t$MultiEqualityOfE();
      ;
    }).prototype = MultiEquality.prototype;
    dart.addTypeTests(MultiEquality);
    MultiEquality.prototype[_is_MultiEquality_default] = true;
    dart.addRtiResources(MultiEquality, ["collection__src__equality|MultiEquality", "collection__src__equality|Equality"]);
    dart.addTypeCaches(MultiEquality);
    dart.setMethodSignature(MultiEquality, () => dart.global.Object.setPrototypeOf({
      equals: T$.ObjectNAndObjectNTobool(),
      hash: T$.ObjectNToint(),
      isValidKey: T$.ObjectNTobool()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(MultiEquality))));
    dart.setLibraryUri(MultiEquality, I[0]);
    dart.setFieldSignature(MultiEquality, () => dart.global.Object.setPrototypeOf({[_equalities$]: {type: __t$IterableOfEqualityOfE(), isConst: false, isFinal: true, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(MultiEquality))));
    return MultiEquality;
  });
  equality$.MultiEquality = equality$.MultiEquality$();
  dart.addTypeTests(equality$.MultiEquality, _is_MultiEquality_default);
  var _base = dart.privateName(equality$, "DeepCollectionEquality._base");
  var _unordered = dart.privateName(equality$, "DeepCollectionEquality._unordered");
  var _base$ = dart.privateName(equality$, "_base");
  var _unordered$ = dart.privateName(equality$, "_unordered");
  equality$.DeepCollectionEquality = class DeepCollectionEquality extends core.Object {
    get [_base$]() {
      return this[_base];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    get [_unordered$]() {
      return this[_unordered];
    }
    set [_unordered$](value) {
      super[_unordered$] = value;
    }
    static ['_#new#tearOff'](base = C[0] || CT.C0) {
      return new equality$.DeepCollectionEquality.new(base);
    }
    static ['_#unordered#tearOff'](base = C[0] || CT.C0) {
      return new equality$.DeepCollectionEquality.unordered(base);
    }
    equals(e1, e2) {
      if (T$.Set()[_is](e1)) {
        return T$.Set()[_is](e2) && new equality$.SetEquality.new(this).equals(e1, e2);
      }
      if (T$.Map()[_is](e1)) {
        return T$.Map()[_is](e2) && new equality$.MapEquality.new({keys: this, values: this}).equals(e1, e2);
      }
      if (!this[_unordered$]) {
        if (T$.List()[_is](e1)) {
          return T$.List()[_is](e2) && new equality$.ListEquality.new(this).equals(e1, e2);
        }
        if (T$.Iterable()[_is](e1)) {
          return T$.Iterable()[_is](e2) && new equality$.IterableEquality.new(this).equals(e1, e2);
        }
      } else if (T$.Iterable()[_is](e1)) {
        if (T$.List()[_is](e1) !== T$.List()[_is](e2)) return false;
        return T$.Iterable()[_is](e2) && new equality$.UnorderedIterableEquality.new(this).equals(e1, e2);
      }
      return this[_base$].equals(e1, e2);
    }
    hash(o) {
      if (T$.Set()[_is](o)) return new equality$.SetEquality.new(this).hash(o);
      if (T$.Map()[_is](o)) return new equality$.MapEquality.new({keys: this, values: this}).hash(o);
      if (!this[_unordered$]) {
        if (T$.List()[_is](o)) return new equality$.ListEquality.new(this).hash(o);
        if (T$.Iterable()[_is](o)) return new equality$.IterableEquality.new(this).hash(o);
      } else if (T$.Iterable()[_is](o)) {
        return new equality$.UnorderedIterableEquality.new(this).hash(o);
      }
      return this[_base$].hash(o);
    }
    isValidKey(o) {
      return T$.Iterable()[_is](o) || T$.Map()[_is](o) || this[_base$].isValidKey(o);
    }
  };
  (equality$.DeepCollectionEquality.new = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = false;
    ;
  }).prototype = equality$.DeepCollectionEquality.prototype;
  (equality$.DeepCollectionEquality.unordered = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = true;
    ;
  }).prototype = equality$.DeepCollectionEquality.prototype;
  dart.addTypeTests(equality$.DeepCollectionEquality);
  dart.addRtiResources(equality$.DeepCollectionEquality, ["collection__src__equality|DeepCollectionEquality", "collection__src__equality|Equality"]);
  dart.addTypeCaches(equality$.DeepCollectionEquality);
  dart.setMethodSignature(equality$.DeepCollectionEquality, () => dart.global.Object.setPrototypeOf({
    equals: T$.ObjectNAndObjectNTobool(),
    hash: T$.ObjectNToint(),
    isValidKey: T$.ObjectNTobool()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality$.DeepCollectionEquality))));
  dart.setLibraryUri(equality$.DeepCollectionEquality, I[0]);
  dart.setFieldSignature(equality$.DeepCollectionEquality, () => dart.global.Object.setPrototypeOf({
    [_base$]: {type: T$.Equality(), isConst: false, isFinal: true, libraryUri: I[0]},
    [_unordered$]: {type: T$.bool(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality$.DeepCollectionEquality))));
  equality$.CaseInsensitiveEquality = class CaseInsensitiveEquality extends core.Object {
    static ['_#new#tearOff']() {
      return new equality$.CaseInsensitiveEquality.new();
    }
    equals(string1, string2) {
      T$.String()[_as](string1);
      T$.String()[_as](string2);
      return comparators.equalsIgnoreAsciiCase(string1, string2);
    }
    hash(string) {
      T$.String()[_as](string);
      return comparators.hashIgnoreAsciiCase(string);
    }
    isValidKey(object) {
      return typeof object == 'string';
    }
  };
  (equality$.CaseInsensitiveEquality.new = function() {
    ;
  }).prototype = equality$.CaseInsensitiveEquality.prototype;
  dart.addTypeTests(equality$.CaseInsensitiveEquality);
  dart.addRtiResources(equality$.CaseInsensitiveEquality, ["collection__src__equality|CaseInsensitiveEquality", "collection__src__equality|Equality"]);
  dart.addTypeCaches(equality$.CaseInsensitiveEquality);
  dart.setMethodSignature(equality$.CaseInsensitiveEquality, () => dart.global.Object.setPrototypeOf({
    equals: T$.ObjectNAndObjectNTobool(),
    hash: T$.ObjectNToint(),
    isValidKey: T$.ObjectNTobool()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality$.CaseInsensitiveEquality))));
  dart.setLibraryUri(equality$.CaseInsensitiveEquality, I[0]);
  dart.defineLazy(equality$, {
    /*equality$._hashMask*/get _hashMask() {
      return 2147483647;
    }
  }, false);
  dart.moduleConstCaches.set("packages/collection/src/equality.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"collection__src__equality|Equality":{"Equality.E":"1"},"collection__src__equality|DefaultEquality":{"DefaultEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"collection__src__equality|EqualityBy":{"EqualityBy.E":"1","EqualityBy.F":"2","Equality.E":"1","collection__src__equality|Equality":["1"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"collection__src__equality|IdentityEquality":{"IdentityEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"collection__src__equality|IterableEquality":{"IterableEquality.E":"1","Equality.E":"core|Iterable<1>","collection__src__equality|Equality":["core|Iterable<1>"]},"core|Iterable":{"Iterable.E":"1"},"collection__src__equality|ListEquality":{"ListEquality.E":"1","Equality.E":"core|List<1>","collection__src__equality|Equality":["core|List<1>"]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"collection__src__equality|_UnorderedEquality":{"_UnorderedEquality.E":"1","_UnorderedEquality.T":"2","Equality.E":"2","collection__src__equality|Equality":["2"]},"collection__src__equality|UnorderedIterableEquality":{"UnorderedIterableEquality.E":"1","_UnorderedEquality.E":"1","_UnorderedEquality.T":"core|Iterable<1>","collection__src__equality|_UnorderedEquality":["1","core|Iterable<1>"],"Equality.E":"core|Iterable<1>","collection__src__equality|Equality":["core|Iterable<1>"]},"collection__src__equality|SetEquality":{"SetEquality.E":"1","_UnorderedEquality.E":"1","_UnorderedEquality.T":"core|Set<1>","collection__src__equality|_UnorderedEquality":["1","core|Set<1>"],"Equality.E":"core|Set<1>","collection__src__equality|Equality":["core|Set<1>"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__equality|MapEquality":{"MapEquality.K":"1","MapEquality.V":"2","Equality.E":"core|Map<1,2>","collection__src__equality|Equality":["core|Map<1,2>"]},"core|Map":{"Map.K":"1","Map.V":"2"},"collection__src__equality|MultiEquality":{"MultiEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"collection__src__equality|DeepCollectionEquality":{"Equality.E":"@","collection__src__equality|Equality":["@"]},"collection__src__equality|CaseInsensitiveEquality":{"Equality.E":"core|String","collection__src__equality|Equality":["core|String"]}}'));
  dart.trackLibraries("packages/collection/src/equality.dart", {
    "package:collection/src/equality.dart": equality$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["equality.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../F:/packages/collection/src/equality.dart.lib.js"}');
  // Exports:
  return {
    src__equality: equality$
  };
}));

//# sourceMappingURL=equality.dart.lib.js.map

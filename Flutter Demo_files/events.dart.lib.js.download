// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/gestures/events.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__gestures__events_dart(dart_sdk, packages__vector_math__vector_math_64$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var events = Object.create(dart.library);
  var $leftShift = dartx['<<'];
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    Offset: () => (T.Offset = dart.constFn(dart_rti.findType("ui|Offset")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    Matrix4NAndOffsetToOffset: () => (T.Matrix4NAndOffsetToOffset = dart.constFn(dart_rti.findType("ui|Offset(vector_math__vector_math_64|Matrix4?,ui|Offset)")))(),
    __ToOffset: () => (T.__ToOffset = dart.constFn(dart_rti.findType("ui|Offset({transform!vector_math__vector_math_64|Matrix4?,transformedEndPosition:ui|Offset?,untransformedDelta!ui|Offset,untransformedEndPosition!ui|Offset})")))(),
    Matrix4ToMatrix4: () => (T.Matrix4ToMatrix4 = dart.constFn(dart_rti.findType("vector_math__vector_math_64|Matrix4(vector_math__vector_math_64|Matrix4)")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    Duration: () => (T.Duration = dart.constFn(dart_rti.findType("core|Duration")))(),
    PointerDeviceKind: () => (T.PointerDeviceKind = dart.constFn(dart_rti.findType("ui|PointerDeviceKind")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    Matrix4N: () => (T.Matrix4N = dart.constFn(dart_rti.findType("vector_math__vector_math_64|Matrix4?")))(),
    PointerEventN: () => (T.PointerEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEvent?")))(),
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    OffsetN: () => (T.OffsetN = dart.constFn(dart_rti.findType("ui|Offset?")))(),
    __ToPointerAddedEvent: () => (T.__ToPointerAddedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerAddedEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerAddedEventN: () => (T.PointerAddedEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerAddedEvent?")))(),
    Matrix4NToPointerAddedEvent: () => (T.Matrix4NToPointerAddedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerAddedEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerAddedEvent: () => (T.PointerAddedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerAddedEvent")))(),
    Matrix4: () => (T.Matrix4 = dart.constFn(dart_rti.findType("vector_math__vector_math_64|Matrix4")))(),
    __ToPointerRemovedEvent: () => (T.__ToPointerRemovedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerRemovedEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerRemovedEventN: () => (T.PointerRemovedEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerRemovedEvent?")))(),
    Matrix4NToPointerRemovedEvent: () => (T.Matrix4NToPointerRemovedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerRemovedEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerRemovedEvent: () => (T.PointerRemovedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerRemovedEvent")))(),
    __ToPointerHoverEvent: () => (T.__ToPointerHoverEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerHoverEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerHoverEventN: () => (T.PointerHoverEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerHoverEvent?")))(),
    Matrix4NToPointerHoverEvent: () => (T.Matrix4NToPointerHoverEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerHoverEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerHoverEvent: () => (T.PointerHoverEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerHoverEvent")))(),
    __ToPointerEnterEvent: () => (T.__ToPointerEnterEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEnterEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerEnterEventN: () => (T.PointerEnterEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEnterEvent?")))(),
    PointerEventToPointerEnterEvent: () => (T.PointerEventToPointerEnterEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEnterEvent(flutter__src__gestures__events|PointerEvent)")))(),
    Matrix4NToPointerEnterEvent: () => (T.Matrix4NToPointerEnterEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEnterEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerEnterEvent: () => (T.PointerEnterEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerEnterEvent")))(),
    __ToPointerExitEvent: () => (T.__ToPointerExitEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerExitEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerExitEventN: () => (T.PointerExitEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerExitEvent?")))(),
    PointerEventToPointerExitEvent: () => (T.PointerEventToPointerExitEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerExitEvent(flutter__src__gestures__events|PointerEvent)")))(),
    Matrix4NToPointerExitEvent: () => (T.Matrix4NToPointerExitEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerExitEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerExitEvent: () => (T.PointerExitEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerExitEvent")))(),
    __ToPointerDownEvent: () => (T.__ToPointerDownEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerDownEventN: () => (T.PointerDownEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent?")))(),
    Matrix4NToPointerDownEvent: () => (T.Matrix4NToPointerDownEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerDownEvent: () => (T.PointerDownEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent")))(),
    __ToPointerMoveEvent: () => (T.__ToPointerMoveEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerMoveEventN: () => (T.PointerMoveEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent?")))(),
    Matrix4NToPointerMoveEvent: () => (T.Matrix4NToPointerMoveEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerMoveEvent: () => (T.PointerMoveEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent")))(),
    __ToPointerUpEvent: () => (T.__ToPointerUpEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,localPosition:ui|Offset?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerUpEventN: () => (T.PointerUpEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent?")))(),
    Matrix4NToPointerUpEvent: () => (T.Matrix4NToPointerUpEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerUpEvent: () => (T.PointerUpEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent")))(),
    __ToPointerScrollEvent: () => (T.__ToPointerScrollEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerScrollEventN: () => (T.PointerScrollEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollEvent?")))(),
    Matrix4NToPointerScrollEvent: () => (T.Matrix4NToPointerScrollEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerScrollEvent: () => (T.PointerScrollEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollEvent")))(),
    __ToPointerScrollInertiaCancelEvent: () => (T.__ToPointerScrollInertiaCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollInertiaCancelEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerScrollInertiaCancelEventN: () => (T.PointerScrollInertiaCancelEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollInertiaCancelEvent?")))(),
    Matrix4NToPointerScrollInertiaCancelEvent: () => (T.Matrix4NToPointerScrollInertiaCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollInertiaCancelEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerScrollInertiaCancelEvent: () => (T.PointerScrollInertiaCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScrollInertiaCancelEvent")))(),
    __ToPointerScaleEvent: () => (T.__ToPointerScaleEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScaleEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,scale:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerScaleEventN: () => (T.PointerScaleEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScaleEvent?")))(),
    Matrix4NToPointerScaleEvent: () => (T.Matrix4NToPointerScaleEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScaleEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerScaleEvent: () => (T.PointerScaleEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerScaleEvent")))(),
    __ToPointerPanZoomStartEvent: () => (T.__ToPointerPanZoomStartEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomStartEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerPanZoomStartEventN: () => (T.PointerPanZoomStartEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomStartEvent?")))(),
    Matrix4NToPointerPanZoomStartEvent: () => (T.Matrix4NToPointerPanZoomStartEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomStartEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerPanZoomStartEvent: () => (T.PointerPanZoomStartEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomStartEvent")))(),
    __ToPointerPanZoomUpdateEvent: () => (T.__ToPointerPanZoomUpdateEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomUpdateEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,localPan:ui|Offset?,localPanDelta:ui|Offset?,obscured:core|bool?,orientation:core|double?,pan:ui|Offset?,panDelta:ui|Offset?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,rotation:core|double?,scale:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerPanZoomUpdateEventN: () => (T.PointerPanZoomUpdateEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomUpdateEvent?")))(),
    Matrix4NToPointerPanZoomUpdateEvent: () => (T.Matrix4NToPointerPanZoomUpdateEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomUpdateEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerPanZoomUpdateEvent: () => (T.PointerPanZoomUpdateEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomUpdateEvent")))(),
    __ToPointerPanZoomEndEvent: () => (T.__ToPointerPanZoomEndEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomEndEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerPanZoomEndEventN: () => (T.PointerPanZoomEndEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomEndEvent?")))(),
    Matrix4NToPointerPanZoomEndEvent: () => (T.Matrix4NToPointerPanZoomEndEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomEndEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerPanZoomEndEvent: () => (T.PointerPanZoomEndEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomEndEvent")))(),
    __ToPointerCancelEvent: () => (T.__ToPointerCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent({buttons:core|int?,delta:ui|Offset?,device:core|int?,distance:core|double?,distanceMax:core|double?,embedderId:core|int?,kind:ui|PointerDeviceKind?,obscured:core|bool?,orientation:core|double?,pointer:core|int?,position:ui|Offset?,pressure:core|double?,pressureMax:core|double?,pressureMin:core|double?,radiusMajor:core|double?,radiusMax:core|double?,radiusMin:core|double?,radiusMinor:core|double?,size:core|double?,synthesized:core|bool?,tilt:core|double?,timeStamp:core|Duration?,viewId:core|int?})")))(),
    PointerCancelEventN: () => (T.PointerCancelEventN = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent?")))(),
    Matrix4NToPointerCancelEvent: () => (T.Matrix4NToPointerCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent(vector_math__vector_math_64|Matrix4?)")))(),
    PointerCancelEvent: () => (T.PointerCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent")))()
  };
  var G = {
    DiagnosticsPropertyOfOffset: () => (G.DiagnosticsPropertyOfOffset = dart.constFn(diagnostics.DiagnosticsProperty$(T.Offset())))(),
    DiagnosticsPropertyOfDuration: () => (G.DiagnosticsPropertyOfDuration = dart.constFn(diagnostics.DiagnosticsProperty$(T.Duration())))(),
    EnumPropertyOfPointerDeviceKind: () => (G.EnumPropertyOfPointerDeviceKind = dart.constFn(diagnostics.EnumProperty$(T.PointerDeviceKind())))(),
    DiagnosticsPropertyOfbool: () => (G.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(T.bool())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        [Duration__duration]: 0
      }, core.Duration.prototype));
    },
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "touch",
        [_Enum_index]: 0
      }, ui.PointerDeviceKind.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      }, ui.Offset.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "mouse",
        [_Enum_index]: 1
      }, ui.PointerDeviceKind.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "stylus",
        [_Enum_index]: 2
      }, ui.PointerDeviceKind.prototype));
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "invertedStylus",
        [_Enum_index]: 3
      }, ui.PointerDeviceKind.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "unknown",
        [_Enum_index]: 5
      }, ui.PointerDeviceKind.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "trackpad",
        [_Enum_index]: 4
      }, ui.PointerDeviceKind.prototype));
    }
  }, false);
  var C = Array(8).fill(void 0);
  var I = [
    "package:flutter/src/gestures/events.dart",
    "dart:core",
    "dart:ui",
    "package:vector_math/vector_math_64.dart",
    "file:///C:/src/flutter/packages/flutter/lib/src/gestures/events.dart"
  ];
  var viewId$ = dart.privateName(events, "PointerEvent.viewId");
  var embedderId$ = dart.privateName(events, "PointerEvent.embedderId");
  var timeStamp$ = dart.privateName(events, "PointerEvent.timeStamp");
  var pointer$ = dart.privateName(events, "PointerEvent.pointer");
  var kind$ = dart.privateName(events, "PointerEvent.kind");
  var device$ = dart.privateName(events, "PointerEvent.device");
  var position$ = dart.privateName(events, "PointerEvent.position");
  var delta$ = dart.privateName(events, "PointerEvent.delta");
  var buttons$ = dart.privateName(events, "PointerEvent.buttons");
  var down$ = dart.privateName(events, "PointerEvent.down");
  var obscured$ = dart.privateName(events, "PointerEvent.obscured");
  var pressure$ = dart.privateName(events, "PointerEvent.pressure");
  var pressureMin$ = dart.privateName(events, "PointerEvent.pressureMin");
  var pressureMax$ = dart.privateName(events, "PointerEvent.pressureMax");
  var distance$ = dart.privateName(events, "PointerEvent.distance");
  var distanceMax$ = dart.privateName(events, "PointerEvent.distanceMax");
  var size$ = dart.privateName(events, "PointerEvent.size");
  var radiusMajor$ = dart.privateName(events, "PointerEvent.radiusMajor");
  var radiusMinor$ = dart.privateName(events, "PointerEvent.radiusMinor");
  var radiusMin$ = dart.privateName(events, "PointerEvent.radiusMin");
  var radiusMax$ = dart.privateName(events, "PointerEvent.radiusMax");
  var orientation$ = dart.privateName(events, "PointerEvent.orientation");
  var tilt$ = dart.privateName(events, "PointerEvent.tilt");
  var platformData$ = dart.privateName(events, "PointerEvent.platformData");
  var synthesized$ = dart.privateName(events, "PointerEvent.synthesized");
  var transform$ = dart.privateName(events, "PointerEvent.transform");
  var original$ = dart.privateName(events, "PointerEvent.original");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  events.PointerEvent = class PointerEvent extends Object_Diagnosticable$36 {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    get embedderId() {
      return this[embedderId$];
    }
    set embedderId(value) {
      super.embedderId = value;
    }
    get timeStamp() {
      return this[timeStamp$];
    }
    set timeStamp(value) {
      super.timeStamp = value;
    }
    get pointer() {
      return this[pointer$];
    }
    set pointer(value) {
      super.pointer = value;
    }
    get kind() {
      return this[kind$];
    }
    set kind(value) {
      super.kind = value;
    }
    get device() {
      return this[device$];
    }
    set device(value) {
      super.device = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    get delta() {
      return this[delta$];
    }
    set delta(value) {
      super.delta = value;
    }
    get buttons() {
      return this[buttons$];
    }
    set buttons(value) {
      super.buttons = value;
    }
    get down() {
      return this[down$];
    }
    set down(value) {
      super.down = value;
    }
    get obscured() {
      return this[obscured$];
    }
    set obscured(value) {
      super.obscured = value;
    }
    get pressure() {
      return this[pressure$];
    }
    set pressure(value) {
      super.pressure = value;
    }
    get pressureMin() {
      return this[pressureMin$];
    }
    set pressureMin(value) {
      super.pressureMin = value;
    }
    get pressureMax() {
      return this[pressureMax$];
    }
    set pressureMax(value) {
      super.pressureMax = value;
    }
    get distance() {
      return this[distance$];
    }
    set distance(value) {
      super.distance = value;
    }
    get distanceMax() {
      return this[distanceMax$];
    }
    set distanceMax(value) {
      super.distanceMax = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get radiusMajor() {
      return this[radiusMajor$];
    }
    set radiusMajor(value) {
      super.radiusMajor = value;
    }
    get radiusMinor() {
      return this[radiusMinor$];
    }
    set radiusMinor(value) {
      super.radiusMinor = value;
    }
    get radiusMin() {
      return this[radiusMin$];
    }
    set radiusMin(value) {
      super.radiusMin = value;
    }
    get radiusMax() {
      return this[radiusMax$];
    }
    set radiusMax(value) {
      super.radiusMax = value;
    }
    get orientation() {
      return this[orientation$];
    }
    set orientation(value) {
      super.orientation = value;
    }
    get tilt() {
      return this[tilt$];
    }
    set tilt(value) {
      super.tilt = value;
    }
    get platformData() {
      return this[platformData$];
    }
    set platformData(value) {
      super.platformData = value;
    }
    get synthesized() {
      return this[synthesized$];
    }
    set synthesized(value) {
      super.synthesized = value;
    }
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get original() {
      return this[original$];
    }
    set original(value) {
      super.original = value;
    }
    get localPosition() {
      return this.position;
    }
    get localDelta() {
      return this.delta;
    }
    get distanceMin() {
      return 0.0;
    }
    static transformPosition(transform, position) {
      if (transform == null) {
        return position;
      }
      let position3 = vector_math_64.Vector3.new(position.dx, position.dy, 0.0);
      let transformed3 = transform.perspectiveTransform(position3);
      return new ui.Offset.new(transformed3.x, transformed3.y);
    }
    static transformDeltaViaPositions(opts) {
      let untransformedEndPosition = opts && 'untransformedEndPosition' in opts ? opts.untransformedEndPosition : null;
      let transformedEndPosition = opts && 'transformedEndPosition' in opts ? opts.transformedEndPosition : null;
      let untransformedDelta = opts && 'untransformedDelta' in opts ? opts.untransformedDelta : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      if (transform == null) {
        return untransformedDelta;
      }
      transformedEndPosition == null ? transformedEndPosition = events.PointerEvent.transformPosition(transform, untransformedEndPosition) : null;
      let transformedStartPosition = events.PointerEvent.transformPosition(transform, untransformedEndPosition['-'](untransformedDelta));
      return transformedEndPosition['-'](transformedStartPosition);
    }
    static removePerspectiveTransform(transform) {
      let t$360;
      let vector = vector_math_64.Vector4.new(0.0, 0.0, 1.0, 0.0);
      t$360 = transform.clone();
      return (() => {
        t$360.setColumn(2, vector);
        t$360.setRow(2, vector);
        return t$360;
      })();
    }
  };
  (events.PointerEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let down = opts && 'down' in opts ? opts.down : false;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressure = opts && 'pressure' in opts ? opts.pressure : 1;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let platformData = opts && 'platformData' in opts ? opts.platformData : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let original = opts && 'original' in opts ? opts.original : null;
    this[viewId$] = viewId;
    this[embedderId$] = embedderId;
    this[timeStamp$] = timeStamp;
    this[pointer$] = pointer;
    this[kind$] = kind;
    this[device$] = device;
    this[position$] = position;
    this[delta$] = delta;
    this[buttons$] = buttons;
    this[down$] = down;
    this[obscured$] = obscured;
    this[pressure$] = pressure;
    this[pressureMin$] = pressureMin;
    this[pressureMax$] = pressureMax;
    this[distance$] = distance;
    this[distanceMax$] = distanceMax;
    this[size$] = size;
    this[radiusMajor$] = radiusMajor;
    this[radiusMinor$] = radiusMinor;
    this[radiusMin$] = radiusMin;
    this[radiusMax$] = radiusMax;
    this[orientation$] = orientation;
    this[tilt$] = tilt;
    this[platformData$] = platformData;
    this[synthesized$] = synthesized;
    this[transform$] = transform;
    this[original$] = original;
    ;
  }).prototype = events.PointerEvent.prototype;
  dart.addTypeTests(events.PointerEvent);
  dart.addRtiResources(events.PointerEvent, ["flutter__src__gestures__events|PointerEvent"]);
  dart.addTypeCaches(events.PointerEvent);
  dart.setStaticMethodSignature(events.PointerEvent, () => ['transformPosition', 'transformDeltaViaPositions', 'removePerspectiveTransform']);
  dart.setGetterSignature(events.PointerEvent, () => dart.global.Object.setPrototypeOf({
    localPosition: T.Offset(),
    localDelta: T.Offset(),
    distanceMin: T.double()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(events.PointerEvent))));
  dart.setLibraryUri(events.PointerEvent, I[0]);
  dart.setFieldSignature(events.PointerEvent, () => dart.global.Object.setPrototypeOf({
    viewId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    embedderId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    timeStamp: {type: T.Duration(), isConst: false, isFinal: true, libraryUri: I[1]},
    pointer: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    kind: {type: T.PointerDeviceKind(), isConst: false, isFinal: true, libraryUri: I[2]},
    device: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    position: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    delta: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    buttons: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    down: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]},
    obscured: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]},
    pressure: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    pressureMin: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    pressureMax: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    distance: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    distanceMax: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    size: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    radiusMajor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    radiusMinor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    radiusMin: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    radiusMax: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    orientation: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    tilt: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    platformData: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    synthesized: {type: T.bool(), isConst: false, isFinal: true, libraryUri: I[1]},
    transform: {type: T.Matrix4N(), isConst: false, isFinal: true, libraryUri: I[3]},
    original: {type: T.PointerEventN(), isConst: false, isFinal: true, libraryUri: I[0]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events.PointerEvent))));
  events._PointerEventDescription = class _PointerEventDescription extends events.PointerEvent {};
  events._PointerEventDescription[dart.mixinOn] = PointerEvent => class _PointerEventDescription extends PointerEvent {
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("position", this.position));
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("localPosition", this.localPosition, {defaultValue: this.position, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("delta", this.delta, {defaultValue: ui.Offset.zero, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("localDelta", this.localDelta, {defaultValue: this.delta, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (G.DiagnosticsPropertyOfDuration()).new("timeStamp", this.timeStamp, {defaultValue: core.Duration.zero, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("pointer", this.pointer, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (G.EnumPropertyOfPointerDeviceKind()).new("kind", this.kind, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("device", this.device, {defaultValue: 0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("buttons", this.buttons, {defaultValue: 0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (G.DiagnosticsPropertyOfbool()).new("down", this.down, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("pressure", this.pressure, {defaultValue: 1.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("pressureMin", this.pressureMin, {defaultValue: 1.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("pressureMax", this.pressureMax, {defaultValue: 1.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("distance", this.distance, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("distanceMin", this.distanceMin, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("distanceMax", this.distanceMax, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("size", this.size, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("radiusMajor", this.radiusMajor, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("radiusMinor", this.radiusMinor, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("radiusMin", this.radiusMin, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("radiusMax", this.radiusMax, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("orientation", this.orientation, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.DoubleProperty.new("tilt", this.tilt, {defaultValue: 0.0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("platformData", this.platformData, {defaultValue: 0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.FlagProperty.new("obscured", {value: this.obscured, ifTrue: "obscured", level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.FlagProperty.new("synthesized", {value: this.synthesized, ifTrue: "synthesized", level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("embedderId", this.embedderId, {defaultValue: 0, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new diagnostics.IntProperty.new("viewId", this.viewId, {defaultValue: 0, level: diagnostics.DiagnosticLevel.debug}));
    }
    toStringFull() {
      return this.toString({minLevel: diagnostics.DiagnosticLevel.fine});
    }
  };
  dart.addTypeTests(events._PointerEventDescription);
  dart.addRtiResources(events._PointerEventDescription, ["flutter__src__gestures__events|_PointerEventDescription"]);
  dart.addTypeCaches(events._PointerEventDescription);
  dart.setMethodSignature(events._PointerEventDescription, () => dart.global.Object.setPrototypeOf({toStringFull: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._PointerEventDescription))));
  dart.setLibraryUri(events._PointerEventDescription, I[0]);
  events._AbstractPointerEvent = class _AbstractPointerEvent extends core.Object {};
  (events._AbstractPointerEvent.new = function() {
    ;
  }).prototype = events._AbstractPointerEvent.prototype;
  dart.addTypeTests(events._AbstractPointerEvent);
  dart.addRtiResources(events._AbstractPointerEvent, ["flutter__src__gestures__events|_AbstractPointerEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._AbstractPointerEvent);
  dart.setLibraryUri(events._AbstractPointerEvent, I[0]);
  var ___TransformedPointerEvent_localPosition = dart.privateName(events, "_#_TransformedPointerEvent#localPosition");
  var ___TransformedPointerEvent_localDelta = dart.privateName(events, "_#_TransformedPointerEvent#localDelta");
  const _AbstractPointerEvent_Diagnosticable$36 = class _AbstractPointerEvent_Diagnosticable extends events._AbstractPointerEvent {};
  (_AbstractPointerEvent_Diagnosticable$36.new = function() {
  }).prototype = _AbstractPointerEvent_Diagnosticable$36.prototype;
  dart.applyMixin(_AbstractPointerEvent_Diagnosticable$36, diagnostics.Diagnosticable);
  const _AbstractPointerEvent__PointerEventDescription$36 = class _AbstractPointerEvent__PointerEventDescription extends _AbstractPointerEvent_Diagnosticable$36 {};
  (_AbstractPointerEvent__PointerEventDescription$36.new = function() {
  }).prototype = _AbstractPointerEvent__PointerEventDescription$36.prototype;
  dart.applyMixin(_AbstractPointerEvent__PointerEventDescription$36, events._PointerEventDescription);
  events._TransformedPointerEvent = class _TransformedPointerEvent extends _AbstractPointerEvent__PointerEventDescription$36 {
    get embedderId() {
      return this.original.embedderId;
    }
    get timeStamp() {
      return this.original.timeStamp;
    }
    get pointer() {
      return this.original.pointer;
    }
    get kind() {
      return this.original.kind;
    }
    get device() {
      return this.original.device;
    }
    get position() {
      return this.original.position;
    }
    get delta() {
      return this.original.delta;
    }
    get buttons() {
      return this.original.buttons;
    }
    get down() {
      return this.original.down;
    }
    get obscured() {
      return this.original.obscured;
    }
    get pressure() {
      return this.original.pressure;
    }
    get pressureMin() {
      return this.original.pressureMin;
    }
    get pressureMax() {
      return this.original.pressureMax;
    }
    get distance() {
      return this.original.distance;
    }
    get distanceMin() {
      return 0.0;
    }
    get distanceMax() {
      return this.original.distanceMax;
    }
    get size() {
      return this.original.size;
    }
    get radiusMajor() {
      return this.original.radiusMajor;
    }
    get radiusMinor() {
      return this.original.radiusMinor;
    }
    get radiusMin() {
      return this.original.radiusMin;
    }
    get radiusMax() {
      return this.original.radiusMax;
    }
    get orientation() {
      return this.original.orientation;
    }
    get tilt() {
      return this.original.tilt;
    }
    get platformData() {
      return this.original.platformData;
    }
    get synthesized() {
      return this.original.synthesized;
    }
    get localPosition() {
      let t$361, t$360;
      t$360 = this[___TransformedPointerEvent_localPosition];
      return t$360 == null ? (t$361 = events.PointerEvent.transformPosition(this.transform, this.position), this[___TransformedPointerEvent_localPosition] == null ? this[___TransformedPointerEvent_localPosition] = t$361 : dart.throw(new _internal.LateError.fieldADI("localPosition"))) : t$360;
    }
    get localDelta() {
      let t$361, t$360;
      t$360 = this[___TransformedPointerEvent_localDelta];
      return t$360 == null ? (t$361 = events.PointerEvent.transformDeltaViaPositions({transform: this.transform, untransformedDelta: this.delta, untransformedEndPosition: this.position, transformedEndPosition: this.localPosition}), this[___TransformedPointerEvent_localDelta] == null ? this[___TransformedPointerEvent_localDelta] = t$361 : dart.throw(new _internal.LateError.fieldADI("localDelta"))) : t$360;
    }
    get viewId() {
      return this.original.viewId;
    }
  };
  (events._TransformedPointerEvent.new = function() {
    this[___TransformedPointerEvent_localPosition] = null;
    this[___TransformedPointerEvent_localDelta] = null;
    ;
  }).prototype = events._TransformedPointerEvent.prototype;
  dart.addTypeTests(events._TransformedPointerEvent);
  dart.addRtiResources(events._TransformedPointerEvent, ["flutter__src__gestures__events|_TransformedPointerEvent"]);
  dart.addTypeCaches(events._TransformedPointerEvent);
  dart.setGetterSignature(events._TransformedPointerEvent, () => dart.global.Object.setPrototypeOf({
    embedderId: T.int(),
    timeStamp: T.Duration(),
    pointer: T.int(),
    kind: T.PointerDeviceKind(),
    device: T.int(),
    position: T.Offset(),
    delta: T.Offset(),
    buttons: T.int(),
    down: T.bool(),
    obscured: T.bool(),
    pressure: T.double(),
    pressureMin: T.double(),
    pressureMax: T.double(),
    distance: T.double(),
    distanceMin: T.double(),
    distanceMax: T.double(),
    size: T.double(),
    radiusMajor: T.double(),
    radiusMinor: T.double(),
    radiusMin: T.double(),
    radiusMax: T.double(),
    orientation: T.double(),
    tilt: T.double(),
    platformData: T.int(),
    synthesized: T.bool(),
    localPosition: T.Offset(),
    localDelta: T.Offset(),
    viewId: T.int()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(events._TransformedPointerEvent))));
  dart.setLibraryUri(events._TransformedPointerEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerEvent, () => dart.global.Object.setPrototypeOf({
    [___TransformedPointerEvent_localPosition]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [___TransformedPointerEvent_localDelta]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerEvent))));
  events._CopyPointerAddedEvent = class _CopyPointerAddedEvent extends events.PointerEvent {};
  events._CopyPointerAddedEvent[dart.mixinOn] = PointerEvent => class _CopyPointerAddedEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerAddedEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), obscured: (t$360$3 = obscured, t$360$3 == null ? this.obscured : t$360$3), pressureMin: (t$360$4 = pressureMin, t$360$4 == null ? this.pressureMin : t$360$4), pressureMax: (t$360$5 = pressureMax, t$360$5 == null ? this.pressureMax : t$360$5), distance: (t$360$6 = distance, t$360$6 == null ? this.distance : t$360$6), distanceMax: (t$360$7 = distanceMax, t$360$7 == null ? this.distanceMax : t$360$7), radiusMin: (t$360$8 = radiusMin, t$360$8 == null ? this.radiusMin : t$360$8), radiusMax: (t$360$9 = radiusMax, t$360$9 == null ? this.radiusMax : t$360$9), orientation: (t$360$10 = orientation, t$360$10 == null ? this.orientation : t$360$10), tilt: (t$360$11 = tilt, t$360$11 == null ? this.tilt : t$360$11), embedderId: (t$360$12 = embedderId, t$360$12 == null ? this.embedderId : t$360$12)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerAddedEvent);
  dart.addRtiResources(events._CopyPointerAddedEvent, ["flutter__src__gestures__events|_CopyPointerAddedEvent"]);
  dart.addTypeCaches(events._CopyPointerAddedEvent);
  dart.setMethodSignature(events._CopyPointerAddedEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerAddedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerAddedEvent))));
  dart.setLibraryUri(events._CopyPointerAddedEvent, I[0]);
  var _as = dart.privateName(dart_rti, "_as");
  const PointerEvent__PointerEventDescription$36 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36, events._PointerEventDescription);
  const PointerEvent__CopyPointerAddedEvent$36 = class PointerEvent__CopyPointerAddedEvent extends PointerEvent__PointerEventDescription$36 {};
  (PointerEvent__CopyPointerAddedEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerAddedEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerAddedEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerAddedEvent$36, events._CopyPointerAddedEvent);
  events.PointerAddedEvent = class PointerAddedEvent extends PointerEvent__CopyPointerAddedEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerAddedEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerAddedEvent.new((t$360 = T.PointerAddedEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerAddedEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    dart.global.Object.getPrototypeOf(events.PointerAddedEvent).new.call(this, {pressure: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    ;
  }).prototype = events.PointerAddedEvent.prototype;
  dart.addTypeTests(events.PointerAddedEvent);
  dart.addRtiResources(events.PointerAddedEvent, ["flutter__src__gestures__events|PointerAddedEvent"]);
  dart.addTypeCaches(events.PointerAddedEvent);
  dart.setMethodSignature(events.PointerAddedEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerAddedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerAddedEvent))));
  dart.setLibraryUri(events.PointerAddedEvent, I[0]);
  var original$0 = dart.privateName(events, "_TransformedPointerAddedEvent.original");
  var transform$0 = dart.privateName(events, "_TransformedPointerAddedEvent.transform");
  const _TransformedPointerEvent__CopyPointerAddedEvent$36 = class _TransformedPointerEvent__CopyPointerAddedEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerAddedEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerAddedEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerAddedEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerAddedEvent$36, events._CopyPointerAddedEvent);
  events._TransformedPointerAddedEvent = class _TransformedPointerAddedEvent extends _TransformedPointerEvent__CopyPointerAddedEvent$36 {
    get original() {
      return this[original$0];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$0];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerAddedEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerAddedEvent.new = function(original, transform) {
    this[original$0] = original;
    this[transform$0] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerAddedEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerAddedEvent.prototype;
  dart.addTypeTests(events._TransformedPointerAddedEvent);
  dart.addRtiResources(events._TransformedPointerAddedEvent, ["flutter__src__gestures__events|_TransformedPointerAddedEvent", "flutter__src__gestures__events|PointerAddedEvent", "flutter__src__gestures__events|_CopyPointerAddedEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerAddedEvent);
  dart.setMethodSignature(events._TransformedPointerAddedEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerAddedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerAddedEvent))));
  dart.setLibraryUri(events._TransformedPointerAddedEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerAddedEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerAddedEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerAddedEvent))));
  events._CopyPointerRemovedEvent = class _CopyPointerRemovedEvent extends events.PointerEvent {};
  events._CopyPointerRemovedEvent[dart.mixinOn] = PointerEvent => class _CopyPointerRemovedEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerRemovedEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), obscured: (t$360$3 = obscured, t$360$3 == null ? this.obscured : t$360$3), pressureMin: (t$360$4 = pressureMin, t$360$4 == null ? this.pressureMin : t$360$4), pressureMax: (t$360$5 = pressureMax, t$360$5 == null ? this.pressureMax : t$360$5), distanceMax: (t$360$6 = distanceMax, t$360$6 == null ? this.distanceMax : t$360$6), radiusMin: (t$360$7 = radiusMin, t$360$7 == null ? this.radiusMin : t$360$7), radiusMax: (t$360$8 = radiusMax, t$360$8 == null ? this.radiusMax : t$360$8), embedderId: (t$360$9 = embedderId, t$360$9 == null ? this.embedderId : t$360$9)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerRemovedEvent);
  dart.addRtiResources(events._CopyPointerRemovedEvent, ["flutter__src__gestures__events|_CopyPointerRemovedEvent"]);
  dart.addTypeCaches(events._CopyPointerRemovedEvent);
  dart.setMethodSignature(events._CopyPointerRemovedEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerRemovedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerRemovedEvent))));
  dart.setLibraryUri(events._CopyPointerRemovedEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$ = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$, events._PointerEventDescription);
  const PointerEvent__CopyPointerRemovedEvent$36 = class PointerEvent__CopyPointerRemovedEvent extends PointerEvent__PointerEventDescription$36$ {};
  (PointerEvent__CopyPointerRemovedEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerRemovedEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerRemovedEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerRemovedEvent$36, events._CopyPointerRemovedEvent);
  events.PointerRemovedEvent = class PointerRemovedEvent extends PointerEvent__CopyPointerRemovedEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let original = opts && 'original' in opts ? opts.original : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerRemovedEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, radiusMin: radiusMin, radiusMax: radiusMax, original: original, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerRemovedEvent.new((t$360 = T.PointerRemovedEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerRemovedEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let original = opts && 'original' in opts ? opts.original : null;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    dart.global.Object.getPrototypeOf(events.PointerRemovedEvent).new.call(this, {pressure: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, radiusMin: radiusMin, radiusMax: radiusMax, original: original, embedderId: embedderId});
    ;
  }).prototype = events.PointerRemovedEvent.prototype;
  dart.addTypeTests(events.PointerRemovedEvent);
  dart.addRtiResources(events.PointerRemovedEvent, ["flutter__src__gestures__events|PointerRemovedEvent"]);
  dart.addTypeCaches(events.PointerRemovedEvent);
  dart.setMethodSignature(events.PointerRemovedEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerRemovedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerRemovedEvent))));
  dart.setLibraryUri(events.PointerRemovedEvent, I[0]);
  var original$1 = dart.privateName(events, "_TransformedPointerRemovedEvent.original");
  var transform$1 = dart.privateName(events, "_TransformedPointerRemovedEvent.transform");
  const _TransformedPointerEvent__CopyPointerRemovedEvent$36 = class _TransformedPointerEvent__CopyPointerRemovedEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerRemovedEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerRemovedEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerRemovedEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerRemovedEvent$36, events._CopyPointerRemovedEvent);
  events._TransformedPointerRemovedEvent = class _TransformedPointerRemovedEvent extends _TransformedPointerEvent__CopyPointerRemovedEvent$36 {
    get original() {
      return this[original$1];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$1];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerRemovedEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerRemovedEvent.new = function(original, transform) {
    this[original$1] = original;
    this[transform$1] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerRemovedEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerRemovedEvent.prototype;
  dart.addTypeTests(events._TransformedPointerRemovedEvent);
  dart.addRtiResources(events._TransformedPointerRemovedEvent, ["flutter__src__gestures__events|_TransformedPointerRemovedEvent", "flutter__src__gestures__events|PointerRemovedEvent", "flutter__src__gestures__events|_CopyPointerRemovedEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerRemovedEvent);
  dart.setMethodSignature(events._TransformedPointerRemovedEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerRemovedEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerRemovedEvent))));
  dart.setLibraryUri(events._TransformedPointerRemovedEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerRemovedEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerRemovedEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerRemovedEvent))));
  events._CopyPointerHoverEvent = class _CopyPointerHoverEvent extends events.PointerEvent {};
  events._CopyPointerHoverEvent[dart.mixinOn] = PointerEvent => class _CopyPointerHoverEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerHoverEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), delta: (t$360$3 = delta, t$360$3 == null ? this.delta : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressureMin: (t$360$6 = pressureMin, t$360$6 == null ? this.pressureMin : t$360$6), pressureMax: (t$360$7 = pressureMax, t$360$7 == null ? this.pressureMax : t$360$7), distance: (t$360$8 = distance, t$360$8 == null ? this.distance : t$360$8), distanceMax: (t$360$9 = distanceMax, t$360$9 == null ? this.distanceMax : t$360$9), size: (t$360$10 = size, t$360$10 == null ? this.size : t$360$10), radiusMajor: (t$360$11 = radiusMajor, t$360$11 == null ? this.radiusMajor : t$360$11), radiusMinor: (t$360$12 = radiusMinor, t$360$12 == null ? this.radiusMinor : t$360$12), radiusMin: (t$360$13 = radiusMin, t$360$13 == null ? this.radiusMin : t$360$13), radiusMax: (t$360$14 = radiusMax, t$360$14 == null ? this.radiusMax : t$360$14), orientation: (t$360$15 = orientation, t$360$15 == null ? this.orientation : t$360$15), tilt: (t$360$16 = tilt, t$360$16 == null ? this.tilt : t$360$16), synthesized: (t$360$17 = synthesized, t$360$17 == null ? this.synthesized : t$360$17), embedderId: (t$360$18 = embedderId, t$360$18 == null ? this.embedderId : t$360$18)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerHoverEvent);
  dart.addRtiResources(events._CopyPointerHoverEvent, ["flutter__src__gestures__events|_CopyPointerHoverEvent"]);
  dart.addTypeCaches(events._CopyPointerHoverEvent);
  dart.setMethodSignature(events._CopyPointerHoverEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerHoverEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerHoverEvent))));
  dart.setLibraryUri(events._CopyPointerHoverEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$0 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$0.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$0).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$0.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$0, events._PointerEventDescription);
  const PointerEvent__CopyPointerHoverEvent$36 = class PointerEvent__CopyPointerHoverEvent extends PointerEvent__PointerEventDescription$36$0 {};
  (PointerEvent__CopyPointerHoverEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerHoverEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerHoverEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerHoverEvent$36, events._CopyPointerHoverEvent);
  events.PointerHoverEvent = class PointerHoverEvent extends PointerEvent__CopyPointerHoverEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerHoverEvent.new({viewId: viewId, timeStamp: timeStamp, kind: kind, pointer: pointer, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, synthesized: synthesized, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerHoverEvent.new((t$360 = T.PointerHoverEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerHoverEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    dart.global.Object.getPrototypeOf(events.PointerHoverEvent).new.call(this, {down: false, pressure: 0.0, viewId: viewId, timeStamp: timeStamp, kind: kind, pointer: pointer, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, synthesized: synthesized, embedderId: embedderId});
    ;
  }).prototype = events.PointerHoverEvent.prototype;
  dart.addTypeTests(events.PointerHoverEvent);
  dart.addRtiResources(events.PointerHoverEvent, ["flutter__src__gestures__events|PointerHoverEvent"]);
  dart.addTypeCaches(events.PointerHoverEvent);
  dart.setMethodSignature(events.PointerHoverEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerHoverEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerHoverEvent))));
  dart.setLibraryUri(events.PointerHoverEvent, I[0]);
  var original$2 = dart.privateName(events, "_TransformedPointerHoverEvent.original");
  var transform$2 = dart.privateName(events, "_TransformedPointerHoverEvent.transform");
  const _TransformedPointerEvent__CopyPointerHoverEvent$36 = class _TransformedPointerEvent__CopyPointerHoverEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerHoverEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerHoverEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerHoverEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerHoverEvent$36, events._CopyPointerHoverEvent);
  events._TransformedPointerHoverEvent = class _TransformedPointerHoverEvent extends _TransformedPointerEvent__CopyPointerHoverEvent$36 {
    get original() {
      return this[original$2];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$2];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerHoverEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerHoverEvent.new = function(original, transform) {
    this[original$2] = original;
    this[transform$2] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerHoverEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerHoverEvent.prototype;
  dart.addTypeTests(events._TransformedPointerHoverEvent);
  dart.addRtiResources(events._TransformedPointerHoverEvent, ["flutter__src__gestures__events|_TransformedPointerHoverEvent", "flutter__src__gestures__events|PointerHoverEvent", "flutter__src__gestures__events|_CopyPointerHoverEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerHoverEvent);
  dart.setMethodSignature(events._TransformedPointerHoverEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerHoverEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerHoverEvent))));
  dart.setLibraryUri(events._TransformedPointerHoverEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerHoverEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerHoverEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerHoverEvent))));
  events._CopyPointerEnterEvent = class _CopyPointerEnterEvent extends events.PointerEvent {};
  events._CopyPointerEnterEvent[dart.mixinOn] = PointerEvent => class _CopyPointerEnterEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerEnterEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), delta: (t$360$3 = delta, t$360$3 == null ? this.delta : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressureMin: (t$360$6 = pressureMin, t$360$6 == null ? this.pressureMin : t$360$6), pressureMax: (t$360$7 = pressureMax, t$360$7 == null ? this.pressureMax : t$360$7), distance: (t$360$8 = distance, t$360$8 == null ? this.distance : t$360$8), distanceMax: (t$360$9 = distanceMax, t$360$9 == null ? this.distanceMax : t$360$9), size: (t$360$10 = size, t$360$10 == null ? this.size : t$360$10), radiusMajor: (t$360$11 = radiusMajor, t$360$11 == null ? this.radiusMajor : t$360$11), radiusMinor: (t$360$12 = radiusMinor, t$360$12 == null ? this.radiusMinor : t$360$12), radiusMin: (t$360$13 = radiusMin, t$360$13 == null ? this.radiusMin : t$360$13), radiusMax: (t$360$14 = radiusMax, t$360$14 == null ? this.radiusMax : t$360$14), orientation: (t$360$15 = orientation, t$360$15 == null ? this.orientation : t$360$15), tilt: (t$360$16 = tilt, t$360$16 == null ? this.tilt : t$360$16), synthesized: (t$360$17 = synthesized, t$360$17 == null ? this.synthesized : t$360$17), embedderId: (t$360$18 = embedderId, t$360$18 == null ? this.embedderId : t$360$18)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerEnterEvent);
  dart.addRtiResources(events._CopyPointerEnterEvent, ["flutter__src__gestures__events|_CopyPointerEnterEvent"]);
  dart.addTypeCaches(events._CopyPointerEnterEvent);
  dart.setMethodSignature(events._CopyPointerEnterEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerEnterEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerEnterEvent))));
  dart.setLibraryUri(events._CopyPointerEnterEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$1 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$1.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$1).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$1.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$1, events._PointerEventDescription);
  const PointerEvent__CopyPointerEnterEvent$36 = class PointerEvent__CopyPointerEnterEvent extends PointerEvent__PointerEventDescription$36$1 {};
  (PointerEvent__CopyPointerEnterEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerEnterEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerEnterEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerEnterEvent$36, events._CopyPointerEnterEvent);
  events.PointerEnterEvent = class PointerEnterEvent extends PointerEvent__CopyPointerEnterEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let down = opts && 'down' in opts ? opts.down : false;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerEnterEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, down: down, synthesized: synthesized, embedderId: embedderId});
    }
    static fromMouseEvent(event) {
      return new events.PointerEnterEvent.new({viewId: event.viewId, timeStamp: event.timeStamp, pointer: event.pointer, kind: event.kind, device: event.device, position: event.position, delta: event.delta, buttons: event.buttons, obscured: event.obscured, pressureMin: event.pressureMin, pressureMax: event.pressureMax, distance: event.distance, distanceMax: event.distanceMax, size: event.size, radiusMajor: event.radiusMajor, radiusMinor: event.radiusMinor, radiusMin: event.radiusMin, radiusMax: event.radiusMax, orientation: event.orientation, tilt: event.tilt, down: event.down, synthesized: event.synthesized}).transformed(event.transform);
    }
    static ['_#fromMouseEvent#tearOff'](event) {
      return events.PointerEnterEvent.fromMouseEvent(event);
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerEnterEvent.new((t$360 = T.PointerEnterEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerEnterEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let down = opts && 'down' in opts ? opts.down : false;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 1166, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerEnterEvent).new.call(this, {pressure: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, down: down, synthesized: synthesized, embedderId: embedderId});
    ;
  }).prototype = events.PointerEnterEvent.prototype;
  dart.addTypeTests(events.PointerEnterEvent);
  dart.addRtiResources(events.PointerEnterEvent, ["flutter__src__gestures__events|PointerEnterEvent"]);
  dart.addTypeCaches(events.PointerEnterEvent);
  dart.setMethodSignature(events.PointerEnterEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerEnterEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerEnterEvent))));
  dart.setStaticMethodSignature(events.PointerEnterEvent, () => ['fromMouseEvent']);
  dart.setLibraryUri(events.PointerEnterEvent, I[0]);
  var original$3 = dart.privateName(events, "_TransformedPointerEnterEvent.original");
  var transform$3 = dart.privateName(events, "_TransformedPointerEnterEvent.transform");
  const _TransformedPointerEvent__CopyPointerEnterEvent$36 = class _TransformedPointerEvent__CopyPointerEnterEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerEnterEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerEnterEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerEnterEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerEnterEvent$36, events._CopyPointerEnterEvent);
  events._TransformedPointerEnterEvent = class _TransformedPointerEnterEvent extends _TransformedPointerEvent__CopyPointerEnterEvent$36 {
    get original() {
      return this[original$3];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$3];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerEnterEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerEnterEvent.new = function(original, transform) {
    this[original$3] = original;
    this[transform$3] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerEnterEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerEnterEvent.prototype;
  dart.addTypeTests(events._TransformedPointerEnterEvent);
  dart.addRtiResources(events._TransformedPointerEnterEvent, ["flutter__src__gestures__events|_TransformedPointerEnterEvent", "flutter__src__gestures__events|PointerEnterEvent", "flutter__src__gestures__events|_CopyPointerEnterEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerEnterEvent);
  dart.setMethodSignature(events._TransformedPointerEnterEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerEnterEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerEnterEvent))));
  dart.setLibraryUri(events._TransformedPointerEnterEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerEnterEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerEnterEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerEnterEvent))));
  events._CopyPointerExitEvent = class _CopyPointerExitEvent extends events.PointerEvent {};
  events._CopyPointerExitEvent[dart.mixinOn] = PointerEvent => class _CopyPointerExitEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerExitEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), delta: (t$360$3 = delta, t$360$3 == null ? this.delta : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressureMin: (t$360$6 = pressureMin, t$360$6 == null ? this.pressureMin : t$360$6), pressureMax: (t$360$7 = pressureMax, t$360$7 == null ? this.pressureMax : t$360$7), distance: (t$360$8 = distance, t$360$8 == null ? this.distance : t$360$8), distanceMax: (t$360$9 = distanceMax, t$360$9 == null ? this.distanceMax : t$360$9), size: (t$360$10 = size, t$360$10 == null ? this.size : t$360$10), radiusMajor: (t$360$11 = radiusMajor, t$360$11 == null ? this.radiusMajor : t$360$11), radiusMinor: (t$360$12 = radiusMinor, t$360$12 == null ? this.radiusMinor : t$360$12), radiusMin: (t$360$13 = radiusMin, t$360$13 == null ? this.radiusMin : t$360$13), radiusMax: (t$360$14 = radiusMax, t$360$14 == null ? this.radiusMax : t$360$14), orientation: (t$360$15 = orientation, t$360$15 == null ? this.orientation : t$360$15), tilt: (t$360$16 = tilt, t$360$16 == null ? this.tilt : t$360$16), synthesized: (t$360$17 = synthesized, t$360$17 == null ? this.synthesized : t$360$17), embedderId: (t$360$18 = embedderId, t$360$18 == null ? this.embedderId : t$360$18)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerExitEvent);
  dart.addRtiResources(events._CopyPointerExitEvent, ["flutter__src__gestures__events|_CopyPointerExitEvent"]);
  dart.addTypeCaches(events._CopyPointerExitEvent);
  dart.setMethodSignature(events._CopyPointerExitEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerExitEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerExitEvent))));
  dart.setLibraryUri(events._CopyPointerExitEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$2 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$2.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$2).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$2.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$2, events._PointerEventDescription);
  const PointerEvent__CopyPointerExitEvent$36 = class PointerEvent__CopyPointerExitEvent extends PointerEvent__PointerEventDescription$36$2 {};
  (PointerEvent__CopyPointerExitEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerExitEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerExitEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerExitEvent$36, events._CopyPointerExitEvent);
  events.PointerExitEvent = class PointerExitEvent extends PointerEvent__CopyPointerExitEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let down = opts && 'down' in opts ? opts.down : false;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerExitEvent.new({viewId: viewId, timeStamp: timeStamp, kind: kind, pointer: pointer, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, down: down, synthesized: synthesized, embedderId: embedderId});
    }
    static fromMouseEvent(event) {
      return new events.PointerExitEvent.new({viewId: event.viewId, timeStamp: event.timeStamp, pointer: event.pointer, kind: event.kind, device: event.device, position: event.position, delta: event.delta, buttons: event.buttons, obscured: event.obscured, pressureMin: event.pressureMin, pressureMax: event.pressureMax, distance: event.distance, distanceMax: event.distanceMax, size: event.size, radiusMajor: event.radiusMajor, radiusMinor: event.radiusMinor, radiusMin: event.radiusMin, radiusMax: event.radiusMax, orientation: event.orientation, tilt: event.tilt, down: event.down, synthesized: event.synthesized}).transformed(event.transform);
    }
    static ['_#fromMouseEvent#tearOff'](event) {
      return events.PointerExitEvent.fromMouseEvent(event);
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerExitEvent.new((t$360 = T.PointerExitEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerExitEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let down = opts && 'down' in opts ? opts.down : false;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 1312, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerExitEvent).new.call(this, {pressure: 0.0, viewId: viewId, timeStamp: timeStamp, kind: kind, pointer: pointer, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, down: down, synthesized: synthesized, embedderId: embedderId});
    ;
  }).prototype = events.PointerExitEvent.prototype;
  dart.addTypeTests(events.PointerExitEvent);
  dart.addRtiResources(events.PointerExitEvent, ["flutter__src__gestures__events|PointerExitEvent"]);
  dart.addTypeCaches(events.PointerExitEvent);
  dart.setMethodSignature(events.PointerExitEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerExitEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerExitEvent))));
  dart.setStaticMethodSignature(events.PointerExitEvent, () => ['fromMouseEvent']);
  dart.setLibraryUri(events.PointerExitEvent, I[0]);
  var original$4 = dart.privateName(events, "_TransformedPointerExitEvent.original");
  var transform$4 = dart.privateName(events, "_TransformedPointerExitEvent.transform");
  const _TransformedPointerEvent__CopyPointerExitEvent$36 = class _TransformedPointerEvent__CopyPointerExitEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerExitEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerExitEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerExitEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerExitEvent$36, events._CopyPointerExitEvent);
  events._TransformedPointerExitEvent = class _TransformedPointerExitEvent extends _TransformedPointerEvent__CopyPointerExitEvent$36 {
    get original() {
      return this[original$4];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$4];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerExitEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerExitEvent.new = function(original, transform) {
    this[original$4] = original;
    this[transform$4] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerExitEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerExitEvent.prototype;
  dart.addTypeTests(events._TransformedPointerExitEvent);
  dart.addRtiResources(events._TransformedPointerExitEvent, ["flutter__src__gestures__events|_TransformedPointerExitEvent", "flutter__src__gestures__events|PointerExitEvent", "flutter__src__gestures__events|_CopyPointerExitEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerExitEvent);
  dart.setMethodSignature(events._TransformedPointerExitEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerExitEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerExitEvent))));
  dart.setLibraryUri(events._TransformedPointerExitEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerExitEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerExitEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerExitEvent))));
  events._CopyPointerDownEvent = class _CopyPointerDownEvent extends events.PointerEvent {};
  events._CopyPointerDownEvent[dart.mixinOn] = PointerEvent => class _CopyPointerDownEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerDownEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), pointer: (t$360$0 = pointer, t$360$0 == null ? this.pointer : t$360$0), kind: (t$360$1 = kind, t$360$1 == null ? this.kind : t$360$1), device: (t$360$2 = device, t$360$2 == null ? this.device : t$360$2), position: (t$360$3 = position, t$360$3 == null ? this.position : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressure: (t$360$6 = pressure, t$360$6 == null ? this.pressure : t$360$6), pressureMin: (t$360$7 = pressureMin, t$360$7 == null ? this.pressureMin : t$360$7), pressureMax: (t$360$8 = pressureMax, t$360$8 == null ? this.pressureMax : t$360$8), distanceMax: (t$360$9 = distanceMax, t$360$9 == null ? this.distanceMax : t$360$9), size: (t$360$10 = size, t$360$10 == null ? this.size : t$360$10), radiusMajor: (t$360$11 = radiusMajor, t$360$11 == null ? this.radiusMajor : t$360$11), radiusMinor: (t$360$12 = radiusMinor, t$360$12 == null ? this.radiusMinor : t$360$12), radiusMin: (t$360$13 = radiusMin, t$360$13 == null ? this.radiusMin : t$360$13), radiusMax: (t$360$14 = radiusMax, t$360$14 == null ? this.radiusMax : t$360$14), orientation: (t$360$15 = orientation, t$360$15 == null ? this.orientation : t$360$15), tilt: (t$360$16 = tilt, t$360$16 == null ? this.tilt : t$360$16), embedderId: (t$360$17 = embedderId, t$360$17 == null ? this.embedderId : t$360$17)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerDownEvent);
  dart.addRtiResources(events._CopyPointerDownEvent, ["flutter__src__gestures__events|_CopyPointerDownEvent"]);
  dart.addTypeCaches(events._CopyPointerDownEvent);
  dart.setMethodSignature(events._CopyPointerDownEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerDownEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerDownEvent))));
  dart.setLibraryUri(events._CopyPointerDownEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$3 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$3.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$3).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$3.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$3, events._PointerEventDescription);
  const PointerEvent__CopyPointerDownEvent$36 = class PointerEvent__CopyPointerDownEvent extends PointerEvent__PointerEventDescription$36$3 {};
  (PointerEvent__CopyPointerDownEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerDownEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerDownEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerDownEvent$36, events._CopyPointerDownEvent);
  events.PointerDownEvent = class PointerDownEvent extends PointerEvent__CopyPointerDownEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 1;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressure = opts && 'pressure' in opts ? opts.pressure : 1;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerDownEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerDownEvent.new((t$360 = T.PointerDownEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerDownEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 1;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressure = opts && 'pressure' in opts ? opts.pressure : 1;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 1449, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerDownEvent).new.call(this, {down: true, distance: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    ;
  }).prototype = events.PointerDownEvent.prototype;
  dart.addTypeTests(events.PointerDownEvent);
  dart.addRtiResources(events.PointerDownEvent, ["flutter__src__gestures__events|PointerDownEvent"]);
  dart.addTypeCaches(events.PointerDownEvent);
  dart.setMethodSignature(events.PointerDownEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerDownEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerDownEvent))));
  dart.setLibraryUri(events.PointerDownEvent, I[0]);
  var original$5 = dart.privateName(events, "_TransformedPointerDownEvent.original");
  var transform$5 = dart.privateName(events, "_TransformedPointerDownEvent.transform");
  const _TransformedPointerEvent__CopyPointerDownEvent$36 = class _TransformedPointerEvent__CopyPointerDownEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerDownEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerDownEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerDownEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerDownEvent$36, events._CopyPointerDownEvent);
  events._TransformedPointerDownEvent = class _TransformedPointerDownEvent extends _TransformedPointerEvent__CopyPointerDownEvent$36 {
    get original() {
      return this[original$5];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$5];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerDownEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerDownEvent.new = function(original, transform) {
    this[original$5] = original;
    this[transform$5] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerDownEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerDownEvent.prototype;
  dart.addTypeTests(events._TransformedPointerDownEvent);
  dart.addRtiResources(events._TransformedPointerDownEvent, ["flutter__src__gestures__events|_TransformedPointerDownEvent", "flutter__src__gestures__events|PointerDownEvent", "flutter__src__gestures__events|_CopyPointerDownEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerDownEvent);
  dart.setMethodSignature(events._TransformedPointerDownEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerDownEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerDownEvent))));
  dart.setLibraryUri(events._TransformedPointerDownEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerDownEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerDownEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerDownEvent))));
  events._CopyPointerMoveEvent = class _CopyPointerMoveEvent extends events.PointerEvent {};
  events._CopyPointerMoveEvent[dart.mixinOn] = PointerEvent => class _CopyPointerMoveEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18, t$360$19;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerMoveEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), pointer: (t$360$0 = pointer, t$360$0 == null ? this.pointer : t$360$0), kind: (t$360$1 = kind, t$360$1 == null ? this.kind : t$360$1), device: (t$360$2 = device, t$360$2 == null ? this.device : t$360$2), position: (t$360$3 = position, t$360$3 == null ? this.position : t$360$3), delta: (t$360$4 = delta, t$360$4 == null ? this.delta : t$360$4), buttons: (t$360$5 = buttons, t$360$5 == null ? this.buttons : t$360$5), obscured: (t$360$6 = obscured, t$360$6 == null ? this.obscured : t$360$6), pressure: (t$360$7 = pressure, t$360$7 == null ? this.pressure : t$360$7), pressureMin: (t$360$8 = pressureMin, t$360$8 == null ? this.pressureMin : t$360$8), pressureMax: (t$360$9 = pressureMax, t$360$9 == null ? this.pressureMax : t$360$9), distanceMax: (t$360$10 = distanceMax, t$360$10 == null ? this.distanceMax : t$360$10), size: (t$360$11 = size, t$360$11 == null ? this.size : t$360$11), radiusMajor: (t$360$12 = radiusMajor, t$360$12 == null ? this.radiusMajor : t$360$12), radiusMinor: (t$360$13 = radiusMinor, t$360$13 == null ? this.radiusMinor : t$360$13), radiusMin: (t$360$14 = radiusMin, t$360$14 == null ? this.radiusMin : t$360$14), radiusMax: (t$360$15 = radiusMax, t$360$15 == null ? this.radiusMax : t$360$15), orientation: (t$360$16 = orientation, t$360$16 == null ? this.orientation : t$360$16), tilt: (t$360$17 = tilt, t$360$17 == null ? this.tilt : t$360$17), synthesized: (t$360$18 = synthesized, t$360$18 == null ? this.synthesized : t$360$18), embedderId: (t$360$19 = embedderId, t$360$19 == null ? this.embedderId : t$360$19)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerMoveEvent);
  dart.addRtiResources(events._CopyPointerMoveEvent, ["flutter__src__gestures__events|_CopyPointerMoveEvent"]);
  dart.addTypeCaches(events._CopyPointerMoveEvent);
  dart.setMethodSignature(events._CopyPointerMoveEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerMoveEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerMoveEvent))));
  dart.setLibraryUri(events._CopyPointerMoveEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$4 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$4.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$4).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$4.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$4, events._PointerEventDescription);
  const PointerEvent__CopyPointerMoveEvent$36 = class PointerEvent__CopyPointerMoveEvent extends PointerEvent__PointerEventDescription$36$4 {};
  (PointerEvent__CopyPointerMoveEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerMoveEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerMoveEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerMoveEvent$36, events._CopyPointerMoveEvent);
  events.PointerMoveEvent = class PointerMoveEvent extends PointerEvent__CopyPointerMoveEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 1;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressure = opts && 'pressure' in opts ? opts.pressure : 1;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let platformData = opts && 'platformData' in opts ? opts.platformData : 0;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerMoveEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, platformData: platformData, synthesized: synthesized, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerMoveEvent.new((t$360 = T.PointerMoveEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerMoveEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let delta = opts && 'delta' in opts ? opts.delta : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 1;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressure = opts && 'pressure' in opts ? opts.pressure : 1;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let platformData = opts && 'platformData' in opts ? opts.platformData : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 1566, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerMoveEvent).new.call(this, {down: true, distance: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, delta: delta, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, platformData: platformData, synthesized: synthesized, embedderId: embedderId});
    ;
  }).prototype = events.PointerMoveEvent.prototype;
  dart.addTypeTests(events.PointerMoveEvent);
  dart.addRtiResources(events.PointerMoveEvent, ["flutter__src__gestures__events|PointerMoveEvent"]);
  dart.addTypeCaches(events.PointerMoveEvent);
  dart.setMethodSignature(events.PointerMoveEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerMoveEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerMoveEvent))));
  dart.setLibraryUri(events.PointerMoveEvent, I[0]);
  var original$6 = dart.privateName(events, "_TransformedPointerMoveEvent.original");
  var transform$6 = dart.privateName(events, "_TransformedPointerMoveEvent.transform");
  const _TransformedPointerEvent__CopyPointerMoveEvent$36 = class _TransformedPointerEvent__CopyPointerMoveEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerMoveEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerMoveEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerMoveEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerMoveEvent$36, events._CopyPointerMoveEvent);
  events._TransformedPointerMoveEvent = class _TransformedPointerMoveEvent extends _TransformedPointerEvent__CopyPointerMoveEvent$36 {
    get original() {
      return this[original$6];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$6];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerMoveEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerMoveEvent.new = function(original, transform) {
    this[original$6] = original;
    this[transform$6] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerMoveEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerMoveEvent.prototype;
  dart.addTypeTests(events._TransformedPointerMoveEvent);
  dart.addRtiResources(events._TransformedPointerMoveEvent, ["flutter__src__gestures__events|_TransformedPointerMoveEvent", "flutter__src__gestures__events|PointerMoveEvent", "flutter__src__gestures__events|_CopyPointerMoveEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerMoveEvent);
  dart.setMethodSignature(events._TransformedPointerMoveEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerMoveEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerMoveEvent))));
  dart.setLibraryUri(events._TransformedPointerMoveEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerMoveEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerMoveEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerMoveEvent))));
  events._CopyPointerUpEvent = class _CopyPointerUpEvent extends events.PointerEvent {};
  events._CopyPointerUpEvent[dart.mixinOn] = PointerEvent => class _CopyPointerUpEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17, t$360$18;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let localPosition = opts && 'localPosition' in opts ? opts.localPosition : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerUpEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), pointer: (t$360$0 = pointer, t$360$0 == null ? this.pointer : t$360$0), kind: (t$360$1 = kind, t$360$1 == null ? this.kind : t$360$1), device: (t$360$2 = device, t$360$2 == null ? this.device : t$360$2), position: (t$360$3 = position, t$360$3 == null ? this.position : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressure: (t$360$6 = pressure, t$360$6 == null ? this.pressure : t$360$6), pressureMin: (t$360$7 = pressureMin, t$360$7 == null ? this.pressureMin : t$360$7), pressureMax: (t$360$8 = pressureMax, t$360$8 == null ? this.pressureMax : t$360$8), distance: (t$360$9 = distance, t$360$9 == null ? this.distance : t$360$9), distanceMax: (t$360$10 = distanceMax, t$360$10 == null ? this.distanceMax : t$360$10), size: (t$360$11 = size, t$360$11 == null ? this.size : t$360$11), radiusMajor: (t$360$12 = radiusMajor, t$360$12 == null ? this.radiusMajor : t$360$12), radiusMinor: (t$360$13 = radiusMinor, t$360$13 == null ? this.radiusMinor : t$360$13), radiusMin: (t$360$14 = radiusMin, t$360$14 == null ? this.radiusMin : t$360$14), radiusMax: (t$360$15 = radiusMax, t$360$15 == null ? this.radiusMax : t$360$15), orientation: (t$360$16 = orientation, t$360$16 == null ? this.orientation : t$360$16), tilt: (t$360$17 = tilt, t$360$17 == null ? this.tilt : t$360$17), embedderId: (t$360$18 = embedderId, t$360$18 == null ? this.embedderId : t$360$18)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerUpEvent);
  dart.addRtiResources(events._CopyPointerUpEvent, ["flutter__src__gestures__events|_CopyPointerUpEvent"]);
  dart.addTypeCaches(events._CopyPointerUpEvent);
  dart.setMethodSignature(events._CopyPointerUpEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerUpEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerUpEvent))));
  dart.setLibraryUri(events._CopyPointerUpEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$5 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$5.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$5).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$5.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$5, events._PointerEventDescription);
  const PointerEvent__CopyPointerUpEvent$36 = class PointerEvent__CopyPointerUpEvent extends PointerEvent__PointerEventDescription$36$5 {};
  (PointerEvent__CopyPointerUpEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerUpEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerUpEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerUpEvent$36, events._CopyPointerUpEvent);
  events.PointerUpEvent = class PointerUpEvent extends PointerEvent__CopyPointerUpEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressure = opts && 'pressure' in opts ? opts.pressure : 0;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerUpEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerUpEvent.new((t$360 = T.PointerUpEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerUpEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressure = opts && 'pressure' in opts ? opts.pressure : 0;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 1681, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerUpEvent).new.call(this, {down: false, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressure: pressure, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    ;
  }).prototype = events.PointerUpEvent.prototype;
  dart.addTypeTests(events.PointerUpEvent);
  dart.addRtiResources(events.PointerUpEvent, ["flutter__src__gestures__events|PointerUpEvent"]);
  dart.addTypeCaches(events.PointerUpEvent);
  dart.setMethodSignature(events.PointerUpEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerUpEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerUpEvent))));
  dart.setLibraryUri(events.PointerUpEvent, I[0]);
  var original$7 = dart.privateName(events, "_TransformedPointerUpEvent.original");
  var transform$7 = dart.privateName(events, "_TransformedPointerUpEvent.transform");
  const _TransformedPointerEvent__CopyPointerUpEvent$36 = class _TransformedPointerEvent__CopyPointerUpEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerUpEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerUpEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerUpEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerUpEvent$36, events._CopyPointerUpEvent);
  events._TransformedPointerUpEvent = class _TransformedPointerUpEvent extends _TransformedPointerEvent__CopyPointerUpEvent$36 {
    get original() {
      return this[original$7];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$7];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerUpEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerUpEvent.new = function(original, transform) {
    this[original$7] = original;
    this[transform$7] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerUpEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerUpEvent.prototype;
  dart.addTypeTests(events._TransformedPointerUpEvent);
  dart.addRtiResources(events._TransformedPointerUpEvent, ["flutter__src__gestures__events|_TransformedPointerUpEvent", "flutter__src__gestures__events|PointerUpEvent", "flutter__src__gestures__events|_CopyPointerUpEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerUpEvent);
  dart.setMethodSignature(events._TransformedPointerUpEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerUpEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerUpEvent))));
  dart.setLibraryUri(events._TransformedPointerUpEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerUpEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerUpEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerUpEvent))));
  events.PointerSignalEvent = class PointerSignalEvent extends events.PointerEvent {};
  (events.PointerSignalEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    dart.global.Object.getPrototypeOf(events.PointerSignalEvent).new.call(this, {viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, embedderId: embedderId});
    ;
  }).prototype = events.PointerSignalEvent.prototype;
  dart.addTypeTests(events.PointerSignalEvent);
  dart.addRtiResources(events.PointerSignalEvent, ["flutter__src__gestures__events|PointerSignalEvent"]);
  dart.addTypeCaches(events.PointerSignalEvent);
  dart.setLibraryUri(events.PointerSignalEvent, I[0]);
  events._CopyPointerScrollEvent = class _CopyPointerScrollEvent extends events.PointerEvent {};
  events._CopyPointerScrollEvent[dart.mixinOn] = PointerEvent => class _CopyPointerScrollEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerScrollEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), scrollDelta: this.scrollDelta, embedderId: (t$360$3 = embedderId, t$360$3 == null ? this.embedderId : t$360$3)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerScrollEvent);
  dart.addRtiResources(events._CopyPointerScrollEvent, ["flutter__src__gestures__events|_CopyPointerScrollEvent"]);
  dart.addTypeCaches(events._CopyPointerScrollEvent);
  dart.setMethodSignature(events._CopyPointerScrollEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerScrollEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerScrollEvent))));
  dart.setLibraryUri(events._CopyPointerScrollEvent, I[0]);
  var scrollDelta$ = dart.privateName(events, "PointerScrollEvent.scrollDelta");
  const PointerSignalEvent__PointerEventDescription$36 = class PointerSignalEvent__PointerEventDescription extends events.PointerSignalEvent {};
  (PointerSignalEvent__PointerEventDescription$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__PointerEventDescription$36).new.call(this, opts);
  }).prototype = PointerSignalEvent__PointerEventDescription$36.prototype;
  dart.applyMixin(PointerSignalEvent__PointerEventDescription$36, events._PointerEventDescription);
  const PointerSignalEvent__CopyPointerScrollEvent$36 = class PointerSignalEvent__CopyPointerScrollEvent extends PointerSignalEvent__PointerEventDescription$36 {};
  (PointerSignalEvent__CopyPointerScrollEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__CopyPointerScrollEvent$36).new.call(this, opts);
  }).prototype = PointerSignalEvent__CopyPointerScrollEvent$36.prototype;
  dart.applyMixin(PointerSignalEvent__CopyPointerScrollEvent$36, events._CopyPointerScrollEvent);
  events.PointerScrollEvent = class PointerScrollEvent extends PointerSignalEvent__CopyPointerScrollEvent$36 {
    get scrollDelta() {
      return this[scrollDelta$];
    }
    set scrollDelta(value) {
      super.scrollDelta = value;
    }
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let scrollDelta = opts && 'scrollDelta' in opts ? opts.scrollDelta : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerScrollEvent.new({viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, scrollDelta: scrollDelta, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerScrollEvent.new((t$360 = T.PointerScrollEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("scrollDelta", this.scrollDelta));
    }
  };
  (events.PointerScrollEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let scrollDelta = opts && 'scrollDelta' in opts ? opts.scrollDelta : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    this[scrollDelta$] = scrollDelta;
    dart.global.Object.getPrototypeOf(events.PointerScrollEvent).new.call(this, {viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, embedderId: embedderId});
    ;
  }).prototype = events.PointerScrollEvent.prototype;
  dart.addTypeTests(events.PointerScrollEvent);
  dart.addRtiResources(events.PointerScrollEvent, ["flutter__src__gestures__events|PointerScrollEvent"]);
  dart.addTypeCaches(events.PointerScrollEvent);
  dart.setMethodSignature(events.PointerScrollEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScrollEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerScrollEvent))));
  dart.setLibraryUri(events.PointerScrollEvent, I[0]);
  dart.setFieldSignature(events.PointerScrollEvent, () => dart.global.Object.setPrototypeOf({scrollDelta: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]}}, dart.getFields(dart.global.Object.getPrototypeOf(events.PointerScrollEvent))));
  var original$8 = dart.privateName(events, "_TransformedPointerScrollEvent.original");
  var transform$8 = dart.privateName(events, "_TransformedPointerScrollEvent.transform");
  const _TransformedPointerEvent__CopyPointerScrollEvent$36 = class _TransformedPointerEvent__CopyPointerScrollEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerScrollEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerScrollEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerScrollEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerScrollEvent$36, events._CopyPointerScrollEvent);
  events._TransformedPointerScrollEvent = class _TransformedPointerScrollEvent extends _TransformedPointerEvent__CopyPointerScrollEvent$36 {
    get original() {
      return this[original$8];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$8];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerScrollEvent.new(original, transform);
    }
    get scrollDelta() {
      return this.original.scrollDelta;
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (G.DiagnosticsPropertyOfOffset()).new("scrollDelta", this.scrollDelta));
    }
  };
  (events._TransformedPointerScrollEvent.new = function(original, transform) {
    this[original$8] = original;
    this[transform$8] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerScrollEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerScrollEvent.prototype;
  dart.addTypeTests(events._TransformedPointerScrollEvent);
  dart.addRtiResources(events._TransformedPointerScrollEvent, ["flutter__src__gestures__events|_TransformedPointerScrollEvent", "flutter__src__gestures__events|PointerScrollEvent", "flutter__src__gestures__events|_CopyPointerScrollEvent", "flutter__src__gestures__events|PointerSignalEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__gestures__events|PointerEvent", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerScrollEvent);
  dart.setMethodSignature(events._TransformedPointerScrollEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScrollEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerScrollEvent))));
  dart.setGetterSignature(events._TransformedPointerScrollEvent, () => dart.global.Object.setPrototypeOf({scrollDelta: T.Offset()}, dart.getGetters(dart.global.Object.getPrototypeOf(events._TransformedPointerScrollEvent))));
  dart.setLibraryUri(events._TransformedPointerScrollEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerScrollEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerScrollEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerScrollEvent))));
  events._CopyPointerScrollInertiaCancelEvent = class _CopyPointerScrollInertiaCancelEvent extends events.PointerEvent {};
  events._CopyPointerScrollInertiaCancelEvent[dart.mixinOn] = PointerEvent => class _CopyPointerScrollInertiaCancelEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerScrollInertiaCancelEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), embedderId: (t$360$3 = embedderId, t$360$3 == null ? this.embedderId : t$360$3)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerScrollInertiaCancelEvent);
  dart.addRtiResources(events._CopyPointerScrollInertiaCancelEvent, ["flutter__src__gestures__events|_CopyPointerScrollInertiaCancelEvent"]);
  dart.addTypeCaches(events._CopyPointerScrollInertiaCancelEvent);
  dart.setMethodSignature(events._CopyPointerScrollInertiaCancelEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerScrollInertiaCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerScrollInertiaCancelEvent))));
  dart.setLibraryUri(events._CopyPointerScrollInertiaCancelEvent, I[0]);
  const PointerSignalEvent__PointerEventDescription$36$ = class PointerSignalEvent__PointerEventDescription extends events.PointerSignalEvent {};
  (PointerSignalEvent__PointerEventDescription$36$.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__PointerEventDescription$36$).new.call(this, opts);
  }).prototype = PointerSignalEvent__PointerEventDescription$36$.prototype;
  dart.applyMixin(PointerSignalEvent__PointerEventDescription$36$, events._PointerEventDescription);
  const PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36 = class PointerSignalEvent__CopyPointerScrollInertiaCancelEvent extends PointerSignalEvent__PointerEventDescription$36$ {};
  (PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36).new.call(this, opts);
  }).prototype = PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36.prototype;
  dart.applyMixin(PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36, events._CopyPointerScrollInertiaCancelEvent);
  events.PointerScrollInertiaCancelEvent = class PointerScrollInertiaCancelEvent extends PointerSignalEvent__CopyPointerScrollInertiaCancelEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerScrollInertiaCancelEvent.new({viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerScrollInertiaCancelEvent.new((t$360 = T.PointerScrollInertiaCancelEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerScrollInertiaCancelEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    dart.global.Object.getPrototypeOf(events.PointerScrollInertiaCancelEvent).new.call(this, {viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, embedderId: embedderId});
    ;
  }).prototype = events.PointerScrollInertiaCancelEvent.prototype;
  dart.addTypeTests(events.PointerScrollInertiaCancelEvent);
  dart.addRtiResources(events.PointerScrollInertiaCancelEvent, ["flutter__src__gestures__events|PointerScrollInertiaCancelEvent"]);
  dart.addTypeCaches(events.PointerScrollInertiaCancelEvent);
  dart.setMethodSignature(events.PointerScrollInertiaCancelEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScrollInertiaCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerScrollInertiaCancelEvent))));
  dart.setLibraryUri(events.PointerScrollInertiaCancelEvent, I[0]);
  var original$9 = dart.privateName(events, "_TransformedPointerScrollInertiaCancelEvent.original");
  var transform$9 = dart.privateName(events, "_TransformedPointerScrollInertiaCancelEvent.transform");
  const _TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36 = class _TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36, events._CopyPointerScrollInertiaCancelEvent);
  events._TransformedPointerScrollInertiaCancelEvent = class _TransformedPointerScrollInertiaCancelEvent extends _TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent$36 {
    get original() {
      return this[original$9];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$9];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerScrollInertiaCancelEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerScrollInertiaCancelEvent.new = function(original, transform) {
    this[original$9] = original;
    this[transform$9] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerScrollInertiaCancelEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerScrollInertiaCancelEvent.prototype;
  dart.addTypeTests(events._TransformedPointerScrollInertiaCancelEvent);
  dart.addRtiResources(events._TransformedPointerScrollInertiaCancelEvent, ["flutter__src__gestures__events|_TransformedPointerScrollInertiaCancelEvent", "flutter__src__gestures__events|PointerScrollInertiaCancelEvent", "flutter__src__gestures__events|_CopyPointerScrollInertiaCancelEvent", "flutter__src__gestures__events|PointerSignalEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__gestures__events|PointerEvent", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerScrollInertiaCancelEvent);
  dart.setMethodSignature(events._TransformedPointerScrollInertiaCancelEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScrollInertiaCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerScrollInertiaCancelEvent))));
  dart.setLibraryUri(events._TransformedPointerScrollInertiaCancelEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerScrollInertiaCancelEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerScrollInertiaCancelEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerScrollInertiaCancelEvent))));
  events._CopyPointerScaleEvent = class _CopyPointerScaleEvent extends events.PointerEvent {};
  events._CopyPointerScaleEvent[dart.mixinOn] = PointerEvent => class _CopyPointerScaleEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      return new events.PointerScaleEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), kind: (t$360$0 = kind, t$360$0 == null ? this.kind : t$360$0), device: (t$360$1 = device, t$360$1 == null ? this.device : t$360$1), position: (t$360$2 = position, t$360$2 == null ? this.position : t$360$2), embedderId: (t$360$3 = embedderId, t$360$3 == null ? this.embedderId : t$360$3), scale: (t$360$4 = scale, t$360$4 == null ? this.scale : t$360$4)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerScaleEvent);
  dart.addRtiResources(events._CopyPointerScaleEvent, ["flutter__src__gestures__events|_CopyPointerScaleEvent"]);
  dart.addTypeCaches(events._CopyPointerScaleEvent);
  dart.setMethodSignature(events._CopyPointerScaleEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerScaleEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerScaleEvent))));
  dart.setLibraryUri(events._CopyPointerScaleEvent, I[0]);
  var scale$ = dart.privateName(events, "PointerScaleEvent.scale");
  const PointerSignalEvent__PointerEventDescription$36$0 = class PointerSignalEvent__PointerEventDescription extends events.PointerSignalEvent {};
  (PointerSignalEvent__PointerEventDescription$36$0.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__PointerEventDescription$36$0).new.call(this, opts);
  }).prototype = PointerSignalEvent__PointerEventDescription$36$0.prototype;
  dart.applyMixin(PointerSignalEvent__PointerEventDescription$36$0, events._PointerEventDescription);
  const PointerSignalEvent__CopyPointerScaleEvent$36 = class PointerSignalEvent__CopyPointerScaleEvent extends PointerSignalEvent__PointerEventDescription$36$0 {};
  (PointerSignalEvent__CopyPointerScaleEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerSignalEvent__CopyPointerScaleEvent$36).new.call(this, opts);
  }).prototype = PointerSignalEvent__CopyPointerScaleEvent$36.prototype;
  dart.applyMixin(PointerSignalEvent__CopyPointerScaleEvent$36, events._CopyPointerScaleEvent);
  events.PointerScaleEvent = class PointerScaleEvent extends PointerSignalEvent__CopyPointerScaleEvent$36 {
    get scale() {
      return this[scale$];
    }
    set scale(value) {
      super.scale = value;
    }
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      let scale = opts && 'scale' in opts ? opts.scale : 1;
      return new events.PointerScaleEvent.new({viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, embedderId: embedderId, scale: scale});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerScaleEvent.new((t$360 = T.PointerScaleEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerScaleEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let kind = opts && 'kind' in opts ? opts.kind : C[3] || CT.C3;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    this[scale$] = scale;
    dart.global.Object.getPrototypeOf(events.PointerScaleEvent).new.call(this, {viewId: viewId, timeStamp: timeStamp, kind: kind, device: device, position: position, embedderId: embedderId});
    ;
  }).prototype = events.PointerScaleEvent.prototype;
  dart.addTypeTests(events.PointerScaleEvent);
  dart.addRtiResources(events.PointerScaleEvent, ["flutter__src__gestures__events|PointerScaleEvent"]);
  dart.addTypeCaches(events.PointerScaleEvent);
  dart.setMethodSignature(events.PointerScaleEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScaleEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerScaleEvent))));
  dart.setLibraryUri(events.PointerScaleEvent, I[0]);
  dart.setFieldSignature(events.PointerScaleEvent, () => dart.global.Object.setPrototypeOf({scale: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(events.PointerScaleEvent))));
  var original$10 = dart.privateName(events, "_TransformedPointerScaleEvent.original");
  var transform$10 = dart.privateName(events, "_TransformedPointerScaleEvent.transform");
  const _TransformedPointerEvent__CopyPointerScaleEvent$36 = class _TransformedPointerEvent__CopyPointerScaleEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerScaleEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerScaleEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerScaleEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerScaleEvent$36, events._CopyPointerScaleEvent);
  events._TransformedPointerScaleEvent = class _TransformedPointerScaleEvent extends _TransformedPointerEvent__CopyPointerScaleEvent$36 {
    get original() {
      return this[original$10];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$10];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerScaleEvent.new(original, transform);
    }
    get scale() {
      return this.original.scale;
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerScaleEvent.new = function(original, transform) {
    this[original$10] = original;
    this[transform$10] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerScaleEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerScaleEvent.prototype;
  dart.addTypeTests(events._TransformedPointerScaleEvent);
  dart.addRtiResources(events._TransformedPointerScaleEvent, ["flutter__src__gestures__events|_TransformedPointerScaleEvent", "flutter__src__gestures__events|PointerScaleEvent", "flutter__src__gestures__events|_CopyPointerScaleEvent", "flutter__src__gestures__events|PointerSignalEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__gestures__events|PointerEvent", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerScaleEvent);
  dart.setMethodSignature(events._TransformedPointerScaleEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerScaleEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerScaleEvent))));
  dart.setGetterSignature(events._TransformedPointerScaleEvent, () => dart.global.Object.setPrototypeOf({scale: T.double()}, dart.getGetters(dart.global.Object.getPrototypeOf(events._TransformedPointerScaleEvent))));
  dart.setLibraryUri(events._TransformedPointerScaleEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerScaleEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerScaleEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerScaleEvent))));
  events._CopyPointerPanZoomStartEvent = class _CopyPointerPanZoomStartEvent extends events.PointerEvent {};
  events._CopyPointerPanZoomStartEvent[dart.mixinOn] = PointerEvent => class _CopyPointerPanZoomStartEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      if (!(kind == null || kind === ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 2042, 12, "kind == null || identical(kind, PointerDeviceKind.trackpad)");
      return new events.PointerPanZoomStartEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), device: (t$360$0 = device, t$360$0 == null ? this.device : t$360$0), position: (t$360$1 = position, t$360$1 == null ? this.position : t$360$1), embedderId: (t$360$2 = embedderId, t$360$2 == null ? this.embedderId : t$360$2)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerPanZoomStartEvent);
  dart.addRtiResources(events._CopyPointerPanZoomStartEvent, ["flutter__src__gestures__events|_CopyPointerPanZoomStartEvent"]);
  dart.addTypeCaches(events._CopyPointerPanZoomStartEvent);
  dart.setMethodSignature(events._CopyPointerPanZoomStartEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerPanZoomStartEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerPanZoomStartEvent))));
  dart.setLibraryUri(events._CopyPointerPanZoomStartEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$6 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$6.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$6).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$6.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$6, events._PointerEventDescription);
  const PointerEvent__CopyPointerPanZoomStartEvent$36 = class PointerEvent__CopyPointerPanZoomStartEvent extends PointerEvent__PointerEventDescription$36$6 {};
  (PointerEvent__CopyPointerPanZoomStartEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerPanZoomStartEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerPanZoomStartEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerPanZoomStartEvent$36, events._CopyPointerPanZoomStartEvent);
  events.PointerPanZoomStartEvent = class PointerPanZoomStartEvent extends PointerEvent__CopyPointerPanZoomStartEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let device = opts && 'device' in opts ? opts.device : 0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      return new events.PointerPanZoomStartEvent.new({viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, synthesized: synthesized});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerPanZoomStartEvent.new((t$360 = T.PointerPanZoomStartEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerPanZoomStartEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let device = opts && 'device' in opts ? opts.device : 0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    dart.global.Object.getPrototypeOf(events.PointerPanZoomStartEvent).new.call(this, {kind: ui.PointerDeviceKind.trackpad, viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, synthesized: synthesized});
    ;
  }).prototype = events.PointerPanZoomStartEvent.prototype;
  dart.addTypeTests(events.PointerPanZoomStartEvent);
  dart.addRtiResources(events.PointerPanZoomStartEvent, ["flutter__src__gestures__events|PointerPanZoomStartEvent"]);
  dart.addTypeCaches(events.PointerPanZoomStartEvent);
  dart.setMethodSignature(events.PointerPanZoomStartEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomStartEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerPanZoomStartEvent))));
  dart.setLibraryUri(events.PointerPanZoomStartEvent, I[0]);
  var original$11 = dart.privateName(events, "_TransformedPointerPanZoomStartEvent.original");
  var transform$11 = dart.privateName(events, "_TransformedPointerPanZoomStartEvent.transform");
  const _TransformedPointerEvent__CopyPointerPanZoomStartEvent$36 = class _TransformedPointerEvent__CopyPointerPanZoomStartEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerPanZoomStartEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerPanZoomStartEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerPanZoomStartEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerPanZoomStartEvent$36, events._CopyPointerPanZoomStartEvent);
  events._TransformedPointerPanZoomStartEvent = class _TransformedPointerPanZoomStartEvent extends _TransformedPointerEvent__CopyPointerPanZoomStartEvent$36 {
    get original() {
      return this[original$11];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$11];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerPanZoomStartEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerPanZoomStartEvent.new = function(original, transform) {
    this[original$11] = original;
    this[transform$11] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomStartEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerPanZoomStartEvent.prototype;
  dart.addTypeTests(events._TransformedPointerPanZoomStartEvent);
  dart.addRtiResources(events._TransformedPointerPanZoomStartEvent, ["flutter__src__gestures__events|_TransformedPointerPanZoomStartEvent", "flutter__src__gestures__events|PointerPanZoomStartEvent", "flutter__src__gestures__events|_CopyPointerPanZoomStartEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerPanZoomStartEvent);
  dart.setMethodSignature(events._TransformedPointerPanZoomStartEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomStartEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomStartEvent))));
  dart.setLibraryUri(events._TransformedPointerPanZoomStartEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerPanZoomStartEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerPanZoomStartEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomStartEvent))));
  events._CopyPointerPanZoomUpdateEvent = class _CopyPointerPanZoomUpdateEvent extends events.PointerEvent {};
  events._CopyPointerPanZoomUpdateEvent[dart.mixinOn] = PointerEvent => class _CopyPointerPanZoomUpdateEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      let pan = opts && 'pan' in opts ? opts.pan : null;
      let localPan = opts && 'localPan' in opts ? opts.localPan : null;
      let panDelta = opts && 'panDelta' in opts ? opts.panDelta : null;
      let localPanDelta = opts && 'localPanDelta' in opts ? opts.localPanDelta : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let rotation = opts && 'rotation' in opts ? opts.rotation : null;
      if (!(kind == null || kind === ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 2139, 12, "kind == null || identical(kind, PointerDeviceKind.trackpad)");
      return new events.PointerPanZoomUpdateEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), device: (t$360$0 = device, t$360$0 == null ? this.device : t$360$0), position: (t$360$1 = position, t$360$1 == null ? this.position : t$360$1), embedderId: (t$360$2 = embedderId, t$360$2 == null ? this.embedderId : t$360$2), pan: (t$360$3 = pan, t$360$3 == null ? this.pan : t$360$3), panDelta: (t$360$4 = panDelta, t$360$4 == null ? this.panDelta : t$360$4), scale: (t$360$5 = scale, t$360$5 == null ? this.scale : t$360$5), rotation: (t$360$6 = rotation, t$360$6 == null ? this.rotation : t$360$6)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerPanZoomUpdateEvent);
  dart.addRtiResources(events._CopyPointerPanZoomUpdateEvent, ["flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent"]);
  dart.addTypeCaches(events._CopyPointerPanZoomUpdateEvent);
  dart.setMethodSignature(events._CopyPointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerPanZoomUpdateEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerPanZoomUpdateEvent))));
  dart.setLibraryUri(events._CopyPointerPanZoomUpdateEvent, I[0]);
  var pan$ = dart.privateName(events, "PointerPanZoomUpdateEvent.pan");
  var panDelta$ = dart.privateName(events, "PointerPanZoomUpdateEvent.panDelta");
  var scale$0 = dart.privateName(events, "PointerPanZoomUpdateEvent.scale");
  var rotation$ = dart.privateName(events, "PointerPanZoomUpdateEvent.rotation");
  const PointerEvent__PointerEventDescription$36$7 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$7.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$7).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$7.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$7, events._PointerEventDescription);
  const PointerEvent__CopyPointerPanZoomUpdateEvent$36 = class PointerEvent__CopyPointerPanZoomUpdateEvent extends PointerEvent__PointerEventDescription$36$7 {};
  (PointerEvent__CopyPointerPanZoomUpdateEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerPanZoomUpdateEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerPanZoomUpdateEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerPanZoomUpdateEvent$36, events._CopyPointerPanZoomUpdateEvent);
  events.PointerPanZoomUpdateEvent = class PointerPanZoomUpdateEvent extends PointerEvent__CopyPointerPanZoomUpdateEvent$36 {
    get pan() {
      return this[pan$];
    }
    set pan(value) {
      super.pan = value;
    }
    get panDelta() {
      return this[panDelta$];
    }
    set panDelta(value) {
      super.panDelta = value;
    }
    get scale() {
      return this[scale$0];
    }
    set scale(value) {
      super.scale = value;
    }
    get rotation() {
      return this[rotation$];
    }
    set rotation(value) {
      super.rotation = value;
    }
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let device = opts && 'device' in opts ? opts.device : 0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      let pan = opts && 'pan' in opts ? opts.pan : C[2] || CT.C2;
      let panDelta = opts && 'panDelta' in opts ? opts.panDelta : C[2] || CT.C2;
      let scale = opts && 'scale' in opts ? opts.scale : 1;
      let rotation = opts && 'rotation' in opts ? opts.rotation : 0;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      return new events.PointerPanZoomUpdateEvent.new({viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, pan: pan, panDelta: panDelta, scale: scale, rotation: rotation, synthesized: synthesized});
    }
    get localPan() {
      return this.pan;
    }
    get localPanDelta() {
      return this.panDelta;
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerPanZoomUpdateEvent.new((t$360 = T.PointerPanZoomUpdateEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerPanZoomUpdateEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let device = opts && 'device' in opts ? opts.device : 0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    let pan = opts && 'pan' in opts ? opts.pan : C[2] || CT.C2;
    let panDelta = opts && 'panDelta' in opts ? opts.panDelta : C[2] || CT.C2;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let rotation = opts && 'rotation' in opts ? opts.rotation : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    this[pan$] = pan;
    this[panDelta$] = panDelta;
    this[scale$0] = scale;
    this[rotation$] = rotation;
    dart.global.Object.getPrototypeOf(events.PointerPanZoomUpdateEvent).new.call(this, {kind: ui.PointerDeviceKind.trackpad, viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, synthesized: synthesized});
    ;
  }).prototype = events.PointerPanZoomUpdateEvent.prototype;
  dart.addTypeTests(events.PointerPanZoomUpdateEvent);
  dart.addRtiResources(events.PointerPanZoomUpdateEvent, ["flutter__src__gestures__events|PointerPanZoomUpdateEvent"]);
  dart.addTypeCaches(events.PointerPanZoomUpdateEvent);
  dart.setMethodSignature(events.PointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomUpdateEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerPanZoomUpdateEvent))));
  dart.setGetterSignature(events.PointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({
    localPan: T.Offset(),
    localPanDelta: T.Offset()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(events.PointerPanZoomUpdateEvent))));
  dart.setLibraryUri(events.PointerPanZoomUpdateEvent, I[0]);
  dart.setFieldSignature(events.PointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({
    pan: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    panDelta: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    scale: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    rotation: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events.PointerPanZoomUpdateEvent))));
  var original$12 = dart.privateName(events, "_TransformedPointerPanZoomUpdateEvent.original");
  var transform$12 = dart.privateName(events, "_TransformedPointerPanZoomUpdateEvent.transform");
  var ___TransformedPointerPanZoomUpdateEvent_localPan = dart.privateName(events, "_#_TransformedPointerPanZoomUpdateEvent#localPan");
  var ___TransformedPointerPanZoomUpdateEvent_localPanDelta = dart.privateName(events, "_#_TransformedPointerPanZoomUpdateEvent#localPanDelta");
  const _TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36 = class _TransformedPointerEvent__CopyPointerPanZoomUpdateEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36, events._CopyPointerPanZoomUpdateEvent);
  events._TransformedPointerPanZoomUpdateEvent = class _TransformedPointerPanZoomUpdateEvent extends _TransformedPointerEvent__CopyPointerPanZoomUpdateEvent$36 {
    get original() {
      return this[original$12];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$12];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerPanZoomUpdateEvent.new(original, transform);
    }
    get pan() {
      return this.original.pan;
    }
    get localPan() {
      let t$361, t$360;
      t$360 = this[___TransformedPointerPanZoomUpdateEvent_localPan];
      return t$360 == null ? (t$361 = events.PointerEvent.transformPosition(this.transform, this.pan), this[___TransformedPointerPanZoomUpdateEvent_localPan] == null ? this[___TransformedPointerPanZoomUpdateEvent_localPan] = t$361 : dart.throw(new _internal.LateError.fieldADI("localPan"))) : t$360;
    }
    get panDelta() {
      return this.original.panDelta;
    }
    get localPanDelta() {
      let t$361, t$360;
      t$360 = this[___TransformedPointerPanZoomUpdateEvent_localPanDelta];
      return t$360 == null ? (t$361 = events.PointerEvent.transformDeltaViaPositions({transform: this.transform, untransformedDelta: this.panDelta, untransformedEndPosition: this.pan, transformedEndPosition: this.localPan}), this[___TransformedPointerPanZoomUpdateEvent_localPanDelta] == null ? this[___TransformedPointerPanZoomUpdateEvent_localPanDelta] = t$361 : dart.throw(new _internal.LateError.fieldADI("localPanDelta"))) : t$360;
    }
    get scale() {
      return this.original.scale;
    }
    get rotation() {
      return this.original.rotation;
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerPanZoomUpdateEvent.new = function(original, transform) {
    this[___TransformedPointerPanZoomUpdateEvent_localPan] = null;
    this[___TransformedPointerPanZoomUpdateEvent_localPanDelta] = null;
    this[original$12] = original;
    this[transform$12] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomUpdateEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerPanZoomUpdateEvent.prototype;
  dart.addTypeTests(events._TransformedPointerPanZoomUpdateEvent);
  dart.addRtiResources(events._TransformedPointerPanZoomUpdateEvent, ["flutter__src__gestures__events|_TransformedPointerPanZoomUpdateEvent", "flutter__src__gestures__events|PointerPanZoomUpdateEvent", "flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerPanZoomUpdateEvent);
  dart.setMethodSignature(events._TransformedPointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomUpdateEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomUpdateEvent))));
  dart.setGetterSignature(events._TransformedPointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({
    pan: T.Offset(),
    localPan: T.Offset(),
    panDelta: T.Offset(),
    localPanDelta: T.Offset(),
    scale: T.double(),
    rotation: T.double()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomUpdateEvent))));
  dart.setLibraryUri(events._TransformedPointerPanZoomUpdateEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerPanZoomUpdateEvent, () => dart.global.Object.setPrototypeOf({
    [___TransformedPointerPanZoomUpdateEvent_localPan]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [___TransformedPointerPanZoomUpdateEvent_localPanDelta]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    original: {type: T.PointerPanZoomUpdateEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomUpdateEvent))));
  events._CopyPointerPanZoomEndEvent = class _CopyPointerPanZoomEndEvent extends events.PointerEvent {};
  events._CopyPointerPanZoomEndEvent[dart.mixinOn] = PointerEvent => class _CopyPointerPanZoomEndEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      if (!(kind == null || kind === ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 2261, 12, "kind == null || identical(kind, PointerDeviceKind.trackpad)");
      return new events.PointerPanZoomEndEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), device: (t$360$0 = device, t$360$0 == null ? this.device : t$360$0), position: (t$360$1 = position, t$360$1 == null ? this.position : t$360$1), embedderId: (t$360$2 = embedderId, t$360$2 == null ? this.embedderId : t$360$2)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerPanZoomEndEvent);
  dart.addRtiResources(events._CopyPointerPanZoomEndEvent, ["flutter__src__gestures__events|_CopyPointerPanZoomEndEvent"]);
  dart.addTypeCaches(events._CopyPointerPanZoomEndEvent);
  dart.setMethodSignature(events._CopyPointerPanZoomEndEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerPanZoomEndEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerPanZoomEndEvent))));
  dart.setLibraryUri(events._CopyPointerPanZoomEndEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$8 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$8.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$8).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$8.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$8, events._PointerEventDescription);
  const PointerEvent__CopyPointerPanZoomEndEvent$36 = class PointerEvent__CopyPointerPanZoomEndEvent extends PointerEvent__PointerEventDescription$36$8 {};
  (PointerEvent__CopyPointerPanZoomEndEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerPanZoomEndEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerPanZoomEndEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerPanZoomEndEvent$36, events._CopyPointerPanZoomEndEvent);
  events.PointerPanZoomEndEvent = class PointerPanZoomEndEvent extends PointerEvent__CopyPointerPanZoomEndEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let device = opts && 'device' in opts ? opts.device : 0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
      return new events.PointerPanZoomEndEvent.new({viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, synthesized: synthesized});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerPanZoomEndEvent.new((t$360 = T.PointerPanZoomEndEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerPanZoomEndEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let device = opts && 'device' in opts ? opts.device : 0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    let synthesized = opts && 'synthesized' in opts ? opts.synthesized : false;
    dart.global.Object.getPrototypeOf(events.PointerPanZoomEndEvent).new.call(this, {kind: ui.PointerDeviceKind.trackpad, viewId: viewId, timeStamp: timeStamp, device: device, pointer: pointer, position: position, embedderId: embedderId, synthesized: synthesized});
    ;
  }).prototype = events.PointerPanZoomEndEvent.prototype;
  dart.addTypeTests(events.PointerPanZoomEndEvent);
  dart.addRtiResources(events.PointerPanZoomEndEvent, ["flutter__src__gestures__events|PointerPanZoomEndEvent"]);
  dart.addTypeCaches(events.PointerPanZoomEndEvent);
  dart.setMethodSignature(events.PointerPanZoomEndEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomEndEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerPanZoomEndEvent))));
  dart.setLibraryUri(events.PointerPanZoomEndEvent, I[0]);
  var original$13 = dart.privateName(events, "_TransformedPointerPanZoomEndEvent.original");
  var transform$13 = dart.privateName(events, "_TransformedPointerPanZoomEndEvent.transform");
  const _TransformedPointerEvent__CopyPointerPanZoomEndEvent$36 = class _TransformedPointerEvent__CopyPointerPanZoomEndEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerPanZoomEndEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerPanZoomEndEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerPanZoomEndEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerPanZoomEndEvent$36, events._CopyPointerPanZoomEndEvent);
  events._TransformedPointerPanZoomEndEvent = class _TransformedPointerPanZoomEndEvent extends _TransformedPointerEvent__CopyPointerPanZoomEndEvent$36 {
    get original() {
      return this[original$13];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$13];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerPanZoomEndEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerPanZoomEndEvent.new = function(original, transform) {
    this[original$13] = original;
    this[transform$13] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomEndEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerPanZoomEndEvent.prototype;
  dart.addTypeTests(events._TransformedPointerPanZoomEndEvent);
  dart.addRtiResources(events._TransformedPointerPanZoomEndEvent, ["flutter__src__gestures__events|_TransformedPointerPanZoomEndEvent", "flutter__src__gestures__events|PointerPanZoomEndEvent", "flutter__src__gestures__events|_CopyPointerPanZoomEndEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerPanZoomEndEvent);
  dart.setMethodSignature(events._TransformedPointerPanZoomEndEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerPanZoomEndEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomEndEvent))));
  dart.setLibraryUri(events._TransformedPointerPanZoomEndEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerPanZoomEndEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerPanZoomEndEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerPanZoomEndEvent))));
  events._CopyPointerCancelEvent = class _CopyPointerCancelEvent extends events.PointerEvent {};
  events._CopyPointerCancelEvent[dart.mixinOn] = PointerEvent => class _CopyPointerCancelEvent extends PointerEvent {
    copyWith(opts) {
      let t$360, t$360$, t$360$0, t$360$1, t$360$2, t$360$3, t$360$4, t$360$5, t$360$6, t$360$7, t$360$8, t$360$9, t$360$10, t$360$11, t$360$12, t$360$13, t$360$14, t$360$15, t$360$16, t$360$17;
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : null;
      let pointer = opts && 'pointer' in opts ? opts.pointer : null;
      let kind = opts && 'kind' in opts ? opts.kind : null;
      let device = opts && 'device' in opts ? opts.device : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let delta = opts && 'delta' in opts ? opts.delta : null;
      let buttons = opts && 'buttons' in opts ? opts.buttons : null;
      let obscured = opts && 'obscured' in opts ? opts.obscured : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : null;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : null;
      let distance = opts && 'distance' in opts ? opts.distance : null;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : null;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : null;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : null;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : null;
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let tilt = opts && 'tilt' in opts ? opts.tilt : null;
      let synthesized = opts && 'synthesized' in opts ? opts.synthesized : null;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : null;
      return new events.PointerCancelEvent.new({viewId: (t$360 = viewId, t$360 == null ? this.viewId : t$360), timeStamp: (t$360$ = timeStamp, t$360$ == null ? this.timeStamp : t$360$), pointer: (t$360$0 = pointer, t$360$0 == null ? this.pointer : t$360$0), kind: (t$360$1 = kind, t$360$1 == null ? this.kind : t$360$1), device: (t$360$2 = device, t$360$2 == null ? this.device : t$360$2), position: (t$360$3 = position, t$360$3 == null ? this.position : t$360$3), buttons: (t$360$4 = buttons, t$360$4 == null ? this.buttons : t$360$4), obscured: (t$360$5 = obscured, t$360$5 == null ? this.obscured : t$360$5), pressureMin: (t$360$6 = pressureMin, t$360$6 == null ? this.pressureMin : t$360$6), pressureMax: (t$360$7 = pressureMax, t$360$7 == null ? this.pressureMax : t$360$7), distance: (t$360$8 = distance, t$360$8 == null ? this.distance : t$360$8), distanceMax: (t$360$9 = distanceMax, t$360$9 == null ? this.distanceMax : t$360$9), size: (t$360$10 = size, t$360$10 == null ? this.size : t$360$10), radiusMajor: (t$360$11 = radiusMajor, t$360$11 == null ? this.radiusMajor : t$360$11), radiusMinor: (t$360$12 = radiusMinor, t$360$12 == null ? this.radiusMinor : t$360$12), radiusMin: (t$360$13 = radiusMin, t$360$13 == null ? this.radiusMin : t$360$13), radiusMax: (t$360$14 = radiusMax, t$360$14 == null ? this.radiusMax : t$360$14), orientation: (t$360$15 = orientation, t$360$15 == null ? this.orientation : t$360$15), tilt: (t$360$16 = tilt, t$360$16 == null ? this.tilt : t$360$16), embedderId: (t$360$17 = embedderId, t$360$17 == null ? this.embedderId : t$360$17)}).transformed(this.transform);
    }
  };
  dart.addTypeTests(events._CopyPointerCancelEvent);
  dart.addRtiResources(events._CopyPointerCancelEvent, ["flutter__src__gestures__events|_CopyPointerCancelEvent"]);
  dart.addTypeCaches(events._CopyPointerCancelEvent);
  dart.setMethodSignature(events._CopyPointerCancelEvent, () => dart.global.Object.setPrototypeOf({copyWith: T.__ToPointerCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._CopyPointerCancelEvent))));
  dart.setLibraryUri(events._CopyPointerCancelEvent, I[0]);
  const PointerEvent__PointerEventDescription$36$9 = class PointerEvent__PointerEventDescription extends events.PointerEvent {};
  (PointerEvent__PointerEventDescription$36$9.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__PointerEventDescription$36$9).new.call(this, opts);
  }).prototype = PointerEvent__PointerEventDescription$36$9.prototype;
  dart.applyMixin(PointerEvent__PointerEventDescription$36$9, events._PointerEventDescription);
  const PointerEvent__CopyPointerCancelEvent$36 = class PointerEvent__CopyPointerCancelEvent extends PointerEvent__PointerEventDescription$36$9 {};
  (PointerEvent__CopyPointerCancelEvent$36.new = function(opts) {
    dart.global.Object.getPrototypeOf(PointerEvent__CopyPointerCancelEvent$36).new.call(this, opts);
  }).prototype = PointerEvent__CopyPointerCancelEvent$36.prototype;
  dart.applyMixin(PointerEvent__CopyPointerCancelEvent$36, events._CopyPointerCancelEvent);
  events.PointerCancelEvent = class PointerCancelEvent extends PointerEvent__CopyPointerCancelEvent$36 {
    static ['_#new#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
      let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
      let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
      let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
      let device = opts && 'device' in opts ? opts.device : 0;
      let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
      let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
      let obscured = opts && 'obscured' in opts ? opts.obscured : false;
      let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
      let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
      let distance = opts && 'distance' in opts ? opts.distance : 0;
      let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
      let size = opts && 'size' in opts ? opts.size : 0;
      let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
      let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
      let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
      let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
      let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
      let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
      let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
      return new events.PointerCancelEvent.new({viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    }
    transformed(transform) {
      let t$360;
      if (transform == null || dart.equals(transform, this.transform)) {
        return this;
      }
      return new events._TransformedPointerCancelEvent.new((t$360 = T.PointerCancelEventN()[_as](this.original), t$360 == null ? this : t$360), transform);
    }
  };
  (events.PointerCancelEvent.new = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : 0;
    let timeStamp = opts && 'timeStamp' in opts ? opts.timeStamp : C[0] || CT.C0;
    let pointer = opts && 'pointer' in opts ? opts.pointer : 0;
    let kind = opts && 'kind' in opts ? opts.kind : C[1] || CT.C1;
    let device = opts && 'device' in opts ? opts.device : 0;
    let position = opts && 'position' in opts ? opts.position : C[2] || CT.C2;
    let buttons = opts && 'buttons' in opts ? opts.buttons : 0;
    let obscured = opts && 'obscured' in opts ? opts.obscured : false;
    let pressureMin = opts && 'pressureMin' in opts ? opts.pressureMin : 1;
    let pressureMax = opts && 'pressureMax' in opts ? opts.pressureMax : 1;
    let distance = opts && 'distance' in opts ? opts.distance : 0;
    let distanceMax = opts && 'distanceMax' in opts ? opts.distanceMax : 0;
    let size = opts && 'size' in opts ? opts.size : 0;
    let radiusMajor = opts && 'radiusMajor' in opts ? opts.radiusMajor : 0;
    let radiusMinor = opts && 'radiusMinor' in opts ? opts.radiusMinor : 0;
    let radiusMin = opts && 'radiusMin' in opts ? opts.radiusMin : 0;
    let radiusMax = opts && 'radiusMax' in opts ? opts.radiusMax : 0;
    let orientation = opts && 'orientation' in opts ? opts.orientation : 0;
    let tilt = opts && 'tilt' in opts ? opts.tilt : 0;
    let embedderId = opts && 'embedderId' in opts ? opts.embedderId : 0;
    if (!(kind !== ui.PointerDeviceKind.trackpad)) dart.assertFailed(null, I[4], 2393, 15, "!identical(kind, PointerDeviceKind.trackpad)");
    dart.global.Object.getPrototypeOf(events.PointerCancelEvent).new.call(this, {down: false, pressure: 0.0, viewId: viewId, timeStamp: timeStamp, pointer: pointer, kind: kind, device: device, position: position, buttons: buttons, obscured: obscured, pressureMin: pressureMin, pressureMax: pressureMax, distance: distance, distanceMax: distanceMax, size: size, radiusMajor: radiusMajor, radiusMinor: radiusMinor, radiusMin: radiusMin, radiusMax: radiusMax, orientation: orientation, tilt: tilt, embedderId: embedderId});
    ;
  }).prototype = events.PointerCancelEvent.prototype;
  dart.addTypeTests(events.PointerCancelEvent);
  dart.addRtiResources(events.PointerCancelEvent, ["flutter__src__gestures__events|PointerCancelEvent"]);
  dart.addTypeCaches(events.PointerCancelEvent);
  dart.setMethodSignature(events.PointerCancelEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events.PointerCancelEvent))));
  dart.setLibraryUri(events.PointerCancelEvent, I[0]);
  var original$14 = dart.privateName(events, "_TransformedPointerCancelEvent.original");
  var transform$14 = dart.privateName(events, "_TransformedPointerCancelEvent.transform");
  const _TransformedPointerEvent__CopyPointerCancelEvent$36 = class _TransformedPointerEvent__CopyPointerCancelEvent extends events._TransformedPointerEvent {};
  (_TransformedPointerEvent__CopyPointerCancelEvent$36.new = function() {
    dart.global.Object.getPrototypeOf(_TransformedPointerEvent__CopyPointerCancelEvent$36).new.call(this);
  }).prototype = _TransformedPointerEvent__CopyPointerCancelEvent$36.prototype;
  dart.applyMixin(_TransformedPointerEvent__CopyPointerCancelEvent$36, events._CopyPointerCancelEvent);
  events._TransformedPointerCancelEvent = class _TransformedPointerCancelEvent extends _TransformedPointerEvent__CopyPointerCancelEvent$36 {
    get original() {
      return this[original$14];
    }
    set original(value) {
      super.original = value;
    }
    get transform() {
      return this[transform$14];
    }
    set transform(value) {
      super.transform = value;
    }
    static ['_#new#tearOff'](original, transform) {
      return new events._TransformedPointerCancelEvent.new(original, transform);
    }
    transformed(transform) {
      return this.original.transformed(transform);
    }
  };
  (events._TransformedPointerCancelEvent.new = function(original, transform) {
    this[original$14] = original;
    this[transform$14] = transform;
    dart.global.Object.getPrototypeOf(events._TransformedPointerCancelEvent).new.call(this);
    ;
  }).prototype = events._TransformedPointerCancelEvent.prototype;
  dart.addTypeTests(events._TransformedPointerCancelEvent);
  dart.addRtiResources(events._TransformedPointerCancelEvent, ["flutter__src__gestures__events|_TransformedPointerCancelEvent", "flutter__src__gestures__events|PointerCancelEvent", "flutter__src__gestures__events|_CopyPointerCancelEvent", "flutter__src__gestures__events|PointerEvent", "flutter__src__gestures__events|_PointerEventDescription", "flutter__src__foundation__diagnostics|Diagnosticable"]);
  dart.addTypeCaches(events._TransformedPointerCancelEvent);
  dart.setMethodSignature(events._TransformedPointerCancelEvent, () => dart.global.Object.setPrototypeOf({transformed: T.Matrix4NToPointerCancelEvent()}, dart.getMethods(dart.global.Object.getPrototypeOf(events._TransformedPointerCancelEvent))));
  dart.setLibraryUri(events._TransformedPointerCancelEvent, I[0]);
  dart.setFieldSignature(events._TransformedPointerCancelEvent, () => dart.global.Object.setPrototypeOf({
    original: {type: T.PointerCancelEvent(), isConst: false, isFinal: true, libraryUri: I[0]},
    transform: {type: T.Matrix4(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(events._TransformedPointerCancelEvent))));
  events.nthMouseButton = function nthMouseButton(number) {
    return ((1)[$leftShift](number - 1) & -1) >>> 0;
  };
  events.nthStylusButton = function nthStylusButton(number) {
    return ((2)[$leftShift](number - 1) & -1) >>> 0;
  };
  events.smallestButton = function smallestButton(buttons) {
    return (buttons & -buttons) >>> 0;
  };
  events.isSingleButton = function isSingleButton(buttons) {
    return buttons !== 0 && events.smallestButton(buttons) === buttons;
  };
  events.computeHitSlop = function computeHitSlop(kind, settings) {
    let t$360, t$360$;
    switch (kind) {
      case C[3] || CT.C3:
        {
          return 1;
        }
      case C[4] || CT.C4:
      case C[5] || CT.C5:
      case C[6] || CT.C6:
      case C[1] || CT.C1:
      case C[7] || CT.C7:
        {
          t$360$ = (t$360 = settings, t$360 == null ? null : t$360.touchSlop);
          return t$360$ == null ? 18 : t$360$;
        }
    }
  };
  events.computePanSlop = function computePanSlop(kind, settings) {
    let t$360, t$360$;
    switch (kind) {
      case C[3] || CT.C3:
        {
          return 2;
        }
      case C[4] || CT.C4:
      case C[5] || CT.C5:
      case C[6] || CT.C6:
      case C[1] || CT.C1:
      case C[7] || CT.C7:
        {
          t$360$ = (t$360 = settings, t$360 == null ? null : t$360.panSlop);
          return t$360$ == null ? 36 : t$360$;
        }
    }
  };
  events.computeScaleSlop = function computeScaleSlop(kind) {
    switch (kind) {
      case C[3] || CT.C3:
        {
          return 1;
        }
      case C[4] || CT.C4:
      case C[5] || CT.C5:
      case C[6] || CT.C6:
      case C[1] || CT.C1:
      case C[7] || CT.C7:
        {
          return 18;
        }
    }
  };
  dart.defineLazy(events, {
    /*events.kPrimaryButton*/get kPrimaryButton() {
      return 1;
    },
    /*events.kSecondaryButton*/get kSecondaryButton() {
      return 2;
    },
    /*events.kPrimaryMouseButton*/get kPrimaryMouseButton() {
      return 1;
    },
    /*events.kSecondaryMouseButton*/get kSecondaryMouseButton() {
      return 2;
    },
    /*events.kStylusContact*/get kStylusContact() {
      return 1;
    },
    /*events.kPrimaryStylusButton*/get kPrimaryStylusButton() {
      return 2;
    },
    /*events.kTertiaryButton*/get kTertiaryButton() {
      return 4;
    },
    /*events.kMiddleMouseButton*/get kMiddleMouseButton() {
      return 4;
    },
    /*events.kSecondaryStylusButton*/get kSecondaryStylusButton() {
      return 4;
    },
    /*events.kBackMouseButton*/get kBackMouseButton() {
      return 8;
    },
    /*events.kForwardMouseButton*/get kForwardMouseButton() {
      return 16;
    },
    /*events.kTouchContact*/get kTouchContact() {
      return 1;
    }
  }, false);
  dart.moduleConstCaches.set("packages/flutter/src/gestures/events.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"ui|Offset":{"ui|OffsetBase":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Duration":{"Comparable.T":"core|Duration","core|Comparable":["core|Duration"]},"ui|PointerDeviceKind":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"flutter__src__gestures__events|PointerAddedEvent":{"flutter__src__gestures__events|_CopyPointerAddedEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerAddedEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_PointerEventDescription":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerRemovedEvent":{"flutter__src__gestures__events|_CopyPointerRemovedEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerRemovedEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerHoverEvent":{"flutter__src__gestures__events|_CopyPointerHoverEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerHoverEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEnterEvent":{"flutter__src__gestures__events|_CopyPointerEnterEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerEnterEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerExitEvent":{"flutter__src__gestures__events|_CopyPointerExitEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerExitEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerDownEvent":{"flutter__src__gestures__events|_CopyPointerDownEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerDownEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerMoveEvent":{"flutter__src__gestures__events|_CopyPointerMoveEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerMoveEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerUpEvent":{"flutter__src__gestures__events|_CopyPointerUpEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerUpEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerScrollEvent":{"flutter__src__gestures__events|_CopyPointerScrollEvent":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerScrollEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerSignalEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerScrollInertiaCancelEvent":{"flutter__src__gestures__events|_CopyPointerScrollInertiaCancelEvent":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerScrollInertiaCancelEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerScaleEvent":{"flutter__src__gestures__events|_CopyPointerScaleEvent":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerScaleEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomStartEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomStartEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomStartEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomUpdateEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomEndEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomEndEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomEndEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerCancelEvent":{"flutter__src__gestures__events|_CopyPointerCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerCancelEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_AbstractPointerEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerEvent":{"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[],"flutter__src__gestures__events|PointerEvent":[]},"flutter__src__gestures__events|_TransformedPointerAddedEvent":{"flutter__src__gestures__events|PointerAddedEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerAddedEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerRemovedEvent":{"flutter__src__gestures__events|PointerRemovedEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerRemovedEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerHoverEvent":{"flutter__src__gestures__events|PointerHoverEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerHoverEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerEnterEvent":{"flutter__src__gestures__events|PointerEnterEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerEnterEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerExitEvent":{"flutter__src__gestures__events|PointerExitEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerExitEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerDownEvent":{"flutter__src__gestures__events|PointerDownEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerDownEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerMoveEvent":{"flutter__src__gestures__events|PointerMoveEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerMoveEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerUpEvent":{"flutter__src__gestures__events|PointerUpEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerUpEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerScrollEvent":{"flutter__src__gestures__events|PointerScrollEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerScrollEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerScrollInertiaCancelEvent":{"flutter__src__gestures__events|PointerScrollInertiaCancelEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerScrollInertiaCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerScaleEvent":{"flutter__src__gestures__events|PointerScaleEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerScaleEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|PointerSignalEvent":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerPanZoomStartEvent":{"flutter__src__gestures__events|PointerPanZoomStartEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerPanZoomStartEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerPanZoomUpdateEvent":{"flutter__src__gestures__events|PointerPanZoomUpdateEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerPanZoomEndEvent":{"flutter__src__gestures__events|PointerPanZoomEndEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerPanZoomEndEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_TransformedPointerCancelEvent":{"flutter__src__gestures__events|PointerCancelEvent":[],"flutter__src__gestures__events|_TransformedPointerEvent":[],"flutter__src__gestures__events|_CopyPointerCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__gestures__events|_AbstractPointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]}}'));
  dart.trackLibraries("packages/flutter/src/gestures/events.dart", {
    "package:flutter/src/gestures/events.dart": events
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["events.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/gestures/events.dart.lib.js"}');
  // Exports:
  return {
    src__gestures__events: events
  };
}));

//# sourceMappingURL=events.dart.lib.js.map

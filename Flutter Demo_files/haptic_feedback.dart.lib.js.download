// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/services/haptic_feedback.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__haptic_feedback_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  var haptic_feedback = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>()")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/services/haptic_feedback.dart"];
  haptic_feedback.HapticFeedback = class HapticFeedback extends core.Object {
    static vibrate() {
      return async.async(T.void(), function* vibrate() {
        yield system_channels.SystemChannels.platform.invokeMethod(T.void(), "HapticFeedback.vibrate");
      });
    }
    static lightImpact() {
      return async.async(T.void(), function* lightImpact() {
        yield system_channels.SystemChannels.platform.invokeMethod(T.void(), "HapticFeedback.vibrate", "HapticFeedbackType.lightImpact");
      });
    }
    static mediumImpact() {
      return async.async(T.void(), function* mediumImpact() {
        yield system_channels.SystemChannels.platform.invokeMethod(T.void(), "HapticFeedback.vibrate", "HapticFeedbackType.mediumImpact");
      });
    }
    static heavyImpact() {
      return async.async(T.void(), function* heavyImpact() {
        yield system_channels.SystemChannels.platform.invokeMethod(T.void(), "HapticFeedback.vibrate", "HapticFeedbackType.heavyImpact");
      });
    }
    static selectionClick() {
      return async.async(T.void(), function* selectionClick() {
        yield system_channels.SystemChannels.platform.invokeMethod(T.void(), "HapticFeedback.vibrate", "HapticFeedbackType.selectionClick");
      });
    }
  };
  (haptic_feedback.HapticFeedback.new = function() {
    ;
  }).prototype = haptic_feedback.HapticFeedback.prototype;
  dart.addTypeTests(haptic_feedback.HapticFeedback);
  dart.addRtiResources(haptic_feedback.HapticFeedback, ["flutter__src__services__haptic_feedback|HapticFeedback"]);
  dart.addTypeCaches(haptic_feedback.HapticFeedback);
  dart.setStaticMethodSignature(haptic_feedback.HapticFeedback, () => ['vibrate', 'lightImpact', 'mediumImpact', 'heavyImpact', 'selectionClick']);
  dart.setLibraryUri(haptic_feedback.HapticFeedback, I[0]);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"async|Future":{"Future.T":"1"}}'));
  dart.trackLibraries("packages/flutter/src/services/haptic_feedback.dart", {
    "package:flutter/src/services/haptic_feedback.dart": haptic_feedback
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["haptic_feedback.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAmB6B;AACzB,cAAqB,AAAS,+DAAmB;MACnD;;;AAS+B;AAC7B,cAAqB,AAAS,+DAC5B,0BACA;MAEJ;;;AASgC;AAC9B,cAAqB,AAAS,+DAC5B,0BACA;MAEJ;;;AAU+B;AAC7B,cAAqB,AAAS,+DAC5B,0BACA;MAEJ;;;AAQkC;AAChC,cAAqB,AAAS,+DAC5B,0BACA;MAEJ;;;;;EACF","file":"../../../../../../../../F:/packages/flutter/src/services/haptic_feedback.dart.lib.js"}');
  // Exports:
  return {
    src__services__haptic_feedback: haptic_feedback
  };
}));

//# sourceMappingURL=haptic_feedback.dart.lib.js.map

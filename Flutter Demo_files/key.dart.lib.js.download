// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/foundation/key.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__foundation__key_dart(dart_sdk, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var key = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T$ = {
    String: () => (T$.String = dart.constFn(dart_rti.findType("core|String")))(),
    StringToKey: () => (T$.StringToKey = dart.constFn(dart_rti.findType("flutter__src__foundation__key|Key(core|String)")))(),
    Type: () => (T$.Type = dart.constFn(dart_rti.findType("core|Type")))()
  };
  var G = {
    ValueKeyOfString: () => (G.ValueKeyOfString = dart.constFn(key.ValueKey$(T$.String())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:flutter/src/foundation/key.dart"];
  key.Key = class Key extends core.Object {
    static ['_#new#tearOff'](value) {
      return new (G.ValueKeyOfString()).new(value);
    }
  };
  (key.Key.empty = function() {
    ;
  }).prototype = key.Key.prototype;
  dart.addTypeTests(key.Key);
  dart.addRtiResources(key.Key, ["flutter__src__foundation__key|Key"]);
  dart.addTypeCaches(key.Key);
  dart.setStaticMethodSignature(key.Key, () => ['new']);
  dart.setLibraryUri(key.Key, I[0]);
  key.LocalKey = class LocalKey extends key.Key {};
  (key.LocalKey.new = function() {
    dart.global.Object.getPrototypeOf(key.LocalKey).empty.call(this);
    ;
  }).prototype = key.LocalKey.prototype;
  dart.addTypeTests(key.LocalKey);
  dart.addRtiResources(key.LocalKey, ["flutter__src__foundation__key|LocalKey"]);
  dart.addTypeCaches(key.LocalKey);
  dart.setLibraryUri(key.LocalKey, I[0]);
  key.UniqueKey = class UniqueKey extends key.LocalKey {
    static ['_#new#tearOff']() {
      return new key.UniqueKey.new();
    }
    toString() {
      return "[#" + diagnostics.shortHash(this) + "]";
    }
  };
  (key.UniqueKey.new = function() {
    dart.global.Object.getPrototypeOf(key.UniqueKey).new.call(this);
    ;
  }).prototype = key.UniqueKey.prototype;
  dart.addTypeTests(key.UniqueKey);
  dart.addRtiResources(key.UniqueKey, ["flutter__src__foundation__key|UniqueKey"]);
  dart.addTypeCaches(key.UniqueKey);
  dart.setLibraryUri(key.UniqueKey, I[0]);
  dart.defineExtensionMethods(key.UniqueKey, ['toString']);
  var value$ = dart.privateName(key, "ValueKey.value");
  var _eval = dart.privateName(dart_rti, "_eval");
  var _is = dart.privateName(dart_rti, "_is");
  const _is_ValueKey_default = Symbol('_is_ValueKey_default');
  key.ValueKey$ = dart.generic(T => {
    var __t$ValueKeyOfT = () => (__t$ValueKeyOfT = dart.constFn(T[_eval]("flutter__src__foundation__key|ValueKey<0>")))();
    var __t$_TypeLiteralOfValueKeyOfT = () => (__t$_TypeLiteralOfValueKeyOfT = dart.constFn(key._TypeLiteral$(__t$ValueKeyOfT())))();
    class ValueKey extends key.LocalKey {
      get value() {
        return this[value$];
      }
      set value(value) {
        super.value = value;
      }
      static ['_#new#tearOff'](T, value) {
        return new (key.ValueKey$(T)).new(value);
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
          return false;
        }
        return __t$ValueKeyOfT()[_is](other) && dart.equals(other.value, this.value);
      }
      get hashCode() {
        return core.Object.hash(dart.runtimeType(this), this.value);
      }
      toString() {
        let valueString = dart.equals(dart_rti.createRuntimeType(T), dart_rti.createRuntimeType(T$.String())) ? "<'" + dart.str(this.value) + "'>" : "<" + dart.str(this.value) + ">";
        if (dart.equals(dart.runtimeType(this), new (__t$_TypeLiteralOfValueKeyOfT()).new().type)) {
          return "[" + valueString + "]";
        }
        return "[" + dart.str(dart_rti.createRuntimeType(T)) + " " + valueString + "]";
      }
    }
    (ValueKey.new = function(value) {
      this[value$] = value;
      this.$ti = this.$ti || __t$ValueKeyOfT();
      dart.global.Object.getPrototypeOf(ValueKey).new.call(this);
      ;
    }).prototype = ValueKey.prototype;
    dart.addTypeTests(ValueKey);
    ValueKey.prototype[_is_ValueKey_default] = true;
    dart.addRtiResources(ValueKey, ["flutter__src__foundation__key|ValueKey"]);
    dart.addTypeCaches(ValueKey);
    dart.setLibraryUri(ValueKey, I[0]);
    dart.setFieldSignature(ValueKey, () => dart.global.Object.setPrototypeOf({value: {type: T, isConst: false, isFinal: true}}, dart.getFields(dart.global.Object.getPrototypeOf(ValueKey))));
    dart.defineExtensionMethods(ValueKey, ['_equals', 'toString']);
    dart.defineExtensionAccessors(ValueKey, ['hashCode']);
    return ValueKey;
  });
  key.ValueKey = key.ValueKey$();
  dart.addTypeTests(key.ValueKey, _is_ValueKey_default);
  const _is__TypeLiteral_default = Symbol('_is__TypeLiteral_default');
  key._TypeLiteral$ = dart.generic(T => {
    var __t$_TypeLiteralOfT = () => (__t$_TypeLiteralOfT = dart.constFn(T[_eval]("flutter__src__foundation__key|_TypeLiteral<0>")))();
    class _TypeLiteral extends core.Object {
      get type() {
        return dart_rti.createRuntimeType(T);
      }
      static ['_#new#tearOff'](T) {
        return new (key._TypeLiteral$(T)).new();
      }
    }
    (_TypeLiteral.new = function() {
      this.$ti = this.$ti || __t$_TypeLiteralOfT();
      ;
    }).prototype = _TypeLiteral.prototype;
    dart.addTypeTests(_TypeLiteral);
    _TypeLiteral.prototype[_is__TypeLiteral_default] = true;
    dart.addRtiResources(_TypeLiteral, ["flutter__src__foundation__key|_TypeLiteral"]);
    dart.addTypeCaches(_TypeLiteral);
    dart.setGetterSignature(_TypeLiteral, () => dart.global.Object.setPrototypeOf({type: T$.Type()}, dart.getGetters(dart.global.Object.getPrototypeOf(_TypeLiteral))));
    dart.setLibraryUri(_TypeLiteral, I[0]);
    return _TypeLiteral;
  });
  key._TypeLiteral = key._TypeLiteral$();
  dart.addTypeTests(key._TypeLiteral, _is__TypeLiteral_default);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"flutter__src__foundation__key|ValueKey":{"ValueKey.T":"1","flutter__src__foundation__key|LocalKey":[],"flutter__src__foundation__key|Key":[]},"flutter__src__foundation__key|LocalKey":{"flutter__src__foundation__key|Key":[]},"flutter__src__foundation__key|_TypeLiteral":{"_TypeLiteral.T":"1"},"flutter__src__foundation__key|UniqueKey":{"flutter__src__foundation__key|LocalKey":[],"flutter__src__foundation__key|Key":[]}}'));
  dart.trackLibraries("packages/flutter/src/foundation/key.dart", {
    "package:flutter/src/foundation/key.dart": key
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["key.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCmB;;;;;;;;AAcQ;;EAAO;;;;;;;;;;AAiBX,YAAA,AAAuB,QAAlB,sBAAU,QAAM;IAAE;;;AAH5C;;EAAW;;;;;;;;;;;;;;MAyBH;;;;;;;;;cAGgB;;AACtB,yBAAU,iBAAN,KAAK,oBAAgB;AACvB,gBAAO;;AAET,cAAa,AACT,wBADG,KAAK,KACO,YAAZ,AAAM,KAAD,QAAU;MACxB;;AAGoB,cAAO,mCAAK,OAAa;MAAM;;AAIpC,0BAAgB,YAAF,0EAAc,AAAa,gBAAT,cAAK,OAAM,AAAU,eAAP,cAAK;AAGhE,YAAgB,6BAAZ,OAAe,AAA4B;AAC7C,gBAAO,AAAgB,OAAb,WAAW;;AAEvB,cAAO,AAAmB,gBAAhB,iCAAC,MAAE,WAAW;MAC1B;;;MA1BoB;;AAAd;;IAAoB;;;;;;;;;;;;;;;;;;AA8BT;MAAC;;;;;;;;IACpB","file":"../../../../../../../../F:/packages/flutter/src/foundation/key.dart.lib.js"}');
  // Exports:
  return {
    src__foundation__key: key
  };
}));

//# sourceMappingURL=key.dart.lib.js.map

// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/services/mouse_cursor.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/services/text_editing_delta.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__services__mouse_cursor_dart(dart_sdk, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__services__text_editing_delta$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var mouse_cursor = Object.create(dart.library);
  var $_get = dartx._get;
  var $remove = dartx.remove;
  var $_set = dartx._set;
  var $runtimeType = dartx.runtimeType;
  var $hashCode = dartx.hashCode;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    MouseCursorSession: () => (T.MouseCursorSession = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|MouseCursorSession")))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))(),
    PointerRemovedEvent: () => (T.PointerRemovedEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerRemovedEvent")))(),
    _DeferringMouseCursor: () => (T._DeferringMouseCursor = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|_DeferringMouseCursor")))(),
    intToMouseCursorN: () => (T.intToMouseCursorN = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|MouseCursor?(core|int)")))(),
    intAndPointerEventNAndIterableOfMouseCursorTovoid: () => (T.intAndPointerEventNAndIterableOfMouseCursorTovoid = dart.constFn(dart_rti.findType("~(core|int,flutter__src__gestures__events|PointerEvent?,core|Iterable<flutter__src__services__mouse_cursor|MouseCursor>)")))(),
    MouseCursor: () => (T.MouseCursor = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|MouseCursor")))(),
    MapOfint$MouseCursorSession: () => (T.MapOfint$MouseCursorSession = dart.constFn(dart_rti.findType("core|Map<core|int,flutter__src__services__mouse_cursor|MouseCursorSession>")))(),
    intToMouseCursorSession: () => (T.intToMouseCursorSession = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|MouseCursorSession(core|int)")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    IterableOfMouseCursorToMouseCursorN: () => (T.IterableOfMouseCursorToMouseCursorN = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|MouseCursor?(core|Iterable<flutter__src__services__mouse_cursor|MouseCursor>)")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>()")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    intTo_NoopMouseCursorSession: () => (T.intTo_NoopMouseCursorSession = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|_NoopMouseCursorSession(core|int)")))(),
    SystemMouseCursor: () => (T.SystemMouseCursor = dart.constFn(dart_rti.findType("flutter__src__services__mouse_cursor|SystemMouseCursor")))(),
    dynamic: () => (T.dynamic = dart.constFn(dart_rti.findType("@")))()
  };
  var G = {
    IdentityMapOfint$MouseCursorSession: () => (G.IdentityMapOfint$MouseCursorSession = dart.constFn(_js_helper.IdentityMap$(T.int(), T.MouseCursorSession())))(),
    IdentityMapOfString$dynamic: () => (G.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(T.String(), T.dynamic())))(),
    DiagnosticsPropertyOfString: () => (G.DiagnosticsPropertyOfString = dart.constFn(diagnostics.DiagnosticsProperty$(T.String())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "info",
        [_Enum_index]: 3
      }, diagnostics.DiagnosticLevel.prototype));
    },
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
      }, mouse_cursor._DeferringMouseCursor.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
      }, mouse_cursor._NoopMouseCursor.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [kind$]: "none"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [kind$]: "basic"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [kind$]: "click"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [kind$]: "forbidden"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [kind$]: "wait"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C8() {
      return C[8] = dart.const(Object.setPrototypeOf({
        [kind$]: "progress"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C9() {
      return C[9] = dart.const(Object.setPrototypeOf({
        [kind$]: "contextMenu"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C10() {
      return C[10] = dart.const(Object.setPrototypeOf({
        [kind$]: "help"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C11() {
      return C[11] = dart.const(Object.setPrototypeOf({
        [kind$]: "text"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C12() {
      return C[12] = dart.const(Object.setPrototypeOf({
        [kind$]: "verticalText"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C13() {
      return C[13] = dart.const(Object.setPrototypeOf({
        [kind$]: "cell"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C14() {
      return C[14] = dart.const(Object.setPrototypeOf({
        [kind$]: "precise"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C15() {
      return C[15] = dart.const(Object.setPrototypeOf({
        [kind$]: "move"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C16() {
      return C[16] = dart.const(Object.setPrototypeOf({
        [kind$]: "grab"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C17() {
      return C[17] = dart.const(Object.setPrototypeOf({
        [kind$]: "grabbing"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C18() {
      return C[18] = dart.const(Object.setPrototypeOf({
        [kind$]: "noDrop"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C19() {
      return C[19] = dart.const(Object.setPrototypeOf({
        [kind$]: "alias"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C20() {
      return C[20] = dart.const(Object.setPrototypeOf({
        [kind$]: "copy"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C21() {
      return C[21] = dart.const(Object.setPrototypeOf({
        [kind$]: "disappearing"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C22() {
      return C[22] = dart.const(Object.setPrototypeOf({
        [kind$]: "allScroll"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C23() {
      return C[23] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeLeftRight"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C24() {
      return C[24] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUpDown"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C25() {
      return C[25] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUpLeftDownRight"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C26() {
      return C[26] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUpRightDownLeft"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C27() {
      return C[27] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUp"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C28() {
      return C[28] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeDown"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C29() {
      return C[29] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeLeft"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C30() {
      return C[30] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeRight"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C31() {
      return C[31] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUpLeft"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C32() {
      return C[32] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeUpRight"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C33() {
      return C[33] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeDownLeft"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C34() {
      return C[34] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeDownRight"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C35() {
      return C[35] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeColumn"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C36() {
      return C[36] = dart.const(Object.setPrototypeOf({
        [kind$]: "resizeRow"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C37() {
      return C[37] = dart.const(Object.setPrototypeOf({
        [kind$]: "zoomIn"
      }, mouse_cursor.SystemMouseCursor.prototype));
    },
    get C38() {
      return C[38] = dart.const(Object.setPrototypeOf({
        [kind$]: "zoomOut"
      }, mouse_cursor.SystemMouseCursor.prototype));
    }
  }, false);
  var C = Array(39).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/services/mouse_cursor.dart",
    "package:flutter/src/services/mouse_cursor.dart",
    "dart:core"
  ];
  var fallbackMouseCursor$ = dart.privateName(mouse_cursor, "MouseCursorManager.fallbackMouseCursor");
  var _lastSession = dart.privateName(mouse_cursor, "_lastSession");
  var _is = dart.privateName(dart_rti, "_is");
  mouse_cursor.MouseCursorManager = class MouseCursorManager extends core.Object {
    get fallbackMouseCursor() {
      return this[fallbackMouseCursor$];
    }
    set fallbackMouseCursor(value) {
      super.fallbackMouseCursor = value;
    }
    static ['_#new#tearOff'](fallbackMouseCursor) {
      return new mouse_cursor.MouseCursorManager.new(fallbackMouseCursor);
    }
    debugDeviceActiveCursor(device) {
      let result = null;
      if (!dart.fn(() => {
        let t$360;
        result = (t$360 = this[_lastSession][$_get](device), t$360 == null ? null : t$360.cursor);
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[0], 41, 12, "() {\r\n      result = _lastSession[device]?.cursor;\r\n      return true;\r\n    }()");
      return result;
    }
    handleDeviceCursorUpdate(device, triggeringEvent, cursorCandidates) {
      let t$360, t$360$, t$360$0;
      if (T.PointerRemovedEvent()[_is](triggeringEvent)) {
        this[_lastSession][$remove](device);
        return;
      }
      let lastSession = this[_lastSession][$_get](device);
      let nextCursor = (t$360 = mouse_cursor._DeferringMouseCursor.firstNonDeferred(cursorCandidates), t$360 == null ? this.fallbackMouseCursor : t$360);
      if (!!T._DeferringMouseCursor()[_is](nextCursor)) dart.assertFailed(null, I[0], 71, 12, "nextCursor is! _DeferringMouseCursor");
      if (dart.equals((t$360$ = lastSession, t$360$ == null ? null : t$360$.cursor), nextCursor)) {
        return;
      }
      let nextSession = nextCursor.createSession(device);
      this[_lastSession][$_set](device, nextSession);
      t$360$0 = lastSession;
      t$360$0 == null ? null : t$360$0.dispose();
      nextSession.activate();
    }
  };
  (mouse_cursor.MouseCursorManager.new = function(fallbackMouseCursor) {
    this[_lastSession] = new (G.IdentityMapOfint$MouseCursorSession()).new();
    this[fallbackMouseCursor$] = fallbackMouseCursor;
    if (!!dart.equals(fallbackMouseCursor, mouse_cursor.MouseCursor.defer)) dart.assertFailed(null, I[0], 23, 14, "fallbackMouseCursor != MouseCursor.defer");
    ;
  }).prototype = mouse_cursor.MouseCursorManager.prototype;
  dart.addTypeTests(mouse_cursor.MouseCursorManager);
  dart.addRtiResources(mouse_cursor.MouseCursorManager, ["flutter__src__services__mouse_cursor|MouseCursorManager"]);
  dart.addTypeCaches(mouse_cursor.MouseCursorManager);
  dart.setMethodSignature(mouse_cursor.MouseCursorManager, () => dart.global.Object.setPrototypeOf({
    debugDeviceActiveCursor: T.intToMouseCursorN(),
    handleDeviceCursorUpdate: T.intAndPointerEventNAndIterableOfMouseCursorTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor.MouseCursorManager))));
  dart.setLibraryUri(mouse_cursor.MouseCursorManager, I[1]);
  dart.setFieldSignature(mouse_cursor.MouseCursorManager, () => dart.global.Object.setPrototypeOf({
    fallbackMouseCursor: {type: T.MouseCursor(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_lastSession]: {type: T.MapOfint$MouseCursorSession(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(mouse_cursor.MouseCursorManager))));
  var cursor$ = dart.privateName(mouse_cursor, "MouseCursorSession.cursor");
  var device$ = dart.privateName(mouse_cursor, "MouseCursorSession.device");
  mouse_cursor.MouseCursorSession = class MouseCursorSession extends core.Object {
    get cursor() {
      return this[cursor$];
    }
    set cursor(value) {
      super.cursor = value;
    }
    get device() {
      return this[device$];
    }
    set device(value) {
      super.device = value;
    }
  };
  (mouse_cursor.MouseCursorSession.new = function(cursor, device) {
    this[cursor$] = cursor;
    this[device$] = device;
    ;
  }).prototype = mouse_cursor.MouseCursorSession.prototype;
  dart.addTypeTests(mouse_cursor.MouseCursorSession);
  dart.addRtiResources(mouse_cursor.MouseCursorSession, ["flutter__src__services__mouse_cursor|MouseCursorSession"]);
  dart.addTypeCaches(mouse_cursor.MouseCursorSession);
  dart.setLibraryUri(mouse_cursor.MouseCursorSession, I[1]);
  dart.setFieldSignature(mouse_cursor.MouseCursorSession, () => dart.global.Object.setPrototypeOf({
    cursor: {type: T.MouseCursor(), isConst: false, isFinal: true, libraryUri: I[1]},
    device: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(mouse_cursor.MouseCursorSession))));
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  mouse_cursor.MouseCursor = class MouseCursor extends Object_Diagnosticable$36 {
    toString(opts) {
      let minLevel = opts && 'minLevel' in opts ? opts.minLevel : C[0] || CT.C0;
      let debugDescription = this.debugDescription;
      if (minLevel.index >= diagnostics.DiagnosticLevel.info.index) {
        return debugDescription;
      }
      return super.toString({minLevel: minLevel});
    }
  };
  (mouse_cursor.MouseCursor.new = function() {
    ;
  }).prototype = mouse_cursor.MouseCursor.prototype;
  dart.addTypeTests(mouse_cursor.MouseCursor);
  dart.addRtiResources(mouse_cursor.MouseCursor, ["flutter__src__services__mouse_cursor|MouseCursor"]);
  dart.addTypeCaches(mouse_cursor.MouseCursor);
  dart.setLibraryUri(mouse_cursor.MouseCursor, I[1]);
  dart.setStaticFieldSignature(mouse_cursor.MouseCursor, () => ['defer', 'uncontrolled']);
  dart.defineExtensionMethods(mouse_cursor.MouseCursor, ['toString']);
  dart.defineLazy(mouse_cursor.MouseCursor, {
    /*mouse_cursor.MouseCursor.defer*/get defer() {
      return C[1] || CT.C1;
    },
    /*mouse_cursor.MouseCursor.uncontrolled*/get uncontrolled() {
      return C[2] || CT.C2;
    }
  }, false);
  mouse_cursor._DeferringMouseCursor = class _DeferringMouseCursor extends mouse_cursor.MouseCursor {
    static ['_#_#tearOff']() {
      return new mouse_cursor._DeferringMouseCursor.__();
    }
    createSession(device) {
      if (!false) dart.assertFailed("_DeferringMouseCursor can not create a session", I[0], 251, 12, "false");
      dart.throw(new core.UnimplementedError.new());
    }
    get debugDescription() {
      return "defer";
    }
    static firstNonDeferred(cursors) {
      for (let cursor of cursors) {
        if (!dart.equals(cursor, mouse_cursor.MouseCursor.defer)) {
          return cursor;
        }
      }
      return null;
    }
  };
  (mouse_cursor._DeferringMouseCursor.__ = function() {
    dart.global.Object.getPrototypeOf(mouse_cursor._DeferringMouseCursor).new.call(this);
    ;
  }).prototype = mouse_cursor._DeferringMouseCursor.prototype;
  dart.addTypeTests(mouse_cursor._DeferringMouseCursor);
  dart.addRtiResources(mouse_cursor._DeferringMouseCursor, ["flutter__src__services__mouse_cursor|_DeferringMouseCursor"]);
  dart.addTypeCaches(mouse_cursor._DeferringMouseCursor);
  dart.setMethodSignature(mouse_cursor._DeferringMouseCursor, () => dart.global.Object.setPrototypeOf({createSession: T.intToMouseCursorSession()}, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor._DeferringMouseCursor))));
  dart.setStaticMethodSignature(mouse_cursor._DeferringMouseCursor, () => ['firstNonDeferred']);
  dart.setGetterSignature(mouse_cursor._DeferringMouseCursor, () => dart.global.Object.setPrototypeOf({debugDescription: T.String()}, dart.getGetters(dart.global.Object.getPrototypeOf(mouse_cursor._DeferringMouseCursor))));
  dart.setLibraryUri(mouse_cursor._DeferringMouseCursor, I[1]);
  mouse_cursor._NoopMouseCursorSession = class _NoopMouseCursorSession extends mouse_cursor.MouseCursorSession {
    static ['_#new#tearOff'](cursor, device) {
      return new mouse_cursor._NoopMouseCursorSession.new(cursor, device);
    }
    activate() {
      return async.async(T.void(), function* activate() {
      });
    }
    dispose() {
    }
  };
  (mouse_cursor._NoopMouseCursorSession.new = function(cursor, device) {
    dart.global.Object.getPrototypeOf(mouse_cursor._NoopMouseCursorSession).new.call(this, cursor, device);
    ;
  }).prototype = mouse_cursor._NoopMouseCursorSession.prototype;
  dart.addTypeTests(mouse_cursor._NoopMouseCursorSession);
  dart.addRtiResources(mouse_cursor._NoopMouseCursorSession, ["flutter__src__services__mouse_cursor|_NoopMouseCursorSession"]);
  dart.addTypeCaches(mouse_cursor._NoopMouseCursorSession);
  dart.setMethodSignature(mouse_cursor._NoopMouseCursorSession, () => dart.global.Object.setPrototypeOf({
    activate: T.VoidToFutureOfvoid(),
    dispose: T.VoidTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor._NoopMouseCursorSession))));
  dart.setLibraryUri(mouse_cursor._NoopMouseCursorSession, I[1]);
  mouse_cursor._NoopMouseCursor = class _NoopMouseCursor extends mouse_cursor.MouseCursor {
    static ['_#_#tearOff']() {
      return new mouse_cursor._NoopMouseCursor.__();
    }
    createSession(device) {
      return new mouse_cursor._NoopMouseCursorSession.new(this, device);
    }
    get debugDescription() {
      return "uncontrolled";
    }
  };
  (mouse_cursor._NoopMouseCursor.__ = function() {
    dart.global.Object.getPrototypeOf(mouse_cursor._NoopMouseCursor).new.call(this);
    ;
  }).prototype = mouse_cursor._NoopMouseCursor.prototype;
  dart.addTypeTests(mouse_cursor._NoopMouseCursor);
  dart.addRtiResources(mouse_cursor._NoopMouseCursor, ["flutter__src__services__mouse_cursor|_NoopMouseCursor"]);
  dart.addTypeCaches(mouse_cursor._NoopMouseCursor);
  dart.setMethodSignature(mouse_cursor._NoopMouseCursor, () => dart.global.Object.setPrototypeOf({createSession: T.intTo_NoopMouseCursorSession()}, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor._NoopMouseCursor))));
  dart.setGetterSignature(mouse_cursor._NoopMouseCursor, () => dart.global.Object.setPrototypeOf({debugDescription: T.String()}, dart.getGetters(dart.global.Object.getPrototypeOf(mouse_cursor._NoopMouseCursor))));
  dart.setLibraryUri(mouse_cursor._NoopMouseCursor, I[1]);
  var _as = dart.privateName(dart_rti, "_as");
  mouse_cursor._SystemMouseCursorSession = class _SystemMouseCursorSession extends mouse_cursor.MouseCursorSession {
    static ['_#new#tearOff'](cursor, device) {
      return new mouse_cursor._SystemMouseCursorSession.new(cursor, device);
    }
    get cursor() {
      return T.SystemMouseCursor()[_as](super.cursor);
    }
    activate() {
      return system_channels.SystemChannels.mouseCursor.invokeMethod(T.void(), "activateSystemCursor", new (G.IdentityMapOfString$dynamic()).from(["device", this.device, "kind", this.cursor.kind]));
    }
    dispose() {
    }
  };
  (mouse_cursor._SystemMouseCursorSession.new = function(cursor, device) {
    dart.global.Object.getPrototypeOf(mouse_cursor._SystemMouseCursorSession).new.call(this, cursor, device);
    ;
  }).prototype = mouse_cursor._SystemMouseCursorSession.prototype;
  dart.addTypeTests(mouse_cursor._SystemMouseCursorSession);
  dart.addRtiResources(mouse_cursor._SystemMouseCursorSession, ["flutter__src__services__mouse_cursor|_SystemMouseCursorSession"]);
  dart.addTypeCaches(mouse_cursor._SystemMouseCursorSession);
  dart.setMethodSignature(mouse_cursor._SystemMouseCursorSession, () => dart.global.Object.setPrototypeOf({
    activate: T.VoidToFutureOfvoid(),
    dispose: T.VoidTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor._SystemMouseCursorSession))));
  dart.setGetterSignature(mouse_cursor._SystemMouseCursorSession, () => dart.global.Object.setPrototypeOf({cursor: T.SystemMouseCursor()}, dart.getGetters(dart.global.Object.getPrototypeOf(mouse_cursor._SystemMouseCursorSession))));
  dart.setLibraryUri(mouse_cursor._SystemMouseCursorSession, I[1]);
  var kind$ = dart.privateName(mouse_cursor, "SystemMouseCursor.kind");
  mouse_cursor.SystemMouseCursor = class SystemMouseCursor extends mouse_cursor.MouseCursor {
    get kind() {
      return this[kind$];
    }
    set kind(value) {
      super.kind = value;
    }
    static ['_#_#tearOff'](opts) {
      let kind = opts && 'kind' in opts ? opts.kind : null;
      return new mouse_cursor.SystemMouseCursor.__({kind: kind});
    }
    get debugDescription() {
      return object.objectRuntimeType(this, "SystemMouseCursor") + "(" + this.kind + ")";
    }
    createSession(device) {
      return new mouse_cursor._SystemMouseCursorSession.new(this, device);
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), dart.runtimeType(this))) {
        return false;
      }
      return T.SystemMouseCursor()[_is](other) && other.kind === this.kind;
    }
    get hashCode() {
      return this.kind[$hashCode];
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (G.DiagnosticsPropertyOfString()).new("kind", this.kind, {level: diagnostics.DiagnosticLevel.debug}));
    }
  };
  (mouse_cursor.SystemMouseCursor.__ = function(opts) {
    let kind = opts && 'kind' in opts ? opts.kind : null;
    this[kind$] = kind;
    dart.global.Object.getPrototypeOf(mouse_cursor.SystemMouseCursor).new.call(this);
    ;
  }).prototype = mouse_cursor.SystemMouseCursor.prototype;
  dart.addTypeTests(mouse_cursor.SystemMouseCursor);
  dart.addRtiResources(mouse_cursor.SystemMouseCursor, ["flutter__src__services__mouse_cursor|SystemMouseCursor"]);
  dart.addTypeCaches(mouse_cursor.SystemMouseCursor);
  dart.setMethodSignature(mouse_cursor.SystemMouseCursor, () => dart.global.Object.setPrototypeOf({createSession: T.intToMouseCursorSession()}, dart.getMethods(dart.global.Object.getPrototypeOf(mouse_cursor.SystemMouseCursor))));
  dart.setGetterSignature(mouse_cursor.SystemMouseCursor, () => dart.global.Object.setPrototypeOf({debugDescription: T.String()}, dart.getGetters(dart.global.Object.getPrototypeOf(mouse_cursor.SystemMouseCursor))));
  dart.setLibraryUri(mouse_cursor.SystemMouseCursor, I[1]);
  dart.setFieldSignature(mouse_cursor.SystemMouseCursor, () => dart.global.Object.setPrototypeOf({kind: {type: T.String(), isConst: false, isFinal: true, libraryUri: I[2]}}, dart.getFields(dart.global.Object.getPrototypeOf(mouse_cursor.SystemMouseCursor))));
  dart.defineExtensionMethods(mouse_cursor.SystemMouseCursor, ['_equals']);
  dart.defineExtensionAccessors(mouse_cursor.SystemMouseCursor, ['hashCode']);
  mouse_cursor.SystemMouseCursors = class SystemMouseCursors extends core.Object {
    static ['_#_#tearOff']() {
      return new mouse_cursor.SystemMouseCursors.__();
    }
  };
  (mouse_cursor.SystemMouseCursors.__ = function() {
    ;
  }).prototype = mouse_cursor.SystemMouseCursors.prototype;
  dart.addTypeTests(mouse_cursor.SystemMouseCursors);
  dart.addRtiResources(mouse_cursor.SystemMouseCursors, ["flutter__src__services__mouse_cursor|SystemMouseCursors"]);
  dart.addTypeCaches(mouse_cursor.SystemMouseCursors);
  dart.setLibraryUri(mouse_cursor.SystemMouseCursors, I[1]);
  dart.setStaticFieldSignature(mouse_cursor.SystemMouseCursors, () => ['none', 'basic', 'click', 'forbidden', 'wait', 'progress', 'contextMenu', 'help', 'text', 'verticalText', 'cell', 'precise', 'move', 'grab', 'grabbing', 'noDrop', 'alias', 'copy', 'disappearing', 'allScroll', 'resizeLeftRight', 'resizeUpDown', 'resizeUpLeftDownRight', 'resizeUpRightDownLeft', 'resizeUp', 'resizeDown', 'resizeLeft', 'resizeRight', 'resizeUpLeft', 'resizeUpRight', 'resizeDownLeft', 'resizeDownRight', 'resizeColumn', 'resizeRow', 'zoomIn', 'zoomOut']);
  dart.defineLazy(mouse_cursor.SystemMouseCursors, {
    /*mouse_cursor.SystemMouseCursors.none*/get none() {
      return C[3] || CT.C3;
    },
    /*mouse_cursor.SystemMouseCursors.basic*/get basic() {
      return C[4] || CT.C4;
    },
    /*mouse_cursor.SystemMouseCursors.click*/get click() {
      return C[5] || CT.C5;
    },
    /*mouse_cursor.SystemMouseCursors.forbidden*/get forbidden() {
      return C[6] || CT.C6;
    },
    /*mouse_cursor.SystemMouseCursors.wait*/get wait() {
      return C[7] || CT.C7;
    },
    /*mouse_cursor.SystemMouseCursors.progress*/get progress() {
      return C[8] || CT.C8;
    },
    /*mouse_cursor.SystemMouseCursors.contextMenu*/get contextMenu() {
      return C[9] || CT.C9;
    },
    /*mouse_cursor.SystemMouseCursors.help*/get help() {
      return C[10] || CT.C10;
    },
    /*mouse_cursor.SystemMouseCursors.text*/get text() {
      return C[11] || CT.C11;
    },
    /*mouse_cursor.SystemMouseCursors.verticalText*/get verticalText() {
      return C[12] || CT.C12;
    },
    /*mouse_cursor.SystemMouseCursors.cell*/get cell() {
      return C[13] || CT.C13;
    },
    /*mouse_cursor.SystemMouseCursors.precise*/get precise() {
      return C[14] || CT.C14;
    },
    /*mouse_cursor.SystemMouseCursors.move*/get move() {
      return C[15] || CT.C15;
    },
    /*mouse_cursor.SystemMouseCursors.grab*/get grab() {
      return C[16] || CT.C16;
    },
    /*mouse_cursor.SystemMouseCursors.grabbing*/get grabbing() {
      return C[17] || CT.C17;
    },
    /*mouse_cursor.SystemMouseCursors.noDrop*/get noDrop() {
      return C[18] || CT.C18;
    },
    /*mouse_cursor.SystemMouseCursors.alias*/get alias() {
      return C[19] || CT.C19;
    },
    /*mouse_cursor.SystemMouseCursors.copy*/get copy() {
      return C[20] || CT.C20;
    },
    /*mouse_cursor.SystemMouseCursors.disappearing*/get disappearing() {
      return C[21] || CT.C21;
    },
    /*mouse_cursor.SystemMouseCursors.allScroll*/get allScroll() {
      return C[22] || CT.C22;
    },
    /*mouse_cursor.SystemMouseCursors.resizeLeftRight*/get resizeLeftRight() {
      return C[23] || CT.C23;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUpDown*/get resizeUpDown() {
      return C[24] || CT.C24;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUpLeftDownRight*/get resizeUpLeftDownRight() {
      return C[25] || CT.C25;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUpRightDownLeft*/get resizeUpRightDownLeft() {
      return C[26] || CT.C26;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUp*/get resizeUp() {
      return C[27] || CT.C27;
    },
    /*mouse_cursor.SystemMouseCursors.resizeDown*/get resizeDown() {
      return C[28] || CT.C28;
    },
    /*mouse_cursor.SystemMouseCursors.resizeLeft*/get resizeLeft() {
      return C[29] || CT.C29;
    },
    /*mouse_cursor.SystemMouseCursors.resizeRight*/get resizeRight() {
      return C[30] || CT.C30;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUpLeft*/get resizeUpLeft() {
      return C[31] || CT.C31;
    },
    /*mouse_cursor.SystemMouseCursors.resizeUpRight*/get resizeUpRight() {
      return C[32] || CT.C32;
    },
    /*mouse_cursor.SystemMouseCursors.resizeDownLeft*/get resizeDownLeft() {
      return C[33] || CT.C33;
    },
    /*mouse_cursor.SystemMouseCursors.resizeDownRight*/get resizeDownRight() {
      return C[34] || CT.C34;
    },
    /*mouse_cursor.SystemMouseCursors.resizeColumn*/get resizeColumn() {
      return C[35] || CT.C35;
    },
    /*mouse_cursor.SystemMouseCursors.resizeRow*/get resizeRow() {
      return C[36] || CT.C36;
    },
    /*mouse_cursor.SystemMouseCursors.zoomIn*/get zoomIn() {
      return C[37] || CT.C37;
    },
    /*mouse_cursor.SystemMouseCursors.zoomOut*/get zoomOut() {
      return C[38] || CT.C38;
    }
  }, false);
  dart.moduleConstCaches.set("packages/flutter/src/services/mouse_cursor.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"flutter__src__gestures__events|PointerRemovedEvent":{"flutter__src__gestures__events|_CopyPointerRemovedEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerRemovedEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_PointerEventDescription":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__mouse_cursor|_DeferringMouseCursor":{"flutter__src__services__mouse_cursor|MouseCursor":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__mouse_cursor|MouseCursor":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"core|Iterable":{"Iterable.E":"1"},"core|Map":{"Map.K":"1","Map.V":"2"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"async|Future":{"Future.T":"1"},"flutter__src__services__mouse_cursor|_NoopMouseCursorSession":{"flutter__src__services__mouse_cursor|MouseCursorSession":[]},"flutter__src__services__mouse_cursor|SystemMouseCursor":{"flutter__src__services__mouse_cursor|MouseCursor":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__mouse_cursor|_NoopMouseCursor":{"flutter__src__services__mouse_cursor|MouseCursor":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__mouse_cursor|_SystemMouseCursorSession":{"flutter__src__services__mouse_cursor|MouseCursorSession":[]}}'));
  dart.trackLibraries("packages/flutter/src/services/mouse_cursor.dart", {
    "package:flutter/src/services/mouse_cursor.dart": mouse_cursor
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["mouse_cursor.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/services/mouse_cursor.dart.lib.js"}');
  // Exports:
  return {
    src__services__mouse_cursor: mouse_cursor
  };
}));

//# sourceMappingURL=mouse_cursor.dart.lib.js.map

// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/services/platform_views.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__services__platform_views_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var platform_views = Object.create(dart.library);
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $buffer = dartx.buffer;
  var $lengthInBytes = dartx.lengthInBytes;
  var $length = dartx.length;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $isEmpty = dartx.isEmpty;
  var $remove = dartx.remove;
  var $keys = dartx.keys;
  var $indexOf = dartx.indexOf;
  var $add = dartx.add;
  var $clear = dartx.clear;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidToint: () => (T.VoidToint = dart.constFn(dart_rti.findType("core|int()")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    dynamic: () => (T.dynamic = dart.constFn(dart_rti.findType("@")))(),
    UiKitViewController: () => (T.UiKitViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|UiKitViewController")))(),
    AppKitViewController: () => (T.AppKitViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AppKitViewController")))(),
    MethodCallToFutureOfvoid: () => (T.MethodCallToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(flutter__src__services__message_codec|MethodCall)")))(),
    __ToAndroidViewController: () => (T.__ToAndroidViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidViewController({creationParams:@,creationParamsCodec:flutter__src__services__message_codec|MessageCodec<@>?,id!core|int,layoutDirection!ui|TextDirection,onFocus:~()?,viewType!core|String})")))(),
    __ToSurfaceAndroidViewController: () => (T.__ToSurfaceAndroidViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|SurfaceAndroidViewController({creationParams:@,creationParamsCodec:flutter__src__services__message_codec|MessageCodec<@>?,id!core|int,layoutDirection!ui|TextDirection,onFocus:~()?,viewType!core|String})")))(),
    __ToExpensiveAndroidViewController: () => (T.__ToExpensiveAndroidViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|ExpensiveAndroidViewController({creationParams:@,creationParamsCodec:flutter__src__services__message_codec|MessageCodec<@>?,id!core|int,layoutDirection!ui|TextDirection,onFocus:~()?,viewType!core|String})")))(),
    __ToFutureOfUiKitViewController: () => (T.__ToFutureOfUiKitViewController = dart.constFn(dart_rti.findType("async|Future<flutter__src__services__platform_views|UiKitViewController>({creationParams:@,creationParamsCodec:flutter__src__services__message_codec|MessageCodec<@>?,id!core|int,layoutDirection!ui|TextDirection,onFocus:~()?,viewType!core|String})")))(),
    __ToFutureOfAppKitViewController: () => (T.__ToFutureOfAppKitViewController = dart.constFn(dart_rti.findType("async|Future<flutter__src__services__platform_views|AppKitViewController>({creationParams:@,creationParamsCodec:flutter__src__services__message_codec|MessageCodec<@>?,id!core|int,layoutDirection!ui|TextDirection,onFocus:~()?,viewType!core|String})")))(),
    PlatformViewsService: () => (T.PlatformViewsService = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|PlatformViewsService")))(),
    MapOfint$VoidTovoid: () => (T.MapOfint$VoidTovoid = dart.constFn(dart_rti.findType("core|Map<core|int,~()>")))(),
    VoidToListOfint: () => (T.VoidToListOfint = dart.constFn(dart_rti.findType("core|List<core|int>()")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    VoidToListOfdouble: () => (T.VoidToListOfdouble = dart.constFn(dart_rti.findType("core|List<core|double>()")))(),
    ListOfint: () => (T.ListOfint = dart.constFn(dart_rti.findType("core|List<core|int>")))(),
    AndroidPointerPropertiesToListOfint: () => (T.AndroidPointerPropertiesToListOfint = dart.constFn(dart_rti.findType("core|List<core|int>(flutter__src__services__platform_views|AndroidPointerProperties)")))(),
    ListOfdouble: () => (T.ListOfdouble = dart.constFn(dart_rti.findType("core|List<core|double>")))(),
    AndroidPointerCoordsToListOfdouble: () => (T.AndroidPointerCoordsToListOfdouble = dart.constFn(dart_rti.findType("core|List<core|double>(flutter__src__services__platform_views|AndroidPointerCoords)")))(),
    intToList: () => (T.intToList = dart.constFn(dart_rti.findType("core|List<@>(core|int)")))(),
    ListOfAndroidPointerProperties: () => (T.ListOfAndroidPointerProperties = dart.constFn(dart_rti.findType("core|List<flutter__src__services__platform_views|AndroidPointerProperties>")))(),
    ListOfAndroidPointerCoords: () => (T.ListOfAndroidPointerCoords = dart.constFn(dart_rti.findType("core|List<flutter__src__services__platform_views|AndroidPointerCoords>")))(),
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOf_AndroidViewState: () => (T.ListOf_AndroidViewState = dart.constFn(dart_rti.findType("core|List<flutter__src__services__platform_views|_AndroidViewState>")))(),
    _AndroidViewState: () => (T._AndroidViewState = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|_AndroidViewState")))(),
    AndroidPointerCoords: () => (T.AndroidPointerCoords = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidPointerCoords")))(),
    AndroidPointerProperties: () => (T.AndroidPointerProperties = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidPointerProperties")))(),
    PointerDownEvent: () => (T.PointerDownEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent")))(),
    PointerUpEvent: () => (T.PointerUpEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent")))(),
    PointerMoveEvent: () => (T.PointerMoveEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent")))(),
    PointerCancelEvent: () => (T.PointerCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent")))(),
    intToAndroidPointerProperties: () => (T.intToAndroidPointerProperties = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidPointerProperties(core|int)")))(),
    intToAndroidPointerCoords: () => (T.intToAndroidPointerCoords = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidPointerCoords(core|int)")))(),
    OffsetToOffset: () => (T.OffsetToOffset = dart.constFn(dart_rti.findType("ui|Offset(ui|Offset)")))(),
    PointerDownEventTovoid: () => (T.PointerDownEventTovoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__events|PointerDownEvent)")))(),
    PointerEventTovoid: () => (T.PointerEventTovoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__events|PointerEvent)")))(),
    intTovoid: () => (T.intTovoid = dart.constFn(dart_rti.findType("~(core|int)")))(),
    PointerUpEventTovoid: () => (T.PointerUpEventTovoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__events|PointerUpEvent)")))(),
    PointerCancelEventTovoid: () => (T.PointerCancelEventTovoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__events|PointerCancelEvent)")))(),
    PointerEventToAndroidMotionEventN: () => (T.PointerEventToAndroidMotionEventN = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidMotionEvent?(flutter__src__gestures__events|PointerEvent)")))(),
    PointerEventToint: () => (T.PointerEventToint = dart.constFn(dart_rti.findType("core|int(flutter__src__gestures__events|PointerEvent)")))(),
    PointerEventAndintToAndroidPointerProperties: () => (T.PointerEventAndintToAndroidPointerProperties = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|AndroidPointerProperties(flutter__src__gestures__events|PointerEvent,core|int)")))(),
    PointerEventTobool: () => (T.PointerEventTobool = dart.constFn(dart_rti.findType("core|bool(flutter__src__gestures__events|PointerEvent)")))(),
    MapOfint$AndroidPointerCoords: () => (T.MapOfint$AndroidPointerCoords = dart.constFn(dart_rti.findType("core|Map<core|int,flutter__src__services__platform_views|AndroidPointerCoords>")))(),
    MapOfint$AndroidPointerProperties: () => (T.MapOfint$AndroidPointerProperties = dart.constFn(dart_rti.findType("core|Map<core|int,flutter__src__services__platform_views|AndroidPointerProperties>")))(),
    SetOfint: () => (T.SetOfint = dart.constFn(dart_rti.findType("core|Set<core|int>")))(),
    OffsetToNOffset: () => (T.OffsetToNOffset = dart.constFn(dart_rti.findType("ui|Offset(ui|Offset)?")))(),
    intN: () => (T.intN = dart.constFn(dart_rti.findType("core|int?")))(),
    MessageCodec: () => (T.MessageCodec = dart.constFn(dart_rti.findType("flutter__src__services__message_codec|MessageCodec<@>")))(),
    Size: () => (T.Size = dart.constFn(dart_rti.findType("ui|Size")))(),
    PointerHoverEvent: () => (T.PointerHoverEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerHoverEvent")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    __ToFutureOfvoid: () => (T.__ToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>({position:ui|Offset?,size:ui|Size?})")))(),
    TextDirectionToint: () => (T.TextDirectionToint = dart.constFn(dart_rti.findType("core|int(ui|TextDirection)")))(),
    intAndintToint: () => (T.intAndintToint = dart.constFn(dart_rti.findType("core|int(core|int,core|int)")))(),
    SizeToFutureOfSize: () => (T.SizeToFutureOfSize = dart.constFn(dart_rti.findType("async|Future<ui|Size>(ui|Size)")))(),
    AndroidMotionEventToFutureOfvoid: () => (T.AndroidMotionEventToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(flutter__src__services__platform_views|AndroidMotionEvent)")))(),
    FnTovoid: () => (T.FnTovoid = dart.constFn(dart_rti.findType("~(~(core|int))")))(),
    ListOfintTovoid: () => (T.ListOfintTovoid = dart.constFn(dart_rti.findType("core|List<~(core|int)>")))(),
    TextDirectionToFutureOfvoid: () => (T.TextDirectionToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(ui|TextDirection)")))(),
    PointerEventToFutureOfvoid: () => (T.PointerEventToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(flutter__src__gestures__events|PointerEvent)")))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>()")))(),
    _AndroidMotionEventConverter: () => (T._AndroidMotionEventConverter = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|_AndroidMotionEventConverter")))(),
    TextDirection: () => (T.TextDirection = dart.constFn(dart_rti.findType("ui|TextDirection")))(),
    _CreationParamsN: () => (T._CreationParamsN = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|_CreationParams?")))(),
    TextureAndroidViewController: () => (T.TextureAndroidViewController = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|TextureAndroidViewController")))(),
    _TextureAndroidViewControllerInternals: () => (T._TextureAndroidViewControllerInternals = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|_TextureAndroidViewControllerInternals")))(),
    __ToFutureOfbool: () => (T.__ToFutureOfbool = dart.constFn(dart_rti.findType("async|Future<core|bool>({position:ui|Offset?,size!ui|Size})")))(),
    OffsetToFutureOfvoid: () => (T.OffsetToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(ui|Offset)")))(),
    _AndroidViewControllerInternals: () => (T._AndroidViewControllerInternals = dart.constFn(dart_rti.findType("flutter__src__services__platform_views|_AndroidViewControllerInternals")))(),
    __ToFutureOfvoid$1: () => (T.__ToFutureOfvoid$1 = dart.constFn(dart_rti.findType("async|Future<~>({position:ui|Offset?,size!ui|Size?})")))(),
    __ToFutureOfvoid$2: () => (T.__ToFutureOfvoid$2 = dart.constFn(dart_rti.findType("async|Future<~>({position:ui|Offset?,size!ui|Size})")))(),
    __ToFuture: () => (T.__ToFuture = dart.constFn(dart_rti.findType("async|Future<@>({creationParams:flutter__src__services__platform_views|_CreationParams?,hybrid!core|bool,hybridFallback:core|bool,layoutDirection!ui|TextDirection,position:ui|Offset?,size:ui|Size?,viewId!core|int,viewType!core|String})")))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart_rti.findType("core|Object?")))(),
    Size__ToFutureOfSize: () => (T.Size__ToFutureOfSize = dart.constFn(dart_rti.findType("async|Future<ui|Size>(ui|Size{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})")))(),
    Offset__ToFutureOfvoid: () => (T.Offset__ToFutureOfvoid = dart.constFn(dart_rti.findType("async|Future<~>(ui|Offset{viewId!core|int,viewState!flutter__src__services__platform_views|_AndroidViewState})")))(),
    __ToFutureOfvoid$3: () => (T.__ToFutureOfvoid$3 = dart.constFn(dart_rti.findType("async|Future<~>({viewId!core|int})")))(),
    Offset: () => (T.Offset = dart.constFn(dart_rti.findType("ui|Offset")))()
  };
  var G = {
    IdentityMapOfint$VoidTovoid: () => (G.IdentityMapOfint$VoidTovoid = dart.constFn(_js_helper.IdentityMap$(T.int(), T.VoidTovoid())))(),
    FutureOfvoid: () => (G.FutureOfvoid = dart.constFn(async.Future$(T.void())))(),
    IdentityMapOfString$dynamic: () => (G.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(T.String(), T.dynamic())))(),
    JSArrayOfint: () => (G.JSArrayOfint = dart.constFn(_interceptors.JSArray$(T.int())))(),
    JSArrayOfdouble: () => (G.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(T.double())))(),
    IdentityMapOfint$AndroidPointerCoords: () => (G.IdentityMapOfint$AndroidPointerCoords = dart.constFn(_js_helper.IdentityMap$(T.int(), T.AndroidPointerCoords())))(),
    IdentityMapOfint$AndroidPointerProperties: () => (G.IdentityMapOfint$AndroidPointerProperties = dart.constFn(_js_helper.IdentityMap$(T.int(), T.AndroidPointerProperties())))(),
    LinkedHashSetOfint: () => (G.LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(T.int())))(),
    JSArrayOfintTovoid: () => (G.JSArrayOfintTovoid = dart.constFn(_interceptors.JSArray$(T.intTovoid())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "waitingForSize",
        [_Enum_index]: 0
      }, platform_views._AndroidViewState.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "creating",
        [_Enum_index]: 1
      }, platform_views._AndroidViewState.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "created",
        [_Enum_index]: 2
      }, platform_views._AndroidViewState.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "disposed",
        [_Enum_index]: 3
      }, platform_views._AndroidViewState.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T._AndroidViewState());
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "touch",
        [_Enum_index]: 0
      }, ui.PointerDeviceKind.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "trackpad",
        [_Enum_index]: 4
      }, ui.PointerDeviceKind.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "mouse",
        [_Enum_index]: 1
      }, ui.PointerDeviceKind.prototype));
    },
    get C8() {
      return C[8] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "stylus",
        [_Enum_index]: 2
      }, ui.PointerDeviceKind.prototype));
    },
    get C9() {
      return C[9] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "invertedStylus",
        [_Enum_index]: 3
      }, ui.PointerDeviceKind.prototype));
    },
    get C10() {
      return C[10] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "unknown",
        [_Enum_index]: 5
      }, ui.PointerDeviceKind.prototype));
    },
    get C11() {
      return C[11] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "ltr",
        [_Enum_index]: 1
      }, ui.TextDirection.prototype));
    },
    get C12() {
      return C[12] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "rtl",
        [_Enum_index]: 0
      }, ui.TextDirection.prototype));
    }
  }, false);
  var C = Array(13).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/services/platform_views.dart",
    "package:flutter/src/services/platform_views.dart",
    "dart:core",
    "package:flutter/src/services/message_codec.dart",
    "dart:ui"
  ];
  var _nextPlatformViewId = dart.privateName(platform_views, "_nextPlatformViewId");
  platform_views.PlatformViewsRegistry = class PlatformViewsRegistry extends core.Object {
    static ['_#_instance#tearOff']() {
      return new platform_views.PlatformViewsRegistry._instance();
    }
    getNextPlatformViewId() {
      let t$360;
      if (!(this[_nextPlatformViewId] <= 2147483647)) dart.assertFailed(null, I[0], 54, 12, "_nextPlatformViewId <= MAX_INT32");
      t$360 = this[_nextPlatformViewId];
      this[_nextPlatformViewId] = t$360 + 1;
      return t$360;
    }
  };
  (platform_views.PlatformViewsRegistry._instance = function() {
    this[_nextPlatformViewId] = 0;
    ;
  }).prototype = platform_views.PlatformViewsRegistry.prototype;
  dart.addTypeTests(platform_views.PlatformViewsRegistry);
  dart.addRtiResources(platform_views.PlatformViewsRegistry, ["flutter__src__services__platform_views|PlatformViewsRegistry"]);
  dart.addTypeCaches(platform_views.PlatformViewsRegistry);
  dart.setMethodSignature(platform_views.PlatformViewsRegistry, () => dart.global.Object.setPrototypeOf({getNextPlatformViewId: T.VoidToint()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsRegistry))));
  dart.setLibraryUri(platform_views.PlatformViewsRegistry, I[1]);
  dart.setFieldSignature(platform_views.PlatformViewsRegistry, () => dart.global.Object.setPrototypeOf({[_nextPlatformViewId]: {type: T.int(), isConst: false, isFinal: false, libraryUri: I[2]}}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsRegistry))));
  var _focusCallbacks = dart.privateName(platform_views, "_focusCallbacks");
  var _onMethodCall = dart.privateName(platform_views, "_onMethodCall");
  var _as = dart.privateName(dart_rti, "_as");
  platform_views.PlatformViewsService = class PlatformViewsService extends core.Object {
    static ['_#_#tearOff']() {
      return new platform_views.PlatformViewsService.__();
    }
    [_onMethodCall](call) {
      switch (call.method) {
        case "viewFocused":
          {
            let id = T.int()[_as](call.arguments);
            if (this[_focusCallbacks][$containsKey](id)) {
              dart.nullCheck(this[_focusCallbacks][$_get](id))();
            }
            break;
          }
        default:
          {
            dart.throw(new core.UnimplementedError.new(call.method + " was invoked but isn't implemented by PlatformViewsService"));
          }
      }
      return G.FutureOfvoid().value();
    }
    static initAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 135, 12, "creationParams == null || creationParamsCodec != null");
      let controller = new platform_views.TextureAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, T.VoidTovoid()) : t$360));
      return controller;
    }
    static initSurfaceAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 163, 12, "creationParams == null || creationParamsCodec != null");
      let controller = new platform_views.SurfaceAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, T.VoidTovoid()) : t$360));
      return controller;
    }
    static initExpensiveAndroidView(opts) {
      let t$360;
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      let controller = new platform_views.ExpensiveAndroidViewController.__({viewId: id, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
      platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, (t$360 = onFocus, t$360 == null ? dart.fn(() => {
      }, T.VoidTovoid()) : t$360));
      return controller;
    }
    static initUiKitView(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      return async.async(T.UiKitViewController(), function* initUiKitView() {
        if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 227, 12, "creationParams == null || creationParamsCodec != null");
        let args = new (G.IdentityMapOfString$dynamic()).from(["id", id, "viewType", viewType]);
        if (creationParams != null) {
          let paramsByteData = dart.nullCheck(dart.nullCheck(creationParamsCodec).encodeMessage(creationParams));
          args[$_set]("params", typed_data.Uint8List.view(paramsByteData[$buffer], 0, paramsByteData[$lengthInBytes]));
        }
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "create", args);
        if (onFocus != null) {
          platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, onFocus);
        }
        return new platform_views.UiKitViewController.__(id, layoutDirection);
      });
    }
    static initAppKitView(opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      let onFocus = opts && 'onFocus' in opts ? opts.onFocus : null;
      return async.async(T.AppKitViewController(), function* initAppKitView() {
        if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 273, 12, "creationParams == null || creationParamsCodec != null");
        let args = new (G.IdentityMapOfString$dynamic()).from(["id", id, "viewType", viewType]);
        if (creationParams != null) {
          let paramsByteData = dart.nullCheck(dart.nullCheck(creationParamsCodec).encodeMessage(creationParams));
          args[$_set]("params", typed_data.Uint8List.view(paramsByteData[$buffer], 0, paramsByteData[$lengthInBytes]));
        }
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "create", args);
        if (onFocus != null) {
          platform_views.PlatformViewsService._instance[_focusCallbacks][$_set](id, onFocus);
        }
        return new platform_views.AppKitViewController.__(id, layoutDirection);
      });
    }
  };
  (platform_views.PlatformViewsService.__ = function() {
    this[_focusCallbacks] = new (G.IdentityMapOfint$VoidTovoid()).new();
    system_channels.SystemChannels.platform_views.setMethodCallHandler(dart.bind(this, _onMethodCall));
  }).prototype = platform_views.PlatformViewsService.prototype;
  dart.addTypeTests(platform_views.PlatformViewsService);
  dart.addRtiResources(platform_views.PlatformViewsService, ["flutter__src__services__platform_views|PlatformViewsService"]);
  dart.addTypeCaches(platform_views.PlatformViewsService);
  dart.setMethodSignature(platform_views.PlatformViewsService, () => dart.global.Object.setPrototypeOf({[_onMethodCall]: T.MethodCallToFutureOfvoid()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsService))));
  dart.setStaticMethodSignature(platform_views.PlatformViewsService, () => ['initAndroidView', 'initSurfaceAndroidView', 'initExpensiveAndroidView', 'initUiKitView', 'initAppKitView']);
  dart.setLibraryUri(platform_views.PlatformViewsService, I[1]);
  dart.setFieldSignature(platform_views.PlatformViewsService, () => dart.global.Object.setPrototypeOf({[_focusCallbacks]: {type: T.MapOfint$VoidTovoid(), isConst: false, isFinal: true, libraryUri: I[2]}}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.PlatformViewsService))));
  dart.setStaticFieldSignature(platform_views.PlatformViewsService, () => ['_instance']);
  dart.defineLazy(platform_views.PlatformViewsService, {
    /*platform_views.PlatformViewsService._instance*/get _instance() {
      return new platform_views.PlatformViewsService.__();
    }
  }, false);
  var id$ = dart.privateName(platform_views, "AndroidPointerProperties.id");
  var toolType$ = dart.privateName(platform_views, "AndroidPointerProperties.toolType");
  var _asList = dart.privateName(platform_views, "_asList");
  platform_views.AndroidPointerProperties = class AndroidPointerProperties extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get toolType() {
      return this[toolType$];
    }
    set toolType(value) {
      super.toolType = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let toolType = opts && 'toolType' in opts ? opts.toolType : null;
      return new platform_views.AndroidPointerProperties.new({id: id, toolType: toolType});
    }
    [_asList]() {
      return G.JSArrayOfint().of([this.id, this.toolType]);
    }
    toString() {
      return object.objectRuntimeType(this, "AndroidPointerProperties") + "(id: " + dart.strSafe(this.id) + ", toolType: " + dart.strSafe(this.toolType) + ")";
    }
  };
  (platform_views.AndroidPointerProperties.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let toolType = opts && 'toolType' in opts ? opts.toolType : null;
    this[id$] = id;
    this[toolType$] = toolType;
    ;
  }).prototype = platform_views.AndroidPointerProperties.prototype;
  dart.addTypeTests(platform_views.AndroidPointerProperties);
  dart.addRtiResources(platform_views.AndroidPointerProperties, ["flutter__src__services__platform_views|AndroidPointerProperties"]);
  dart.addTypeCaches(platform_views.AndroidPointerProperties);
  dart.setMethodSignature(platform_views.AndroidPointerProperties, () => dart.global.Object.setPrototypeOf({[_asList]: T.VoidToListOfint()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerProperties))));
  dart.setLibraryUri(platform_views.AndroidPointerProperties, I[1]);
  dart.setFieldSignature(platform_views.AndroidPointerProperties, () => dart.global.Object.setPrototypeOf({
    id: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    toolType: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerProperties))));
  dart.setStaticFieldSignature(platform_views.AndroidPointerProperties, () => ['kToolTypeUnknown', 'kToolTypeFinger', 'kToolTypeStylus', 'kToolTypeMouse', 'kToolTypeEraser']);
  dart.defineExtensionMethods(platform_views.AndroidPointerProperties, ['toString']);
  dart.defineLazy(platform_views.AndroidPointerProperties, {
    /*platform_views.AndroidPointerProperties.kToolTypeUnknown*/get kToolTypeUnknown() {
      return 0;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeFinger*/get kToolTypeFinger() {
      return 1;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeStylus*/get kToolTypeStylus() {
      return 2;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeMouse*/get kToolTypeMouse() {
      return 3;
    },
    /*platform_views.AndroidPointerProperties.kToolTypeEraser*/get kToolTypeEraser() {
      return 4;
    }
  }, false);
  var orientation$ = dart.privateName(platform_views, "AndroidPointerCoords.orientation");
  var pressure$ = dart.privateName(platform_views, "AndroidPointerCoords.pressure");
  var size$ = dart.privateName(platform_views, "AndroidPointerCoords.size");
  var toolMajor$ = dart.privateName(platform_views, "AndroidPointerCoords.toolMajor");
  var toolMinor$ = dart.privateName(platform_views, "AndroidPointerCoords.toolMinor");
  var touchMajor$ = dart.privateName(platform_views, "AndroidPointerCoords.touchMajor");
  var touchMinor$ = dart.privateName(platform_views, "AndroidPointerCoords.touchMinor");
  var x$ = dart.privateName(platform_views, "AndroidPointerCoords.x");
  var y$ = dart.privateName(platform_views, "AndroidPointerCoords.y");
  platform_views.AndroidPointerCoords = class AndroidPointerCoords extends core.Object {
    get orientation() {
      return this[orientation$];
    }
    set orientation(value) {
      super.orientation = value;
    }
    get pressure() {
      return this[pressure$];
    }
    set pressure(value) {
      super.pressure = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get toolMajor() {
      return this[toolMajor$];
    }
    set toolMajor(value) {
      super.toolMajor = value;
    }
    get toolMinor() {
      return this[toolMinor$];
    }
    set toolMinor(value) {
      super.toolMinor = value;
    }
    get touchMajor() {
      return this[touchMajor$];
    }
    set touchMajor(value) {
      super.touchMajor = value;
    }
    get touchMinor() {
      return this[touchMinor$];
    }
    set touchMinor(value) {
      super.touchMinor = value;
    }
    get x() {
      return this[x$];
    }
    set x(value) {
      super.x = value;
    }
    get y() {
      return this[y$];
    }
    set y(value) {
      super.y = value;
    }
    static ['_#new#tearOff'](opts) {
      let orientation = opts && 'orientation' in opts ? opts.orientation : null;
      let pressure = opts && 'pressure' in opts ? opts.pressure : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let toolMajor = opts && 'toolMajor' in opts ? opts.toolMajor : null;
      let toolMinor = opts && 'toolMinor' in opts ? opts.toolMinor : null;
      let touchMajor = opts && 'touchMajor' in opts ? opts.touchMajor : null;
      let touchMinor = opts && 'touchMinor' in opts ? opts.touchMinor : null;
      let x = opts && 'x' in opts ? opts.x : null;
      let y = opts && 'y' in opts ? opts.y : null;
      return new platform_views.AndroidPointerCoords.new({orientation: orientation, pressure: pressure, size: size, toolMajor: toolMajor, toolMinor: toolMinor, touchMajor: touchMajor, touchMinor: touchMinor, x: x, y: y});
    }
    [_asList]() {
      return G.JSArrayOfdouble().of([this.orientation, this.pressure, this.size, this.toolMajor, this.toolMinor, this.touchMajor, this.touchMinor, this.x, this.y]);
    }
    toString() {
      return object.objectRuntimeType(this, "AndroidPointerCoords") + "(orientation: " + dart.strSafe(this.orientation) + ", pressure: " + dart.strSafe(this.pressure) + ", size: " + dart.strSafe(this.size) + ", toolMajor: " + dart.strSafe(this.toolMajor) + ", toolMinor: " + dart.strSafe(this.toolMinor) + ", touchMajor: " + dart.strSafe(this.touchMajor) + ", touchMinor: " + dart.strSafe(this.touchMinor) + ", x: " + dart.strSafe(this.x) + ", y: " + dart.strSafe(this.y) + ")";
    }
  };
  (platform_views.AndroidPointerCoords.new = function(opts) {
    let orientation = opts && 'orientation' in opts ? opts.orientation : null;
    let pressure = opts && 'pressure' in opts ? opts.pressure : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let toolMajor = opts && 'toolMajor' in opts ? opts.toolMajor : null;
    let toolMinor = opts && 'toolMinor' in opts ? opts.toolMinor : null;
    let touchMajor = opts && 'touchMajor' in opts ? opts.touchMajor : null;
    let touchMinor = opts && 'touchMinor' in opts ? opts.touchMinor : null;
    let x = opts && 'x' in opts ? opts.x : null;
    let y = opts && 'y' in opts ? opts.y : null;
    this[orientation$] = orientation;
    this[pressure$] = pressure;
    this[size$] = size;
    this[toolMajor$] = toolMajor;
    this[toolMinor$] = toolMinor;
    this[touchMajor$] = touchMajor;
    this[touchMinor$] = touchMinor;
    this[x$] = x;
    this[y$] = y;
    ;
  }).prototype = platform_views.AndroidPointerCoords.prototype;
  dart.addTypeTests(platform_views.AndroidPointerCoords);
  dart.addRtiResources(platform_views.AndroidPointerCoords, ["flutter__src__services__platform_views|AndroidPointerCoords"]);
  dart.addTypeCaches(platform_views.AndroidPointerCoords);
  dart.setMethodSignature(platform_views.AndroidPointerCoords, () => dart.global.Object.setPrototypeOf({[_asList]: T.VoidToListOfdouble()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerCoords))));
  dart.setLibraryUri(platform_views.AndroidPointerCoords, I[1]);
  dart.setFieldSignature(platform_views.AndroidPointerCoords, () => dart.global.Object.setPrototypeOf({
    orientation: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    pressure: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    size: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    toolMajor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    toolMinor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    touchMajor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    touchMinor: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    x: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    y: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidPointerCoords))));
  dart.defineExtensionMethods(platform_views.AndroidPointerCoords, ['toString']);
  var downTime$ = dart.privateName(platform_views, "AndroidMotionEvent.downTime");
  var eventTime$ = dart.privateName(platform_views, "AndroidMotionEvent.eventTime");
  var action$ = dart.privateName(platform_views, "AndroidMotionEvent.action");
  var pointerCount$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerCount");
  var pointerProperties$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerProperties");
  var pointerCoords$ = dart.privateName(platform_views, "AndroidMotionEvent.pointerCoords");
  var metaState$ = dart.privateName(platform_views, "AndroidMotionEvent.metaState");
  var buttonState$ = dart.privateName(platform_views, "AndroidMotionEvent.buttonState");
  var xPrecision$ = dart.privateName(platform_views, "AndroidMotionEvent.xPrecision");
  var yPrecision$ = dart.privateName(platform_views, "AndroidMotionEvent.yPrecision");
  var deviceId$ = dart.privateName(platform_views, "AndroidMotionEvent.deviceId");
  var edgeFlags$ = dart.privateName(platform_views, "AndroidMotionEvent.edgeFlags");
  var source$ = dart.privateName(platform_views, "AndroidMotionEvent.source");
  var flags$ = dart.privateName(platform_views, "AndroidMotionEvent.flags");
  var motionEventId$ = dart.privateName(platform_views, "AndroidMotionEvent.motionEventId");
  platform_views.AndroidMotionEvent = class AndroidMotionEvent extends core.Object {
    get downTime() {
      return this[downTime$];
    }
    set downTime(value) {
      super.downTime = value;
    }
    get eventTime() {
      return this[eventTime$];
    }
    set eventTime(value) {
      super.eventTime = value;
    }
    get action() {
      return this[action$];
    }
    set action(value) {
      super.action = value;
    }
    get pointerCount() {
      return this[pointerCount$];
    }
    set pointerCount(value) {
      super.pointerCount = value;
    }
    get pointerProperties() {
      return this[pointerProperties$];
    }
    set pointerProperties(value) {
      super.pointerProperties = value;
    }
    get pointerCoords() {
      return this[pointerCoords$];
    }
    set pointerCoords(value) {
      super.pointerCoords = value;
    }
    get metaState() {
      return this[metaState$];
    }
    set metaState(value) {
      super.metaState = value;
    }
    get buttonState() {
      return this[buttonState$];
    }
    set buttonState(value) {
      super.buttonState = value;
    }
    get xPrecision() {
      return this[xPrecision$];
    }
    set xPrecision(value) {
      super.xPrecision = value;
    }
    get yPrecision() {
      return this[yPrecision$];
    }
    set yPrecision(value) {
      super.yPrecision = value;
    }
    get deviceId() {
      return this[deviceId$];
    }
    set deviceId(value) {
      super.deviceId = value;
    }
    get edgeFlags() {
      return this[edgeFlags$];
    }
    set edgeFlags(value) {
      super.edgeFlags = value;
    }
    get source() {
      return this[source$];
    }
    set source(value) {
      super.source = value;
    }
    get flags() {
      return this[flags$];
    }
    set flags(value) {
      super.flags = value;
    }
    get motionEventId() {
      return this[motionEventId$];
    }
    set motionEventId(value) {
      super.motionEventId = value;
    }
    static ['_#new#tearOff'](opts) {
      let downTime = opts && 'downTime' in opts ? opts.downTime : null;
      let eventTime = opts && 'eventTime' in opts ? opts.eventTime : null;
      let action = opts && 'action' in opts ? opts.action : null;
      let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : null;
      let pointerProperties = opts && 'pointerProperties' in opts ? opts.pointerProperties : null;
      let pointerCoords = opts && 'pointerCoords' in opts ? opts.pointerCoords : null;
      let metaState = opts && 'metaState' in opts ? opts.metaState : null;
      let buttonState = opts && 'buttonState' in opts ? opts.buttonState : null;
      let xPrecision = opts && 'xPrecision' in opts ? opts.xPrecision : null;
      let yPrecision = opts && 'yPrecision' in opts ? opts.yPrecision : null;
      let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
      let edgeFlags = opts && 'edgeFlags' in opts ? opts.edgeFlags : null;
      let source = opts && 'source' in opts ? opts.source : null;
      let flags = opts && 'flags' in opts ? opts.flags : null;
      let motionEventId = opts && 'motionEventId' in opts ? opts.motionEventId : null;
      return new platform_views.AndroidMotionEvent.new({downTime: downTime, eventTime: eventTime, action: action, pointerCount: pointerCount, pointerProperties: pointerProperties, pointerCoords: pointerCoords, metaState: metaState, buttonState: buttonState, xPrecision: xPrecision, yPrecision: yPrecision, deviceId: deviceId, edgeFlags: edgeFlags, source: source, flags: flags, motionEventId: motionEventId});
    }
    [_asList](viewId) {
      return [viewId, this.downTime, this.eventTime, this.action, this.pointerCount, this.pointerProperties[$map](T.ListOfint(), dart.fn(p => p[_asList](), T.AndroidPointerPropertiesToListOfint()))[$toList](), this.pointerCoords[$map](T.ListOfdouble(), dart.fn(p => p[_asList](), T.AndroidPointerCoordsToListOfdouble()))[$toList](), this.metaState, this.buttonState, this.xPrecision, this.yPrecision, this.deviceId, this.edgeFlags, this.source, this.flags, this.motionEventId];
    }
    toString() {
      return "AndroidPointerEvent(downTime: " + dart.strSafe(this.downTime) + ", eventTime: " + dart.strSafe(this.eventTime) + ", action: " + dart.strSafe(this.action) + ", pointerCount: " + dart.strSafe(this.pointerCount) + ", pointerProperties: " + dart.str(this.pointerProperties) + ", pointerCoords: " + dart.str(this.pointerCoords) + ", metaState: " + dart.strSafe(this.metaState) + ", buttonState: " + dart.strSafe(this.buttonState) + ", xPrecision: " + dart.strSafe(this.xPrecision) + ", yPrecision: " + dart.strSafe(this.yPrecision) + ", deviceId: " + dart.strSafe(this.deviceId) + ", edgeFlags: " + dart.strSafe(this.edgeFlags) + ", source: " + dart.strSafe(this.source) + ", flags: " + dart.strSafe(this.flags) + ", motionEventId: " + dart.strSafe(this.motionEventId) + ")";
    }
  };
  (platform_views.AndroidMotionEvent.new = function(opts) {
    let downTime = opts && 'downTime' in opts ? opts.downTime : null;
    let eventTime = opts && 'eventTime' in opts ? opts.eventTime : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : null;
    let pointerProperties = opts && 'pointerProperties' in opts ? opts.pointerProperties : null;
    let pointerCoords = opts && 'pointerCoords' in opts ? opts.pointerCoords : null;
    let metaState = opts && 'metaState' in opts ? opts.metaState : null;
    let buttonState = opts && 'buttonState' in opts ? opts.buttonState : null;
    let xPrecision = opts && 'xPrecision' in opts ? opts.xPrecision : null;
    let yPrecision = opts && 'yPrecision' in opts ? opts.yPrecision : null;
    let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
    let edgeFlags = opts && 'edgeFlags' in opts ? opts.edgeFlags : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let flags = opts && 'flags' in opts ? opts.flags : null;
    let motionEventId = opts && 'motionEventId' in opts ? opts.motionEventId : null;
    this[downTime$] = downTime;
    this[eventTime$] = eventTime;
    this[action$] = action;
    this[pointerCount$] = pointerCount;
    this[pointerProperties$] = pointerProperties;
    this[pointerCoords$] = pointerCoords;
    this[metaState$] = metaState;
    this[buttonState$] = buttonState;
    this[xPrecision$] = xPrecision;
    this[yPrecision$] = yPrecision;
    this[deviceId$] = deviceId;
    this[edgeFlags$] = edgeFlags;
    this[source$] = source;
    this[flags$] = flags;
    this[motionEventId$] = motionEventId;
    if (!(pointerProperties[$length] === pointerCount)) dart.assertFailed(null, I[0], 438, 15, "pointerProperties.length == pointerCount");
    if (!(pointerCoords[$length] === pointerCount)) dart.assertFailed(null, I[0], 439, 15, "pointerCoords.length == pointerCount");
    ;
  }).prototype = platform_views.AndroidMotionEvent.prototype;
  dart.addTypeTests(platform_views.AndroidMotionEvent);
  dart.addRtiResources(platform_views.AndroidMotionEvent, ["flutter__src__services__platform_views|AndroidMotionEvent"]);
  dart.addTypeCaches(platform_views.AndroidMotionEvent);
  dart.setMethodSignature(platform_views.AndroidMotionEvent, () => dart.global.Object.setPrototypeOf({[_asList]: T.intToList()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidMotionEvent))));
  dart.setLibraryUri(platform_views.AndroidMotionEvent, I[1]);
  dart.setFieldSignature(platform_views.AndroidMotionEvent, () => dart.global.Object.setPrototypeOf({
    downTime: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    eventTime: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    action: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerCount: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerProperties: {type: T.ListOfAndroidPointerProperties(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerCoords: {type: T.ListOfAndroidPointerCoords(), isConst: false, isFinal: true, libraryUri: I[2]},
    metaState: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    buttonState: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    xPrecision: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    yPrecision: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[2]},
    deviceId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    edgeFlags: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    source: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    flags: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    motionEventId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidMotionEvent))));
  dart.defineExtensionMethods(platform_views.AndroidMotionEvent, ['toString']);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  platform_views._AndroidViewState = class _AndroidViewState extends core._Enum {
    [_enumToString]() {
      return "_AndroidViewState." + this[_name];
    }
  };
  (platform_views._AndroidViewState.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(platform_views._AndroidViewState).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = platform_views._AndroidViewState.prototype;
  dart.addTypeTests(platform_views._AndroidViewState);
  dart.addRtiResources(platform_views._AndroidViewState, ["flutter__src__services__platform_views|_AndroidViewState"]);
  dart.addTypeCaches(platform_views._AndroidViewState);
  dart.setMethodSignature(platform_views._AndroidViewState, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._AndroidViewState))));
  dart.setLibraryUri(platform_views._AndroidViewState, I[1]);
  dart.setStaticFieldSignature(platform_views._AndroidViewState, () => ['values', 'waitingForSize', 'creating', 'created', 'disposed']);
  dart.defineLazy(platform_views._AndroidViewState, {
    /*platform_views._AndroidViewState.values*/get values() {
      return C[0] || CT.C0;
    },
    /*platform_views._AndroidViewState.waitingForSize*/get waitingForSize() {
      return C[1] || CT.C1;
    },
    /*platform_views._AndroidViewState.creating*/get creating() {
      return C[2] || CT.C2;
    },
    /*platform_views._AndroidViewState.created*/get created() {
      return C[3] || CT.C3;
    },
    /*platform_views._AndroidViewState.disposed*/get disposed() {
      return C[4] || CT.C4;
    }
  }, false);
  var ___AndroidMotionEventConverter_pointTransformer = dart.privateName(platform_views, "_#_AndroidMotionEventConverter#pointTransformer");
  var _remove = dart.privateName(platform_views, "_remove");
  var _is = dart.privateName(dart_rti, "_is");
  platform_views._AndroidMotionEventConverter = class _AndroidMotionEventConverter extends core.Object {
    static ['_#new#tearOff']() {
      return new platform_views._AndroidMotionEventConverter.new();
    }
    get pointTransformer() {
      let t$362;
      t$362 = this[___AndroidMotionEventConverter_pointTransformer];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("pointTransformer")) : t$362;
    }
    set pointTransformer(pointTransformer$35param) {
      this[___AndroidMotionEventConverter_pointTransformer] = pointTransformer$35param;
    }
    handlePointerDownEvent(event) {
      if (this.pointerProperties[$isEmpty]) {
        this.downTimeMillis = event.timeStamp.inMilliseconds;
      }
      let androidPointerId = 0;
      while (this.usedAndroidPointerIds.contains(androidPointerId)) {
        androidPointerId = androidPointerId + 1;
      }
      this.usedAndroidPointerIds.add(androidPointerId);
      this.pointerProperties[$_set](event.pointer, this.propertiesFor(event, androidPointerId));
    }
    updatePointerPositions(event) {
      let t$362;
      let position = (t$362 = event.position, this.pointTransformer(t$362));
      this.pointerPositions[$_set](event.pointer, new platform_views.AndroidPointerCoords.new({orientation: event.orientation, pressure: event.pressure, size: event.size, toolMajor: event.radiusMajor, toolMinor: event.radiusMinor, touchMajor: event.radiusMajor, touchMinor: event.radiusMinor, x: position.dx, y: position.dy}));
    }
    [_remove](pointer) {
      this.pointerPositions[$remove](pointer);
      this.usedAndroidPointerIds.remove(dart.nullCheck(this.pointerProperties[$_get](pointer)).id);
      this.pointerProperties[$remove](pointer);
      if (this.pointerProperties[$isEmpty]) {
        this.downTimeMillis = null;
      }
    }
    handlePointerUpEvent(event) {
      this[_remove](event.pointer);
    }
    handlePointerCancelEvent(event) {
      this[_remove](event.pointer);
    }
    toAndroidMotionEvent(event) {
      let pointers = this.pointerPositions[$keys][$toList]();
      let pointerIdx = pointers[$indexOf](event.pointer);
      let numPointers = pointers[$length];
      if (event.platformData === 1 || this.isSinglePointerAction(event) && pointerIdx < numPointers - 1) {
        return null;
      }
      let action = null;
      if (T.PointerDownEvent()[_is](event)) {
        action = numPointers === 1 ? 0 : platform_views.AndroidViewController.pointerAction(pointerIdx, 5);
      } else if (T.PointerUpEvent()[_is](event)) {
        action = numPointers === 1 ? 1 : platform_views.AndroidViewController.pointerAction(pointerIdx, 6);
      } else if (T.PointerMoveEvent()[_is](event)) {
        action = 2;
      } else if (T.PointerCancelEvent()[_is](event)) {
        action = 3;
      } else {
        return null;
      }
      return new platform_views.AndroidMotionEvent.new({downTime: dart.nullCheck(this.downTimeMillis), eventTime: event.timeStamp.inMilliseconds, action: action, pointerCount: this.pointerPositions[$length], pointerProperties: pointers[$map](T.AndroidPointerProperties(), dart.fn(i => dart.nullCheck(this.pointerProperties[$_get](i)), T.intToAndroidPointerProperties()))[$toList](), pointerCoords: pointers[$map](T.AndroidPointerCoords(), dart.fn(i => dart.nullCheck(this.pointerPositions[$_get](i)), T.intToAndroidPointerCoords()))[$toList](), metaState: 0, buttonState: 0, xPrecision: 1.0, yPrecision: 1.0, deviceId: 0, edgeFlags: 0, source: platform_views._AndroidMotionEventConverter.sourceFor(event), flags: 0, motionEventId: event.embedderId});
    }
    static sourceFor(event) {
      let source = 0;
      switch (event.kind) {
        case C[5] || CT.C5:
          {
            source = 4098;
            break;
          }
        case C[6] || CT.C6:
          {
            source = 1048584;
            break;
          }
        case C[7] || CT.C7:
          {
            source = 8194;
            break;
          }
        case C[8] || CT.C8:
        case C[9] || CT.C9:
          {
            source = 16386;
            break;
          }
        case C[10] || CT.C10:
          {
            source = 0;
          }
      }
      return source;
    }
    propertiesFor(event, pointerId) {
      let toolType = 0;
      switch (event.kind) {
        case C[5] || CT.C5:
        case C[6] || CT.C6:
          {
            toolType = 1;
            break;
          }
        case C[7] || CT.C7:
          {
            toolType = 3;
            break;
          }
        case C[8] || CT.C8:
          {
            toolType = 2;
            break;
          }
        case C[9] || CT.C9:
          {
            toolType = 4;
            break;
          }
        case C[10] || CT.C10:
          {
            toolType = 0;
          }
      }
      return new platform_views.AndroidPointerProperties.new({id: pointerId, toolType: toolType});
    }
    isSinglePointerAction(event) {
      return !T.PointerDownEvent()[_is](event) && !T.PointerUpEvent()[_is](event);
    }
  };
  (platform_views._AndroidMotionEventConverter.new = function() {
    this.pointerPositions = new (G.IdentityMapOfint$AndroidPointerCoords()).new();
    this.pointerProperties = new (G.IdentityMapOfint$AndroidPointerProperties()).new();
    this.usedAndroidPointerIds = G.LinkedHashSetOfint().new();
    this[___AndroidMotionEventConverter_pointTransformer] = null;
    this.downTimeMillis = null;
    ;
  }).prototype = platform_views._AndroidMotionEventConverter.prototype;
  dart.addTypeTests(platform_views._AndroidMotionEventConverter);
  dart.addRtiResources(platform_views._AndroidMotionEventConverter, ["flutter__src__services__platform_views|_AndroidMotionEventConverter"]);
  dart.addTypeCaches(platform_views._AndroidMotionEventConverter);
  dart.setMethodSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    handlePointerDownEvent: T.PointerDownEventTovoid(),
    updatePointerPositions: T.PointerEventTovoid(),
    [_remove]: T.intTovoid(),
    handlePointerUpEvent: T.PointerUpEventTovoid(),
    handlePointerCancelEvent: T.PointerCancelEventTovoid(),
    toAndroidMotionEvent: T.PointerEventToAndroidMotionEventN(),
    propertiesFor: T.PointerEventAndintToAndroidPointerProperties(),
    isSinglePointerAction: T.PointerEventTobool()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setStaticMethodSignature(platform_views._AndroidMotionEventConverter, () => ['sourceFor']);
  dart.setGetterSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({pointTransformer: T.OffsetToOffset()}, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setSetterSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({pointTransformer: T.OffsetToOffset()}, dart.getSetters(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  dart.setLibraryUri(platform_views._AndroidMotionEventConverter, I[1]);
  dart.setFieldSignature(platform_views._AndroidMotionEventConverter, () => dart.global.Object.setPrototypeOf({
    pointerPositions: {type: T.MapOfint$AndroidPointerCoords(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerProperties: {type: T.MapOfint$AndroidPointerProperties(), isConst: false, isFinal: true, libraryUri: I[2]},
    usedAndroidPointerIds: {type: T.SetOfint(), isConst: false, isFinal: true, libraryUri: I[2]},
    [___AndroidMotionEventConverter_pointTransformer]: {type: T.OffsetToNOffset(), isConst: false, isFinal: false},
    downTimeMillis: {type: T.intN(), isConst: false, isFinal: false, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._AndroidMotionEventConverter))));
  var data$ = dart.privateName(platform_views, "_CreationParams.data");
  var codec$ = dart.privateName(platform_views, "_CreationParams.codec");
  platform_views._CreationParams = class _CreationParams extends core.Object {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    get codec() {
      return this[codec$];
    }
    set codec(value) {
      super.codec = value;
    }
    static ['_#new#tearOff'](data, codec) {
      return new platform_views._CreationParams.new(data, codec);
    }
  };
  (platform_views._CreationParams.new = function(data, codec) {
    this[data$] = data;
    this[codec$] = codec;
    ;
  }).prototype = platform_views._CreationParams.prototype;
  dart.addTypeTests(platform_views._CreationParams);
  dart.addRtiResources(platform_views._CreationParams, ["flutter__src__services__platform_views|_CreationParams"]);
  dart.addTypeCaches(platform_views._CreationParams);
  dart.setLibraryUri(platform_views._CreationParams, I[1]);
  dart.setFieldSignature(platform_views._CreationParams, () => dart.global.Object.setPrototypeOf({
    data: {type: T.dynamic(), isConst: false, isFinal: true},
    codec: {type: T.MessageCodec(), isConst: false, isFinal: true, libraryUri: I[3]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._CreationParams))));
  var viewId$ = dart.privateName(platform_views, "AndroidViewController.viewId");
  var _motionEventConverter = dart.privateName(platform_views, "_motionEventConverter");
  var _state = dart.privateName(platform_views, "_state");
  var _platformViewCreatedCallbacks = dart.privateName(platform_views, "_platformViewCreatedCallbacks");
  var _viewType = dart.privateName(platform_views, "_viewType");
  var _layoutDirection = dart.privateName(platform_views, "_layoutDirection");
  var _creationParams = dart.privateName(platform_views, "_creationParams");
  var _createRequiresSize = dart.privateName(platform_views, "_createRequiresSize");
  var _sendCreateMessage = dart.privateName(platform_views, "_sendCreateMessage");
  var _sendResizeMessage = dart.privateName(platform_views, "_sendResizeMessage");
  var _sendDisposeMessage = dart.privateName(platform_views, "_sendDisposeMessage");
  platform_views.PlatformViewController = class PlatformViewController extends core.Object {
    get awaitingCreation() {
      return false;
    }
    create(opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return async.async(T.void(), function* create() {
      });
    }
  };
  (platform_views.PlatformViewController.new = function() {
    ;
  }).prototype = platform_views.PlatformViewController.prototype;
  dart.addTypeTests(platform_views.PlatformViewController);
  dart.addRtiResources(platform_views.PlatformViewController, ["flutter__src__services__platform_views|PlatformViewController"]);
  dart.addTypeCaches(platform_views.PlatformViewController);
  dart.setMethodSignature(platform_views.PlatformViewController, () => dart.global.Object.setPrototypeOf({create: T.__ToFutureOfvoid()}, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.PlatformViewController))));
  dart.setGetterSignature(platform_views.PlatformViewController, () => dart.global.Object.setPrototypeOf({awaitingCreation: T.bool()}, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.PlatformViewController))));
  dart.setLibraryUri(platform_views.PlatformViewController, I[1]);
  platform_views.AndroidViewController = class AndroidViewController extends platform_views.PlatformViewController {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    static _getAndroidDirection(direction) {
      switch (direction) {
        case C[11] || CT.C11:
          {
            return 0;
          }
        case C[12] || CT.C12:
          {
            return 1;
          }
      }
    }
    static pointerAction(pointerId, action) {
      return pointerId << 8 & 65280 | action & 255;
    }
    get awaitingCreation() {
      return this[_state] === platform_views._AndroidViewState.waitingForSize;
    }
    create(opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return async.async(T.void(), (function* create() {
        if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("trying to create a disposed Android view", I[0], 829, 12, "_state != _AndroidViewState.disposed");
        if (!(this[_state] === platform_views._AndroidViewState.waitingForSize)) dart.assertFailed("Android view is already sized. View id: " + dart.strSafe(this.viewId), I[0], 830, 12, "_state == _AndroidViewState.waitingForSize");
        if (this[_createRequiresSize] && size == null) {
          return;
        }
        this[_state] = platform_views._AndroidViewState.creating;
        yield this[_sendCreateMessage]({size: size, position: position});
        this[_state] = platform_views._AndroidViewState.created;
        for (let callback of this[_platformViewCreatedCallbacks]) {
          callback(this.viewId);
        }
      }).bind(this));
    }
    setSize(size) {
      return async.async(T.Size(), (function* setSize() {
        if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("Android view is disposed. View id: " + dart.strSafe(this.viewId), I[0], 861, 12, "_state != _AndroidViewState.disposed");
        if (this[_state] === platform_views._AndroidViewState.waitingForSize) {
          yield this.create({size: size});
          return size;
        } else {
          return this[_sendResizeMessage](size);
        }
      }).bind(this));
    }
    get requiresViewComposition() {
      return false;
    }
    sendMotionEvent(event) {
      return async.async(T.void(), (function* sendMotionEvent() {
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.dynamic(), "touch", event[_asList](this.viewId));
      }).bind(this));
    }
    get pointTransformer() {
      return this[_motionEventConverter].pointTransformer;
    }
    set pointTransformer(transformer) {
      this[_motionEventConverter].pointTransformer = transformer;
    }
    get isCreated() {
      return this[_state] === platform_views._AndroidViewState.created;
    }
    addOnPlatformViewCreatedListener(listener) {
      if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed(null, I[0], 925, 12, "_state != _AndroidViewState.disposed");
      this[_platformViewCreatedCallbacks][$add](listener);
    }
    removeOnPlatformViewCreatedListener(listener) {
      if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed(null, I[0], 931, 12, "_state != _AndroidViewState.disposed");
      this[_platformViewCreatedCallbacks][$remove](listener);
    }
    get createdCallbacks() {
      return this[_platformViewCreatedCallbacks];
    }
    setLayoutDirection(layoutDirection) {
      return async.async(T.void(), (function* setLayoutDirection() {
        if (!(this[_state] !== platform_views._AndroidViewState.disposed)) dart.assertFailed("trying to set a layout direction for a disposed Android view. View id: " + dart.strSafe(this.viewId), I[0], 943, 7, "_state != _AndroidViewState.disposed");
        if (layoutDirection === this[_layoutDirection]) {
          return;
        }
        this[_layoutDirection] = layoutDirection;
        if (this[_state] === platform_views._AndroidViewState.waitingForSize) {
          return;
        }
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "setDirection", new (G.IdentityMapOfString$dynamic()).from(["id", this.viewId, "direction", platform_views.AndroidViewController._getAndroidDirection(layoutDirection)]));
      }).bind(this));
    }
    dispatchPointerEvent(event) {
      return async.async(T.void(), (function* dispatchPointerEvent() {
        if (T.PointerHoverEvent()[_is](event)) {
          return;
        }
        if (T.PointerDownEvent()[_is](event)) {
          this[_motionEventConverter].handlePointerDownEvent(event);
        }
        this[_motionEventConverter].updatePointerPositions(event);
        let androidEvent = this[_motionEventConverter].toAndroidMotionEvent(event);
        if (T.PointerUpEvent()[_is](event)) {
          this[_motionEventConverter].handlePointerUpEvent(event);
        } else if (T.PointerCancelEvent()[_is](event)) {
          this[_motionEventConverter].handlePointerCancelEvent(event);
        }
        if (androidEvent != null) {
          yield this.sendMotionEvent(androidEvent);
        }
      }).bind(this));
    }
    clearFocus() {
      if (this[_state] !== platform_views._AndroidViewState.created) {
        return G.FutureOfvoid().value();
      }
      return system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "clearFocus", this.viewId);
    }
    dispose() {
      return async.async(T.void(), (function* dispose() {
        let state = this[_state];
        this[_state] = platform_views._AndroidViewState.disposed;
        this[_platformViewCreatedCallbacks][$clear]();
        platform_views.PlatformViewsService._instance[_focusCallbacks][$remove](this.viewId);
        if (state === platform_views._AndroidViewState.creating || state === platform_views._AndroidViewState.created) {
          yield this[_sendDisposeMessage]();
        }
      }).bind(this));
    }
  };
  (platform_views.AndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_motionEventConverter] = new platform_views._AndroidMotionEventConverter.new();
    this[_state] = platform_views._AndroidViewState.waitingForSize;
    this[_platformViewCreatedCallbacks] = G.JSArrayOfintTovoid().of([]);
    this[viewId$] = viewId;
    if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, I[0], 720, 16, "creationParams == null || creationParamsCodec != null");
    this[_viewType] = viewType;
    this[_layoutDirection] = layoutDirection;
    this[_creationParams] = creationParams == null ? null : new platform_views._CreationParams.new(creationParams, dart.nullCheck(creationParamsCodec));
    ;
  }).prototype = platform_views.AndroidViewController.prototype;
  dart.addTypeTests(platform_views.AndroidViewController);
  dart.addRtiResources(platform_views.AndroidViewController, ["flutter__src__services__platform_views|AndroidViewController"]);
  dart.addTypeCaches(platform_views.AndroidViewController);
  dart.setMethodSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    setSize: T.SizeToFutureOfSize(),
    sendMotionEvent: T.AndroidMotionEventToFutureOfvoid(),
    addOnPlatformViewCreatedListener: T.FnTovoid(),
    removeOnPlatformViewCreatedListener: T.FnTovoid(),
    setLayoutDirection: T.TextDirectionToFutureOfvoid(),
    dispatchPointerEvent: T.PointerEventToFutureOfvoid(),
    clearFocus: T.VoidToFutureOfvoid(),
    dispose: T.VoidToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setStaticMethodSignature(platform_views.AndroidViewController, () => ['_getAndroidDirection', 'pointerAction']);
  dart.setGetterSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    requiresViewComposition: T.bool(),
    pointTransformer: T.OffsetToOffset(),
    isCreated: T.bool(),
    createdCallbacks: T.ListOfintTovoid()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setSetterSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({pointTransformer: T.OffsetToOffset()}, dart.getSetters(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setLibraryUri(platform_views.AndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.AndroidViewController, () => dart.global.Object.setPrototypeOf({
    viewId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    [_viewType]: {type: T.String(), isConst: false, isFinal: true, libraryUri: I[2]},
    [_motionEventConverter]: {type: T._AndroidMotionEventConverter(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_layoutDirection]: {type: T.TextDirection(), isConst: false, isFinal: false, libraryUri: I[4]},
    [_state]: {type: T._AndroidViewState(), isConst: false, isFinal: false, libraryUri: I[1]},
    [_creationParams]: {type: T._CreationParamsN(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_platformViewCreatedCallbacks]: {type: T.ListOfintTovoid(), isConst: false, isFinal: true, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.AndroidViewController))));
  dart.setStaticFieldSignature(platform_views.AndroidViewController, () => ['kActionDown', 'kActionUp', 'kActionMove', 'kActionCancel', 'kActionPointerDown', 'kActionPointerUp', 'kAndroidLayoutDirectionLtr', 'kAndroidLayoutDirectionRtl', 'kInputDeviceSourceUnknown', 'kInputDeviceSourceTouchScreen', 'kInputDeviceSourceMouse', 'kInputDeviceSourceStylus', 'kInputDeviceSourceTouchPad']);
  dart.defineLazy(platform_views.AndroidViewController, {
    /*platform_views.AndroidViewController.kActionDown*/get kActionDown() {
      return 0;
    },
    /*platform_views.AndroidViewController.kActionUp*/get kActionUp() {
      return 1;
    },
    /*platform_views.AndroidViewController.kActionMove*/get kActionMove() {
      return 2;
    },
    /*platform_views.AndroidViewController.kActionCancel*/get kActionCancel() {
      return 3;
    },
    /*platform_views.AndroidViewController.kActionPointerDown*/get kActionPointerDown() {
      return 5;
    },
    /*platform_views.AndroidViewController.kActionPointerUp*/get kActionPointerUp() {
      return 6;
    },
    /*platform_views.AndroidViewController.kAndroidLayoutDirectionLtr*/get kAndroidLayoutDirectionLtr() {
      return 0;
    },
    /*platform_views.AndroidViewController.kAndroidLayoutDirectionRtl*/get kAndroidLayoutDirectionRtl() {
      return 1;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceUnknown*/get kInputDeviceSourceUnknown() {
      return 0;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceTouchScreen*/get kInputDeviceSourceTouchScreen() {
      return 4098;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceMouse*/get kInputDeviceSourceMouse() {
      return 8194;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceStylus*/get kInputDeviceSourceStylus() {
      return 16386;
    },
    /*platform_views.AndroidViewController.kInputDeviceSourceTouchPad*/get kInputDeviceSourceTouchPad() {
      return 1048584;
    }
  }, false);
  var _internals = dart.privateName(platform_views, "_internals");
  platform_views.SurfaceAndroidViewController = class SurfaceAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.SurfaceAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return true;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return async.async(T.bool(), (function* _sendCreateMessage() {
        if (!!size.isEmpty) dart.assertFailed("trying to create " + dart.strSafe(dart_rti.createRuntimeType(T.TextureAndroidViewController())) + " without setting a valid size.", I[0], 1049, 12, "!size.isEmpty");
        let response = (yield platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: false, hybridFallback: true, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], size: size, position: position}));
        if (T.int()[_is](response)) {
          T._TextureAndroidViewControllerInternals()[_as](this[_internals]).textureId = response;
        } else {
          this[_internals] = new platform_views._HybridAndroidViewControllerInternals.new();
        }
        return true;
      }).bind(this));
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.SurfaceAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._TextureAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.SurfaceAndroidViewController.prototype;
  dart.addTypeTests(platform_views.SurfaceAndroidViewController);
  dart.addRtiResources(platform_views.SurfaceAndroidViewController, ["flutter__src__services__platform_views|SurfaceAndroidViewController"]);
  dart.addTypeCaches(platform_views.SurfaceAndroidViewController);
  dart.setMethodSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: T.__ToFutureOfbool(),
    [_sendDisposeMessage]: T.VoidToFutureOfvoid(),
    [_sendResizeMessage]: T.SizeToFutureOfSize(),
    setOffset: T.OffsetToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  dart.setGetterSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: T.bool(),
    textureId: T.intN()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  dart.setLibraryUri(platform_views.SurfaceAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.SurfaceAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {type: T._AndroidViewControllerInternals(), isConst: false, isFinal: false, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.SurfaceAndroidViewController))));
  platform_views.ExpensiveAndroidViewController = class ExpensiveAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.ExpensiveAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return false;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return async.async(T.void(), (function* _sendCreateMessage() {
        yield platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: true, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], position: position});
      }).bind(this));
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.ExpensiveAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._HybridAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.ExpensiveAndroidViewController.prototype;
  dart.addTypeTests(platform_views.ExpensiveAndroidViewController);
  dart.addRtiResources(platform_views.ExpensiveAndroidViewController, ["flutter__src__services__platform_views|ExpensiveAndroidViewController"]);
  dart.addTypeCaches(platform_views.ExpensiveAndroidViewController);
  dart.setMethodSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: T.__ToFutureOfvoid$1(),
    [_sendDisposeMessage]: T.VoidToFutureOfvoid(),
    [_sendResizeMessage]: T.SizeToFutureOfSize(),
    setOffset: T.OffsetToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  dart.setGetterSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: T.bool(),
    textureId: T.intN()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  dart.setLibraryUri(platform_views.ExpensiveAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.ExpensiveAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {type: T._AndroidViewControllerInternals(), isConst: false, isFinal: true, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.ExpensiveAndroidViewController))));
  platform_views.TextureAndroidViewController = class TextureAndroidViewController extends platform_views.AndroidViewController {
    static ['_#_#tearOff'](opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
      return new platform_views.TextureAndroidViewController.__({viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    }
    get [_createRequiresSize]() {
      return true;
    }
    [_sendCreateMessage](opts) {
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      return async.async(T.void(), (function* _sendCreateMessage() {
        if (!!size.isEmpty) dart.assertFailed("trying to create " + dart.strSafe(dart_rti.createRuntimeType(T.TextureAndroidViewController())) + " without setting a valid size.", I[0], 1173, 12, "!size.isEmpty");
        this[_internals].textureId = T.int()[_as](yield platform_views._AndroidViewControllerInternals.sendCreateMessage({viewId: this.viewId, viewType: this[_viewType], hybrid: false, layoutDirection: this[_layoutDirection], creationParams: this[_creationParams], size: size, position: position}));
      }).bind(this));
    }
    get textureId() {
      return this[_internals].textureId;
    }
    get requiresViewComposition() {
      return this[_internals].requiresViewComposition;
    }
    [_sendDisposeMessage]() {
      return this[_internals].sendDisposeMessage({viewId: this.viewId});
    }
    [_sendResizeMessage](size) {
      return this[_internals].setSize(size, {viewId: this.viewId, viewState: this[_state]});
    }
    setOffset(off) {
      return this[_internals].setOffset(off, {viewId: this.viewId, viewState: this[_state]});
    }
  };
  (platform_views.TextureAndroidViewController.__ = function(opts) {
    let viewId = opts && 'viewId' in opts ? opts.viewId : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    this[_internals] = new platform_views._TextureAndroidViewControllerInternals.new();
    dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController).__.call(this, {viewId: viewId, viewType: viewType, layoutDirection: layoutDirection, creationParams: creationParams, creationParamsCodec: creationParamsCodec});
    ;
  }).prototype = platform_views.TextureAndroidViewController.prototype;
  dart.addTypeTests(platform_views.TextureAndroidViewController);
  dart.addRtiResources(platform_views.TextureAndroidViewController, ["flutter__src__services__platform_views|TextureAndroidViewController"]);
  dart.addTypeCaches(platform_views.TextureAndroidViewController);
  dart.setMethodSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_sendCreateMessage]: T.__ToFutureOfvoid$2(),
    [_sendDisposeMessage]: T.VoidToFutureOfvoid(),
    [_sendResizeMessage]: T.SizeToFutureOfSize(),
    setOffset: T.OffsetToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  dart.setGetterSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({
    [_createRequiresSize]: T.bool(),
    textureId: T.intN()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  dart.setLibraryUri(platform_views.TextureAndroidViewController, I[1]);
  dart.setFieldSignature(platform_views.TextureAndroidViewController, () => dart.global.Object.setPrototypeOf({[_internals]: {type: T._TextureAndroidViewControllerInternals(), isConst: false, isFinal: true, libraryUri: I[1]}}, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.TextureAndroidViewController))));
  platform_views._AndroidViewControllerInternals = class _AndroidViewControllerInternals extends core.Object {
    static sendCreateMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewType = opts && 'viewType' in opts ? opts.viewType : null;
      let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
      let hybrid = opts && 'hybrid' in opts ? opts.hybrid : null;
      let hybridFallback = opts && 'hybridFallback' in opts ? opts.hybridFallback : false;
      let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let args = (() => {
        let t$362 = new (G.IdentityMapOfString$dynamic()).new();
        t$362[$_set]("id", viewId);
        t$362[$_set]("viewType", viewType);
        t$362[$_set]("direction", platform_views.AndroidViewController._getAndroidDirection(layoutDirection));
        if (hybrid) t$362[$_set]("hybrid", hybrid);
        if (size != null) t$362[$_set]("width", size.width);
        if (size != null) t$362[$_set]("height", size.height);
        if (hybridFallback) t$362[$_set]("hybridFallback", hybridFallback);
        if (position != null) t$362[$_set]("left", position.dx);
        if (position != null) t$362[$_set]("top", position.dy);
        return t$362;
      })();
      if (creationParams != null) {
        let paramsByteData = dart.nullCheck(creationParams.codec.encodeMessage(creationParams.data));
        args[$_set]("params", typed_data.Uint8List.view(paramsByteData[$buffer], 0, paramsByteData[$lengthInBytes]));
      }
      return system_channels.SystemChannels.platform_views.invokeMethod(T.dynamic(), "create", args);
    }
  };
  (platform_views._AndroidViewControllerInternals.new = function() {
    ;
  }).prototype = platform_views._AndroidViewControllerInternals.prototype;
  dart.addTypeTests(platform_views._AndroidViewControllerInternals);
  dart.addRtiResources(platform_views._AndroidViewControllerInternals, ["flutter__src__services__platform_views|_AndroidViewControllerInternals"]);
  dart.addTypeCaches(platform_views._AndroidViewControllerInternals);
  dart.setStaticMethodSignature(platform_views._AndroidViewControllerInternals, () => ['sendCreateMessage']);
  dart.setLibraryUri(platform_views._AndroidViewControllerInternals, I[1]);
  var textureId = dart.privateName(platform_views, "_TextureAndroidViewControllerInternals.textureId");
  var _offset = dart.privateName(platform_views, "_offset");
  platform_views._TextureAndroidViewControllerInternals = class _TextureAndroidViewControllerInternals extends platform_views._AndroidViewControllerInternals {
    get textureId() {
      return this[textureId];
    }
    set textureId(value) {
      this[textureId] = value;
    }
    static ['_#new#tearOff']() {
      return new platform_views._TextureAndroidViewControllerInternals.new();
    }
    get requiresViewComposition() {
      return false;
    }
    setSize(size, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      return async.async(T.Size(), function* setSize() {
        if (!(viewState !== platform_views._AndroidViewState.waitingForSize)) dart.assertFailed("Android view must have an initial size. View id: " + dart.strSafe(viewId), I[0], 1295, 12, "viewState != _AndroidViewState.waitingForSize");
        if (!!size.isEmpty) dart.assertFailed(null, I[0], 1296, 12, "!size.isEmpty");
        let meta = (yield system_channels.SystemChannels.platform_views.invokeMapMethod(T.ObjectN(), T.ObjectN(), "resize", new (G.IdentityMapOfString$dynamic()).from(["id", viewId, "width", size.width, "height", size.height])));
        if (!(meta != null)) dart.assertFailed(null, I[0], 1306, 12, "meta != null");
        if (!dart.nullCheck(meta)[$containsKey]("width")) dart.assertFailed(null, I[0], 1307, 12, "meta!.containsKey('width')");
        if (!dart.nullCheck(meta)[$containsKey]("height")) dart.assertFailed(null, I[0], 1308, 12, "meta!.containsKey('height')");
        return new ui.Size.new(T.double()[_as](dart.nullCheck(dart.nullCheck(meta)[$_get]("width"))), T.double()[_as](dart.nullCheck(meta[$_get]("height"))));
      });
    }
    setOffset(offset, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      return async.async(T.void(), (function* setOffset() {
        if (dart.equals(offset, this[_offset])) {
          return;
        }
        if (viewState !== platform_views._AndroidViewState.created) {
          return;
        }
        this[_offset] = offset;
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "offset", new (G.IdentityMapOfString$dynamic()).from(["id", viewId, "top", offset.dy, "left", offset.dx]));
      }).bind(this));
    }
    sendDisposeMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      return system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "dispose", new (G.IdentityMapOfString$dynamic()).from(["id", viewId, "hybrid", false]));
    }
  };
  (platform_views._TextureAndroidViewControllerInternals.new = function() {
    this[_offset] = ui.Offset.zero;
    this[textureId] = null;
    ;
  }).prototype = platform_views._TextureAndroidViewControllerInternals.prototype;
  dart.addTypeTests(platform_views._TextureAndroidViewControllerInternals);
  dart.addRtiResources(platform_views._TextureAndroidViewControllerInternals, ["flutter__src__services__platform_views|_TextureAndroidViewControllerInternals"]);
  dart.addTypeCaches(platform_views._TextureAndroidViewControllerInternals);
  dart.setMethodSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    setSize: T.Size__ToFutureOfSize(),
    setOffset: T.Offset__ToFutureOfvoid(),
    sendDisposeMessage: T.__ToFutureOfvoid$3()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  dart.setGetterSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({requiresViewComposition: T.bool()}, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  dart.setLibraryUri(platform_views._TextureAndroidViewControllerInternals, I[1]);
  dart.setFieldSignature(platform_views._TextureAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    [_offset]: {type: T.Offset(), isConst: false, isFinal: false, libraryUri: I[4]},
    textureId: {type: T.intN(), isConst: false, isFinal: false, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views._TextureAndroidViewControllerInternals))));
  platform_views._HybridAndroidViewControllerInternals = class _HybridAndroidViewControllerInternals extends platform_views._AndroidViewControllerInternals {
    get textureId() {
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    get requiresViewComposition() {
      return true;
    }
    setSize(size, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    setOffset(offset, opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      let viewState = opts && 'viewState' in opts ? opts.viewState : null;
      dart.throw(new core.UnimplementedError.new("Not supported for hybrid composition."));
    }
    sendDisposeMessage(opts) {
      let viewId = opts && 'viewId' in opts ? opts.viewId : null;
      return system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "dispose", new (G.IdentityMapOfString$dynamic()).from(["id", viewId, "hybrid", true]));
    }
    static ['_#new#tearOff']() {
      return new platform_views._HybridAndroidViewControllerInternals.new();
    }
  };
  (platform_views._HybridAndroidViewControllerInternals.new = function() {
    ;
  }).prototype = platform_views._HybridAndroidViewControllerInternals.prototype;
  dart.addTypeTests(platform_views._HybridAndroidViewControllerInternals);
  dart.addRtiResources(platform_views._HybridAndroidViewControllerInternals, ["flutter__src__services__platform_views|_HybridAndroidViewControllerInternals"]);
  dart.addTypeCaches(platform_views._HybridAndroidViewControllerInternals);
  dart.setMethodSignature(platform_views._HybridAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    setSize: T.Size__ToFutureOfSize(),
    setOffset: T.Offset__ToFutureOfvoid(),
    sendDisposeMessage: T.__ToFutureOfvoid$3()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views._HybridAndroidViewControllerInternals))));
  dart.setGetterSignature(platform_views._HybridAndroidViewControllerInternals, () => dart.global.Object.setPrototypeOf({
    textureId: T.int(),
    requiresViewComposition: T.bool()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(platform_views._HybridAndroidViewControllerInternals))));
  dart.setLibraryUri(platform_views._HybridAndroidViewControllerInternals, I[1]);
  var id$0 = dart.privateName(platform_views, "DarwinPlatformViewController.id");
  var _debugDisposed = dart.privateName(platform_views, "_debugDisposed");
  platform_views.DarwinPlatformViewController = class DarwinPlatformViewController extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    setLayoutDirection(layoutDirection) {
      return async.async(T.void(), (function* setLayoutDirection() {
        if (!!this[_debugDisposed]) dart.assertFailed("trying to set a layout direction for a disposed iOS UIView. View id: " + dart.strSafe(this.id), I[0], 1414, 12, "!_debugDisposed");
        if (layoutDirection === this[_layoutDirection]) {
          return;
        }
        this[_layoutDirection] = layoutDirection;
      }).bind(this));
    }
    acceptGesture() {
      let args = new (G.IdentityMapOfString$dynamic()).from(["id", this.id]);
      return system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "acceptGesture", args);
    }
    rejectGesture() {
      let args = new (G.IdentityMapOfString$dynamic()).from(["id", this.id]);
      return system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "rejectGesture", args);
    }
    dispose() {
      return async.async(T.void(), (function* dispose() {
        this[_debugDisposed] = true;
        yield system_channels.SystemChannels.platform_views.invokeMethod(T.void(), "dispose", this.id);
        platform_views.PlatformViewsService._instance[_focusCallbacks][$remove](this.id);
      }).bind(this));
    }
  };
  (platform_views.DarwinPlatformViewController.new = function(id, layoutDirection) {
    this[_debugDisposed] = false;
    this[id$0] = id;
    this[_layoutDirection] = layoutDirection;
    ;
  }).prototype = platform_views.DarwinPlatformViewController.prototype;
  dart.addTypeTests(platform_views.DarwinPlatformViewController);
  dart.addRtiResources(platform_views.DarwinPlatformViewController, ["flutter__src__services__platform_views|DarwinPlatformViewController"]);
  dart.addTypeCaches(platform_views.DarwinPlatformViewController);
  dart.setMethodSignature(platform_views.DarwinPlatformViewController, () => dart.global.Object.setPrototypeOf({
    setLayoutDirection: T.TextDirectionToFutureOfvoid(),
    acceptGesture: T.VoidToFutureOfvoid(),
    rejectGesture: T.VoidToFutureOfvoid(),
    dispose: T.VoidToFutureOfvoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(platform_views.DarwinPlatformViewController))));
  dart.setLibraryUri(platform_views.DarwinPlatformViewController, I[1]);
  dart.setFieldSignature(platform_views.DarwinPlatformViewController, () => dart.global.Object.setPrototypeOf({
    id: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[2]},
    [_debugDisposed]: {type: T.bool(), isConst: false, isFinal: false, libraryUri: I[2]},
    [_layoutDirection]: {type: T.TextDirection(), isConst: false, isFinal: false, libraryUri: I[4]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(platform_views.DarwinPlatformViewController))));
  platform_views.UiKitViewController = class UiKitViewController extends platform_views.DarwinPlatformViewController {
    static ['_#_#tearOff'](id, layoutDirection) {
      return new platform_views.UiKitViewController.__(id, layoutDirection);
    }
  };
  (platform_views.UiKitViewController.__ = function(id, layoutDirection) {
    dart.global.Object.getPrototypeOf(platform_views.UiKitViewController).new.call(this, id, layoutDirection);
    ;
  }).prototype = platform_views.UiKitViewController.prototype;
  dart.addTypeTests(platform_views.UiKitViewController);
  dart.addRtiResources(platform_views.UiKitViewController, ["flutter__src__services__platform_views|UiKitViewController"]);
  dart.addTypeCaches(platform_views.UiKitViewController);
  dart.setLibraryUri(platform_views.UiKitViewController, I[1]);
  platform_views.AppKitViewController = class AppKitViewController extends platform_views.DarwinPlatformViewController {
    static ['_#_#tearOff'](id, layoutDirection) {
      return new platform_views.AppKitViewController.__(id, layoutDirection);
    }
  };
  (platform_views.AppKitViewController.__ = function(id, layoutDirection) {
    dart.global.Object.getPrototypeOf(platform_views.AppKitViewController).new.call(this, id, layoutDirection);
    ;
  }).prototype = platform_views.AppKitViewController.prototype;
  dart.addTypeTests(platform_views.AppKitViewController);
  dart.addRtiResources(platform_views.AppKitViewController, ["flutter__src__services__platform_views|AppKitViewController"]);
  dart.addTypeCaches(platform_views.AppKitViewController);
  dart.setLibraryUri(platform_views.AppKitViewController, I[1]);
  dart.defineLazy(platform_views, {
    /*platform_views.platformViewsRegistry*/get platformViewsRegistry() {
      return new platform_views.PlatformViewsRegistry._instance();
    }
  }, false);
  dart.moduleConstCaches.set("packages/flutter/src/services/platform_views.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"flutter__src__services__platform_views|UiKitViewController":{"flutter__src__services__platform_views|DarwinPlatformViewController":[]},"flutter__src__services__platform_views|AppKitViewController":{"flutter__src__services__platform_views|DarwinPlatformViewController":[]},"async|Future":{"Future.T":"1"},"flutter__src__services__platform_views|AndroidViewController":{"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__message_codec|MessageCodec":{"MessageCodec.T":"1"},"ui|TextDirection":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"flutter__src__services__platform_views|SurfaceAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__platform_views|ExpensiveAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"core|Map":{"Map.K":"1","Map.V":"2"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__services__platform_views|_AndroidViewState":{"core|_Enum":[],"core|Enum":[]},"flutter__src__gestures__events|PointerDownEvent":{"flutter__src__gestures__events|_CopyPointerDownEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerDownEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_PointerEventDescription":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerUpEvent":{"flutter__src__gestures__events|_CopyPointerUpEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerUpEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerMoveEvent":{"flutter__src__gestures__events|_CopyPointerMoveEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerMoveEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerCancelEvent":{"flutter__src__gestures__events|_CopyPointerCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerCancelEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"ui|Offset":{"ui|OffsetBase":[]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"ui|Size":{"ui|OffsetBase":[]},"flutter__src__gestures__events|PointerHoverEvent":{"flutter__src__gestures__events|_CopyPointerHoverEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerHoverEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__services__platform_views|TextureAndroidViewController":{"flutter__src__services__platform_views|AndroidViewController":[],"flutter__src__services__platform_views|PlatformViewController":[]},"flutter__src__services__platform_views|_TextureAndroidViewControllerInternals":{"flutter__src__services__platform_views|_AndroidViewControllerInternals":[]},"flutter__src__services__platform_views|_HybridAndroidViewControllerInternals":{"flutter__src__services__platform_views|_AndroidViewControllerInternals":[]}}'));
  dart.trackLibraries("packages/flutter/src/services/platform_views.dart", {
    "package:flutter/src/services/platform_views.dart": platform_views
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["platform_views.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/services/platform_views.dart.lib.js"}');
  // Exports:
  return {
    src__services__platform_views: platform_views
  };
}));

//# sourceMappingURL=platform_views.dart.lib.js.map

// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/foundation/print.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__packages__flutter__src__foundation__print_dart(dart_sdk) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var print = Object.create(dart.library);
  var $split = dartx.split;
  var $expand = dartx.expand;
  var $join = dartx.join;
  var $isNotEmpty = dartx.isNotEmpty;
  var $trimLeft = dartx.trimLeft;
  var $_get = dartx._get;
  var $matchAsPrefix = dartx.matchAsPrefix;
  var $times = dartx['*'];
  var $substring = dartx.substring;
  var $add = dartx.add;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOf_WordWrapParseMode: () => (T.ListOf_WordWrapParseMode = dart.constFn(dart_rti.findType("core|List<flutter__src__foundation__print|_WordWrapParseMode>")))(),
    _WordWrapParseMode: () => (T._WordWrapParseMode = dart.constFn(dart_rti.findType("flutter__src__foundation__print|_WordWrapParseMode")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    StringToIterableOfString: () => (T.StringToIterableOfString = dart.constFn(dart_rti.findType("core|Iterable<core|String>(core|String)")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    StringN__Tovoid: () => (T.StringN__Tovoid = dart.constFn(dart_rti.findType("~(core|String?{wrapWidth:core|int?})")))()
  };
  var G = {
    JSArrayOfString: () => (G.JSArrayOfString = dart.constFn(_interceptors.JSArray$(T.String())))(),
    CompleterOfvoid: () => (G.CompleterOfvoid = dart.constFn(async.Completer$(T.void())))(),
    FutureOfvoid: () => (G.FutureOfvoid = dart.constFn(async.Future$(T.void())))(),
    ListQueueOfString: () => (G.ListQueueOfString = dart.constFn(collection.ListQueue$(T.String())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "inSpace",
        [_Enum_index]: 0
      }, print._WordWrapParseMode.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "inWord",
        [_Enum_index]: 1
      }, print._WordWrapParseMode.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "atBreak",
        [_Enum_index]: 2
      }, print._WordWrapParseMode.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3], T._WordWrapParseMode());
    },
    get C4() {
      return C[4] = dart.fn(print._debugPrintTask, T.VoidTovoid());
    },
    get C5() {
      return C[5] = dart.fn(print.debugPrintThrottled, T.StringN__Tovoid());
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [Duration__duration]: 1000000
      }, core.Duration.prototype));
    }
  }, false);
  var C = Array(7).fill(void 0);
  var I = [
    "package:flutter/src/foundation/print.dart",
    "dart:core",
    "file:///C:/src/flutter/packages/flutter/lib/src/foundation/print.dart"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  print._WordWrapParseMode = class _WordWrapParseMode extends core._Enum {
    [_enumToString]() {
      return "_WordWrapParseMode." + this[_name];
    }
  };
  (print._WordWrapParseMode.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(print._WordWrapParseMode).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = print._WordWrapParseMode.prototype;
  dart.addTypeTests(print._WordWrapParseMode);
  dart.addRtiResources(print._WordWrapParseMode, ["flutter__src__foundation__print|_WordWrapParseMode"]);
  dart.addTypeCaches(print._WordWrapParseMode);
  dart.setMethodSignature(print._WordWrapParseMode, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(print._WordWrapParseMode))));
  dart.setLibraryUri(print._WordWrapParseMode, I[0]);
  dart.setStaticFieldSignature(print._WordWrapParseMode, () => ['values', 'inSpace', 'inWord', 'atBreak']);
  dart.defineLazy(print._WordWrapParseMode, {
    /*print._WordWrapParseMode.values*/get values() {
      return C[0] || CT.C0;
    },
    /*print._WordWrapParseMode.inSpace*/get inSpace() {
      return C[1] || CT.C1;
    },
    /*print._WordWrapParseMode.inWord*/get inWord() {
      return C[2] || CT.C2;
    },
    /*print._WordWrapParseMode.atBreak*/get atBreak() {
      return C[3] || CT.C3;
    }
  }, false);
  print.debugPrintSynchronously = function debugPrintSynchronously(message, opts) {
    let wrapWidth = opts && 'wrapWidth' in opts ? opts.wrapWidth : null;
    if (message != null && wrapWidth != null) {
      core.print(message[$split]("\n")[$expand](T.String(), dart.fn(line => print.debugWordWrap(line, wrapWidth), T.StringToIterableOfString()))[$join]("\n"));
    } else {
      core.print(message);
    }
  };
  print.debugPrintThrottled = function debugPrintThrottled(message, opts) {
    let t$362, t$362$;
    let wrapWidth = opts && 'wrapWidth' in opts ? opts.wrapWidth : null;
    let messageLines = (t$362$ = (t$362 = message, t$362 == null ? null : t$362[$split]("\n")), t$362$ == null ? G.JSArrayOfString().of(["null"]) : t$362$);
    if (wrapWidth != null) {
      print._debugPrintBuffer.addAll(messageLines[$expand](T.String(), dart.fn(line => print.debugWordWrap(line, wrapWidth), T.StringToIterableOfString())));
    } else {
      print._debugPrintBuffer.addAll(messageLines);
    }
    if (!print._debugPrintScheduled) {
      print._debugPrintTask();
    }
  };
  print._debugPrintTask = function _debugPrintTask() {
    let t$362;
    print._debugPrintScheduled = false;
    if (print._debugPrintStopwatch.elapsed['>'](print._kDebugPrintPauseTime)) {
      print._debugPrintStopwatch.stop();
      print._debugPrintStopwatch.reset();
      print._debugPrintedCharacters = 0;
    }
    while (print._debugPrintedCharacters < 12288 && print._debugPrintBuffer[$isNotEmpty]) {
      let line = print._debugPrintBuffer.removeFirst();
      print._debugPrintedCharacters = print._debugPrintedCharacters + line.length;
      core.print(line);
    }
    if (print._debugPrintBuffer[$isNotEmpty]) {
      print._debugPrintScheduled = true;
      print._debugPrintedCharacters = 0;
      async.Timer.new(print._kDebugPrintPauseTime, C[4] || CT.C4);
      print._debugPrintCompleter == null ? print._debugPrintCompleter = G.CompleterOfvoid().new() : null;
    } else {
      print._debugPrintStopwatch.start();
      t$362 = print._debugPrintCompleter;
      t$362 == null ? null : t$362.complete();
      print._debugPrintCompleter = null;
    }
  };
  print.debugWordWrap = function debugWordWrap(message, width, opts) {
    let wrapIndent = opts && 'wrapIndent' in opts ? opts.wrapIndent : "";
    if (message.length < width || message[$trimLeft]()[$_get](0) === "#") {
      return G.JSArrayOfString().of([message]);
    }
    let wrapped = G.JSArrayOfString().of([]);
    let prefixMatch = dart.nullCheck(print._indentPattern[$matchAsPrefix](message));
    let prefix = wrapIndent + " "[$times](dart.nullCheck(prefixMatch.group(0)).length);
    let start = 0;
    let startForLengthCalculations = 0;
    let addPrefix = false;
    let index = prefix.length;
    let mode = print._WordWrapParseMode.inSpace;
    let t$36$35lastWordStart = null;
    function t$36$35lastWordStart$35get() {
      let t$363;
      t$363 = t$36$35lastWordStart;
      return t$363 == null ? dart.throw(new _internal.LateError.localNI("lastWordStart")) : t$363;
    }
    function t$36$35lastWordStart$35set(lastWordStart$35param) {
      return t$36$35lastWordStart = lastWordStart$35param;
    }
    let lastWordEnd = null;
    while (true) {
      switch (mode) {
        case C[1] || CT.C1:
          {
            while (index < message.length && message[$_get](index) === " ") {
              index = index + 1;
            }
            t$36$35lastWordStart$35set(index);
            mode = print._WordWrapParseMode.inWord;
            break;
          }
        case C[2] || CT.C2:
          {
            while (index < message.length && message[$_get](index) !== " ") {
              index = index + 1;
            }
            mode = print._WordWrapParseMode.atBreak;
            break;
          }
        case C[3] || CT.C3:
          {
            if (index - startForLengthCalculations > width || index === message.length) {
              if (index - startForLengthCalculations <= width || lastWordEnd == null) {
                lastWordEnd = index;
              }
              if (addPrefix) {
                wrapped[$add](prefix + message[$substring](start, lastWordEnd));
              } else {
                wrapped[$add](message[$substring](start, lastWordEnd));
                addPrefix = true;
              }
              if (dart.notNull(lastWordEnd) >= message.length) {
                return wrapped;
              }
              if (lastWordEnd === index) {
                while (index < message.length && message[$_get](index) === " ") {
                  index = index + 1;
                }
                start = index;
                mode = print._WordWrapParseMode.inWord;
              } else {
                if (!(t$36$35lastWordStart$35get() > dart.notNull(lastWordEnd))) dart.assertFailed(null, I[2], 179, 20, "lastWordStart > lastWordEnd");
                start = t$36$35lastWordStart$35get();
                mode = print._WordWrapParseMode.atBreak;
              }
              startForLengthCalculations = start - prefix.length;
              if (!addPrefix) dart.assertFailed(null, I[2], 184, 18, "addPrefix");
              lastWordEnd = null;
            } else {
              lastWordEnd = index;
              mode = print._WordWrapParseMode.inSpace;
            }
          }
      }
    }
  };
  dart.copyProperties(print, {
    get debugPrintDone() {
      let t$365, t$365$;
      t$365$ = (t$365 = print._debugPrintCompleter, t$365 == null ? null : t$365.future);
      return t$365$ == null ? G.FutureOfvoid().value() : t$365$;
    }
  });
  var Duration__duration = dart.privateName(core, "Duration._duration");
  dart.defineLazy(print, {
    /*print.debugPrint*/get debugPrint() {
      return C[5] || CT.C5;
    },
    set debugPrint(value) {},
    /*print._debugPrintedCharacters*/get _debugPrintedCharacters() {
      return 0;
    },
    set _debugPrintedCharacters(value) {},
    /*print._kDebugPrintCapacity*/get _kDebugPrintCapacity() {
      return 12288;
    },
    /*print._kDebugPrintPauseTime*/get _kDebugPrintPauseTime() {
      return C[6] || CT.C6;
    },
    /*print._debugPrintBuffer*/get _debugPrintBuffer() {
      return new (G.ListQueueOfString()).new();
    },
    /*print._debugPrintStopwatch*/get _debugPrintStopwatch() {
      return new core.Stopwatch.new();
    },
    /*print._debugPrintCompleter*/get _debugPrintCompleter() {
      return null;
    },
    set _debugPrintCompleter(value) {},
    /*print._debugPrintScheduled*/get _debugPrintScheduled() {
      return false;
    },
    set _debugPrintScheduled(value) {},
    /*print._indentPattern*/get _indentPattern() {
      return core.RegExp.new("^ *(?:[-+*] |[0-9]+[.):] )?");
    }
  }, false);
  dart.moduleConstCaches.set("packages/flutter/src/foundation/print.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__foundation__print|_WordWrapParseMode":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]}}'));
  dart.trackLibraries("packages/flutter/src/foundation/print.dart", {
    "package:flutter/src/foundation/print.dart": print
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["print.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/foundation/print.dart.lib.js"}');
  // Exports:
  return {
    src__foundation__print: print
  };
}));

//# sourceMappingURL=print.dart.lib.js.map

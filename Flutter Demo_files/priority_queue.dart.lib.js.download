// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/collection/src/priority_queue.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/collection/src/utils.dart'], (function load__packages__collection__src__priority_queue_dart(dart_sdk, packages__collection__src__utils$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const utils = packages__collection__src__utils$46dart.src__utils;
  var priority_queue = Object.create(dart.library);
  var $_get = dartx._get;
  var $take = dartx.take;
  var $cast = dartx.cast;
  var $sort = dartx.sort;
  var $toString = dartx.toString;
  var $length = dartx.length;
  var $isOdd = dartx.isOdd;
  var $rightShift = dartx['>>'];
  var $_set = dartx._set;
  var $truncate = dartx.truncate;
  var $setRange = dartx.setRange;
  var $iterator = dartx.iterator;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    FnToPriorityQueueOfE: () => (T.FnToPriorityQueueOfE = dart.constFn(dart_rti.findType("collection__src__priority_queue|PriorityQueue<0^>([core|int(0^,0^)?])<core|Object?>")))(),
    ObjectNAndObjectNToint: () => (T.ObjectNAndObjectNToint = dart.constFn(dart_rti.findType("core|int(core|Object?,core|Object?)")))(),
    Never: () => (T.Never = dart.constFn(dart_rti.findType("0&")))(),
    ObjectNTovoid: () => (T.ObjectNTovoid = dart.constFn(dart_rti.findType("~(core|Object?)")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    ObjectNTobool: () => (T.ObjectNTobool = dart.constFn(dart_rti.findType("core|bool(core|Object?)")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(utils.defaultCompare, T.ObjectNAndObjectNToint());
    },
    get C1() {
      return C[1] = dart.constList([], T.Never());
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "package:collection/src/priority_queue.dart",
    "dart:core"
  ];
  const _is_PriorityQueue_default = Symbol('_is_PriorityQueue_default');
  priority_queue.PriorityQueue$ = dart.generic(E => {
    class PriorityQueue extends core.Object {
      static ['_#new#tearOff'](E, comparison = null) {
        return new (priority_queue.HeapPriorityQueue$(E)).new(comparison);
      }
    }
    (PriorityQueue[dart.mixinNew] = function() {
    }).prototype = PriorityQueue.prototype;
    dart.addTypeTests(PriorityQueue);
    PriorityQueue.prototype[_is_PriorityQueue_default] = true;
    dart.addRtiResources(PriorityQueue, ["collection__src__priority_queue|PriorityQueue"]);
    dart.addTypeCaches(PriorityQueue);
    dart.setStaticMethodSignature(PriorityQueue, () => ['new']);
    dart.setLibraryUri(PriorityQueue, I[0]);
    return PriorityQueue;
  });
  priority_queue.PriorityQueue = priority_queue.PriorityQueue$();
  dart.addTypeTests(priority_queue.PriorityQueue, _is_PriorityQueue_default);
  var comparison$ = dart.privateName(priority_queue, "HeapPriorityQueue.comparison");
  var _queue$ = dart.privateName(priority_queue, "_queue");
  var _eval = dart.privateName(dart_rti, "_eval");
  var _length = dart.privateName(priority_queue, "_length");
  var _modificationCount = dart.privateName(priority_queue, "_modificationCount");
  var _as = dart.privateName(dart_rti, "_as");
  var _elementAt = dart.privateName(priority_queue, "_elementAt");
  var _add = dart.privateName(priority_queue, "_add");
  var _locate = dart.privateName(priority_queue, "_locate");
  var _removeLast = dart.privateName(priority_queue, "_removeLast");
  var _bubbleUp = dart.privateName(priority_queue, "_bubbleUp");
  var _bubbleDown = dart.privateName(priority_queue, "_bubbleDown");
  var _toUnorderedList = dart.privateName(priority_queue, "_toUnorderedList");
  var _grow = dart.privateName(priority_queue, "_grow");
  const _is_HeapPriorityQueue_default = Symbol('_is_HeapPriorityQueue_default');
  priority_queue.HeapPriorityQueue$ = dart.generic(E => {
    var __t$EN = () => (__t$EN = dart.constFn(E[_eval]("0?")))();
    var __t$HeapPriorityQueueOfE = () => (__t$HeapPriorityQueueOfE = dart.constFn(E[_eval]("collection__src__priority_queue|HeapPriorityQueue<0>")))();
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(E[_eval]("core|Iterable<0>")))();
    var __t$intToE = () => (__t$intToE = dart.constFn(E[_eval]("0(core|int)")))();
    var __t$VoidToIterableOfE = () => (__t$VoidToIterableOfE = dart.constFn(E[_eval]("core|Iterable<0>()")))();
    var __t$VoidToE = () => (__t$VoidToE = dart.constFn(E[_eval]("0()")))();
    var __t$VoidToListOfE = () => (__t$VoidToListOfE = dart.constFn(E[_eval]("core|List<0>()")))();
    var __t$VoidToSetOfE = () => (__t$VoidToSetOfE = dart.constFn(E[_eval]("core|Set<0>()")))();
    var __t$ETovoid = () => (__t$ETovoid = dart.constFn(E[_eval]("~(0)")))();
    var __t$EToint = () => (__t$EToint = dart.constFn(E[_eval]("core|int(0)")))();
    var __t$EAndintTovoid = () => (__t$EAndintTovoid = dart.constFn(E[_eval]("~(0,core|int)")))();
    var __t$EAndEToint = () => (__t$EAndEToint = dart.constFn(E[_eval]("core|int(0,0)")))();
    var __t$ListOfEN = () => (__t$ListOfEN = dart.constFn(E[_eval]("core|List<0?>")))();
    var __t$ListOfEN$ = () => (__t$ListOfEN$ = dart.constFn(core.List$(__t$EN())))();
    var __t$_UnorderedElementsIterableOfE = () => (__t$_UnorderedElementsIterableOfE = dart.constFn(priority_queue._UnorderedElementsIterable$(E)))();
    var __t$SplayTreeSetOfE = () => (__t$SplayTreeSetOfE = dart.constFn(collection.SplayTreeSet$(E)))();
    var __t$JSArrayOfE = () => (__t$JSArrayOfE = dart.constFn(_interceptors.JSArray$(E)))();
    class HeapPriorityQueue extends core.Object {
      get comparison() {
        return this[comparison$];
      }
      set comparison(value) {
        super.comparison = value;
      }
      static ['_#new#tearOff'](E, comparison = null) {
        return new (priority_queue.HeapPriorityQueue$(E)).new(comparison);
      }
      [_elementAt](index) {
        let t$360;
        t$360 = this[_queue$][$_get](index);
        return t$360 == null ? E[_as](null) : t$360;
      }
      add(element) {
        E[_as](element);
        this[_modificationCount] = this[_modificationCount] + 1;
        this[_add](element);
      }
      addAll(elements) {
        __t$IterableOfE()[_as](elements);
        let modified = 0;
        for (let element of elements) {
          modified = 1;
          this[_add](element);
        }
        this[_modificationCount] = this[_modificationCount] + modified;
      }
      clear() {
        this[_modificationCount] = this[_modificationCount] + 1;
        this[_queue$] = C[1] || CT.C1;
        this[_length] = 0;
      }
      contains(object) {
        E[_as](object);
        return this[_locate](object) >= 0;
      }
      get unorderedElements() {
        return new (__t$_UnorderedElementsIterableOfE()).new(this);
      }
      get first() {
        if (this[_length] === 0) dart.throw(new core.StateError.new("No element"));
        return this[_elementAt](0);
      }
      get isEmpty() {
        return this[_length] === 0;
      }
      get isNotEmpty() {
        return this[_length] !== 0;
      }
      get length() {
        return this[_length];
      }
      remove(element) {
        let t$361, t$360;
        E[_as](element);
        let index = this[_locate](element);
        if (index < 0) return false;
        this[_modificationCount] = this[_modificationCount] + 1;
        let last = this[_removeLast]();
        if (index < this[_length]) {
          let comp = (t$360 = last, t$361 = element, this.comparison(t$360, t$361));
          if (comp <= 0) {
            this[_bubbleUp](last, index);
          } else {
            this[_bubbleDown](last, index);
          }
        }
        return true;
      }
      removeAll() {
        this[_modificationCount] = this[_modificationCount] + 1;
        let result = this[_queue$];
        let length = this[_length];
        this[_queue$] = C[1] || CT.C1;
        this[_length] = 0;
        return result[$take](length)[$cast](E);
      }
      removeFirst() {
        if (this[_length] === 0) dart.throw(new core.StateError.new("No element"));
        this[_modificationCount] = this[_modificationCount] + 1;
        let result = this[_elementAt](0);
        let last = this[_removeLast]();
        if (this[_length] > 0) {
          this[_bubbleDown](last, 0);
        }
        return result;
      }
      toList() {
        let t$360;
        t$360 = this[_toUnorderedList]();
        return (() => {
          t$360[$sort](this.comparison);
          return t$360;
        })();
      }
      toSet() {
        let set = new (__t$SplayTreeSetOfE()).new(this.comparison);
        for (let i = 0; i < this[_length]; i = i + 1) {
          set.add(this[_elementAt](i));
        }
        return set;
      }
      toUnorderedList() {
        return this[_toUnorderedList]();
      }
      [_toUnorderedList]() {
        return (() => {
          let t$360 = __t$JSArrayOfE().of([]);
          for (let i = 0; i < this[_length]; i = i + 1)
            t$360.push(this[_elementAt](i));
          return t$360;
        })();
      }
      toString() {
        return dart.toString(this[_queue$][$take](this[_length]));
      }
      [_add](element) {
        let t$361;
        if (this[_length] === this[_queue$][$length]) this[_grow]();
        this[_bubbleUp](element, (t$361 = this[_length], this[_length] = t$361 + 1, t$361));
      }
      [_locate](object) {
        let t$362, t$361;
        if (this[_length] === 0) return -1;
        let position = 1;
        do {
          let index = position - 1;
          let element = this[_elementAt](index);
          let comp = (t$361 = element, t$362 = object, this.comparison(t$361, t$362));
          if (comp <= 0) {
            if (comp === 0 && dart.equals(element, object)) return index;
            let leftChildPosition = position * 2;
            if (leftChildPosition <= this[_length]) {
              position = leftChildPosition;
              continue;
            }
          }
          do {
            while (position[$isOdd]) {
              position = position[$rightShift](1);
            }
            position = position + 1;
          } while (position > this[_length]);
        } while (position !== 1);
        return -1;
      }
      [_removeLast]() {
        let newLength = this[_length] - 1;
        let last = this[_elementAt](newLength);
        this[_queue$][$_set](newLength, null);
        this[_length] = newLength;
        return last;
      }
      [_bubbleUp](element, index) {
        let t$362, t$361;
        while (index > 0) {
          let parentIndex = ((index - 1) / 2)[$truncate]();
          let parent = this[_elementAt](parentIndex);
          if ((t$361 = element, t$362 = parent, this.comparison(t$361, t$362)) > 0) break;
          this[_queue$][$_set](index, parent);
          index = parentIndex;
        }
        this[_queue$][$_set](index, element);
      }
      [_bubbleDown](element, index) {
        let t$362, t$361, t$362$, t$361$, t$362$0, t$361$0;
        let rightChildIndex = index * 2 + 2;
        while (rightChildIndex < this[_length]) {
          let leftChildIndex = rightChildIndex - 1;
          let leftChild = this[_elementAt](leftChildIndex);
          let rightChild = this[_elementAt](rightChildIndex);
          let comp = (t$361 = leftChild, t$362 = rightChild, this.comparison(t$361, t$362));
          let minChildIndex = null;
          let minChild = null;
          if (comp < 0) {
            minChild = leftChild;
            minChildIndex = leftChildIndex;
          } else {
            minChild = rightChild;
            minChildIndex = rightChildIndex;
          }
          comp = (t$361$ = element, t$362$ = minChild, this.comparison(t$361$, t$362$));
          if (comp <= 0) {
            this[_queue$][$_set](index, element);
            return;
          }
          this[_queue$][$_set](index, minChild);
          index = minChildIndex;
          rightChildIndex = index * 2 + 2;
        }
        let leftChildIndex = rightChildIndex - 1;
        if (leftChildIndex < this[_length]) {
          let child = this[_elementAt](leftChildIndex);
          let comp = (t$361$0 = element, t$362$0 = child, this.comparison(t$361$0, t$362$0));
          if (comp > 0) {
            this[_queue$][$_set](index, child);
            index = leftChildIndex;
          }
        }
        this[_queue$][$_set](index, element);
      }
      [_grow]() {
        let newCapacity = this[_queue$][$length] * 2 + 1;
        if (newCapacity < 7) newCapacity = 7;
        let newQueue = __t$ListOfEN$().filled(newCapacity, null);
        newQueue[$setRange](0, this[_length], this[_queue$]);
        this[_queue$] = newQueue;
      }
    }
    (HeapPriorityQueue.new = function(comparison = null) {
      let t$360;
      this[_queue$] = __t$ListOfEN$().filled(7, null);
      this[_length] = 0;
      this[_modificationCount] = 0;
      this[comparison$] = (t$360 = comparison, t$360 == null ? C[0] || CT.C0 : t$360);
      this.$ti = this.$ti || __t$HeapPriorityQueueOfE();
      ;
    }).prototype = HeapPriorityQueue.prototype;
    dart.addTypeTests(HeapPriorityQueue);
    HeapPriorityQueue.prototype[_is_HeapPriorityQueue_default] = true;
    dart.addRtiResources(HeapPriorityQueue, ["collection__src__priority_queue|HeapPriorityQueue", "collection__src__priority_queue|PriorityQueue"]);
    dart.addTypeCaches(HeapPriorityQueue);
    dart.setMethodSignature(HeapPriorityQueue, () => dart.global.Object.setPrototypeOf({
      [_elementAt]: __t$intToE(),
      add: T.ObjectNTovoid(),
      addAll: T.ObjectNTovoid(),
      clear: T.VoidTovoid(),
      contains: T.ObjectNTobool(),
      remove: T.ObjectNTobool(),
      removeAll: __t$VoidToIterableOfE(),
      removeFirst: __t$VoidToE(),
      toList: __t$VoidToListOfE(),
      toSet: __t$VoidToSetOfE(),
      toUnorderedList: __t$VoidToListOfE(),
      [_toUnorderedList]: __t$VoidToListOfE(),
      [_add]: __t$ETovoid(),
      [_locate]: __t$EToint(),
      [_removeLast]: __t$VoidToE(),
      [_bubbleUp]: __t$EAndintTovoid(),
      [_bubbleDown]: __t$EAndintTovoid(),
      [_grow]: T.VoidTovoid()
    }, dart.getMethods(dart.global.Object.getPrototypeOf(HeapPriorityQueue))));
    dart.setGetterSignature(HeapPriorityQueue, () => dart.global.Object.setPrototypeOf({
      unorderedElements: __t$IterableOfE(),
      first: E,
      isEmpty: T.bool(),
      isNotEmpty: T.bool(),
      length: T.int()
    }, dart.getGetters(dart.global.Object.getPrototypeOf(HeapPriorityQueue))));
    dart.setLibraryUri(HeapPriorityQueue, I[0]);
    dart.setFieldSignature(HeapPriorityQueue, () => dart.global.Object.setPrototypeOf({
      comparison: {type: __t$EAndEToint(), isConst: false, isFinal: true},
      [_queue$]: {type: __t$ListOfEN(), isConst: false, isFinal: false, libraryUri: I[1]},
      [_length]: {type: T.int(), isConst: false, isFinal: false, libraryUri: I[1]},
      [_modificationCount]: {type: T.int(), isConst: false, isFinal: false, libraryUri: I[1]}
    }, dart.getFields(dart.global.Object.getPrototypeOf(HeapPriorityQueue))));
    dart.setStaticFieldSignature(HeapPriorityQueue, () => ['_initialCapacity']);
    dart.defineExtensionMethods(HeapPriorityQueue, ['toString']);
    return HeapPriorityQueue;
  });
  priority_queue.HeapPriorityQueue = priority_queue.HeapPriorityQueue$();
  dart.defineLazy(priority_queue.HeapPriorityQueue, {
    /*priority_queue.HeapPriorityQueue._initialCapacity*/get _initialCapacity() {
      return 7;
    }
  }, false);
  dart.addTypeTests(priority_queue.HeapPriorityQueue, _is_HeapPriorityQueue_default);
  const _is__UnorderedElementsIterable_default = Symbol('_is__UnorderedElementsIterable_default');
  priority_queue._UnorderedElementsIterable$ = dart.generic(E => {
    var __t$_UnorderedElementsIterableOfE = () => (__t$_UnorderedElementsIterableOfE = dart.constFn(E[_eval]("collection__src__priority_queue|_UnorderedElementsIterable<0>")))();
    var __t$IteratorOfE = () => (__t$IteratorOfE = dart.constFn(E[_eval]("core|Iterator<0>")))();
    var __t$HeapPriorityQueueOfE = () => (__t$HeapPriorityQueueOfE = dart.constFn(E[_eval]("collection__src__priority_queue|HeapPriorityQueue<0>")))();
    var __t$_UnorderedElementsIteratorOfE = () => (__t$_UnorderedElementsIteratorOfE = dart.constFn(priority_queue._UnorderedElementsIterator$(E)))();
    class _UnorderedElementsIterable extends core.Iterable$(E) {
      static ['_#new#tearOff'](E, _queue) {
        return new (priority_queue._UnorderedElementsIterable$(E)).new(_queue);
      }
      get iterator() {
        return new (__t$_UnorderedElementsIteratorOfE()).new(this[_queue$]);
      }
    }
    (_UnorderedElementsIterable.new = function(_queue) {
      this[_queue$] = _queue;
      this.$ti = this.$ti || __t$_UnorderedElementsIterableOfE();
      dart.global.Object.getPrototypeOf(_UnorderedElementsIterable).new.call(this);
      ;
    }).prototype = _UnorderedElementsIterable.prototype;
    dart.addTypeTests(_UnorderedElementsIterable);
    _UnorderedElementsIterable.prototype[_is__UnorderedElementsIterable_default] = true;
    dart.addRtiResources(_UnorderedElementsIterable, ["collection__src__priority_queue|_UnorderedElementsIterable"]);
    dart.addTypeCaches(_UnorderedElementsIterable);
    dart.setGetterSignature(_UnorderedElementsIterable, () => dart.global.Object.setPrototypeOf({
      iterator: __t$IteratorOfE(),
      [$iterator]: __t$IteratorOfE()
    }, dart.getGetters(dart.global.Object.getPrototypeOf(_UnorderedElementsIterable))));
    dart.setLibraryUri(_UnorderedElementsIterable, I[0]);
    dart.setFieldSignature(_UnorderedElementsIterable, () => dart.global.Object.setPrototypeOf({[_queue$]: {type: __t$HeapPriorityQueueOfE(), isConst: false, isFinal: true, libraryUri: I[0]}}, dart.getFields(dart.global.Object.getPrototypeOf(_UnorderedElementsIterable))));
    dart.defineExtensionAccessors(_UnorderedElementsIterable, ['iterator']);
    return _UnorderedElementsIterable;
  });
  priority_queue._UnorderedElementsIterable = priority_queue._UnorderedElementsIterable$();
  dart.addTypeTests(priority_queue._UnorderedElementsIterable, _is__UnorderedElementsIterable_default);
  var _current = dart.privateName(priority_queue, "_current");
  var _index = dart.privateName(priority_queue, "_index");
  var _initialModificationCount = dart.privateName(priority_queue, "_initialModificationCount");
  const _is__UnorderedElementsIterator_default = Symbol('_is__UnorderedElementsIterator_default');
  priority_queue._UnorderedElementsIterator$ = dart.generic(E => {
    var __t$_UnorderedElementsIteratorOfE = () => (__t$_UnorderedElementsIteratorOfE = dart.constFn(E[_eval]("collection__src__priority_queue|_UnorderedElementsIterator<0>")))();
    var __t$HeapPriorityQueueOfE = () => (__t$HeapPriorityQueueOfE = dart.constFn(E[_eval]("collection__src__priority_queue|HeapPriorityQueue<0>")))();
    var __t$EN = () => (__t$EN = dart.constFn(E[_eval]("0?")))();
    class _UnorderedElementsIterator extends core.Object {
      static ['_#new#tearOff'](E, _queue) {
        return new (priority_queue._UnorderedElementsIterator$(E)).new(_queue);
      }
      moveNext() {
        if (this[_initialModificationCount] !== this[_queue$][_modificationCount]) {
          dart.throw(new core.ConcurrentModificationError.new(this[_queue$]));
        }
        let nextIndex = this[_index] + 1;
        if (0 <= nextIndex && nextIndex < this[_queue$].length) {
          this[_current] = this[_queue$][_queue$][$_get](nextIndex);
          this[_index] = nextIndex;
          return true;
        }
        this[_current] = null;
        this[_index] = -2;
        return false;
      }
      get current() {
        let t$361;
        return this[_index] < 0 ? dart.throw(new core.StateError.new("No element")) : (t$361 = this[_current], t$361 == null ? E[_as](null) : t$361);
      }
    }
    (_UnorderedElementsIterator.new = function(_queue) {
      this[_current] = null;
      this[_index] = -1;
      this[_queue$] = _queue;
      this[_initialModificationCount] = _queue[_modificationCount];
      this.$ti = this.$ti || __t$_UnorderedElementsIteratorOfE();
      ;
    }).prototype = _UnorderedElementsIterator.prototype;
    dart.addTypeTests(_UnorderedElementsIterator);
    _UnorderedElementsIterator.prototype[_is__UnorderedElementsIterator_default] = true;
    dart.addRtiResources(_UnorderedElementsIterator, ["collection__src__priority_queue|_UnorderedElementsIterator", "core|Iterator"]);
    dart.addTypeCaches(_UnorderedElementsIterator);
    dart.setMethodSignature(_UnorderedElementsIterator, () => dart.global.Object.setPrototypeOf({moveNext: T.VoidTobool()}, dart.getMethods(dart.global.Object.getPrototypeOf(_UnorderedElementsIterator))));
    dart.setGetterSignature(_UnorderedElementsIterator, () => dart.global.Object.setPrototypeOf({current: E}, dart.getGetters(dart.global.Object.getPrototypeOf(_UnorderedElementsIterator))));
    dart.setLibraryUri(_UnorderedElementsIterator, I[0]);
    dart.setFieldSignature(_UnorderedElementsIterator, () => dart.global.Object.setPrototypeOf({
      [_queue$]: {type: __t$HeapPriorityQueueOfE(), isConst: false, isFinal: true, libraryUri: I[0]},
      [_initialModificationCount]: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
      [_current]: {type: __t$EN(), isConst: false, isFinal: false},
      [_index]: {type: T.int(), isConst: false, isFinal: false, libraryUri: I[1]}
    }, dart.getFields(dart.global.Object.getPrototypeOf(_UnorderedElementsIterator))));
    return _UnorderedElementsIterator;
  });
  priority_queue._UnorderedElementsIterator = priority_queue._UnorderedElementsIterator$();
  dart.addTypeTests(priority_queue._UnorderedElementsIterator, _is__UnorderedElementsIterator_default);
  dart.moduleConstCaches.set("packages/collection/src/priority_queue.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"collection__src__priority_queue|PriorityQueue":{"PriorityQueue.E":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"collection__src__priority_queue|HeapPriorityQueue":{"HeapPriorityQueue.E":"1","PriorityQueue.E":"1","collection__src__priority_queue|PriorityQueue":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__priority_queue|_UnorderedElementsIterable":{"_UnorderedElementsIterable.E":"1","Iterable.E":"1","core|Iterable":["1"]},"core|Iterator":{"Iterator.E":"1"},"collection__src__priority_queue|_UnorderedElementsIterator":{"_UnorderedElementsIterator.E":"1","Iterator.E":"1","core|Iterator":["1"]}}'));
  dart.trackLibraries("packages/collection/src/priority_queue.dart", {
    "package:collection/src/priority_queue.dart": priority_queue
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["priority_queue.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../F:/packages/collection/src/priority_queue.dart.lib.js"}');
  // Exports:
  return {
    src__priority_queue: priority_queue
  };
}));

//# sourceMappingURL=priority_queue.dart.lib.js.map

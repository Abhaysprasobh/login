// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/services/process_text.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart'], (function load__packages__flutter__src__services__process_text_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  var process_text = Object.create(dart.library);
  var $keys = dartx.keys;
  var $_get = dartx._get;
  var $add = dartx.add;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    ProcessTextAction: () => (T.ProcessTextAction = dart.constFn(dart_rti.findType("flutter__src__services__process_text|ProcessTextAction")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))(),
    dynamic: () => (T.dynamic = dart.constFn(dart_rti.findType("@")))(),
    MapOfObjectN$ObjectN: () => (T.MapOfObjectN$ObjectN = dart.constFn(dart_rti.findType("core|Map<core|Object?,core|Object?>")))(),
    Object: () => (T.Object = dart.constFn(dart_rti.findType("core|Object")))(),
    ListOfProcessTextAction: () => (T.ListOfProcessTextAction = dart.constFn(dart_rti.findType("core|List<flutter__src__services__process_text|ProcessTextAction>")))(),
    StringN: () => (T.StringN = dart.constFn(dart_rti.findType("core|String?")))(),
    MethodChannel: () => (T.MethodChannel = dart.constFn(dart_rti.findType("flutter__src__services__platform_channel|MethodChannel")))(),
    MethodChannelTovoid: () => (T.MethodChannelTovoid = dart.constFn(dart_rti.findType("~(flutter__src__services__platform_channel|MethodChannel)")))(),
    VoidToFutureOfListOfProcessTextAction: () => (T.VoidToFutureOfListOfProcessTextAction = dart.constFn(dart_rti.findType("async|Future<core|List<flutter__src__services__process_text|ProcessTextAction>>()")))(),
    StringAndStringAndboolToFutureOfStringN: () => (T.StringAndStringAndboolToFutureOfStringN = dart.constFn(dart_rti.findType("async|Future<core|String?>(core|String,core|String,core|bool)")))(),
    MethodChannelN: () => (T.MethodChannelN = dart.constFn(dart_rti.findType("flutter__src__services__platform_channel|MethodChannel?")))()
  };
  var G = {
    JSArrayOfProcessTextAction: () => (G.JSArrayOfProcessTextAction = dart.constFn(_interceptors.JSArray$(T.ProcessTextAction())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:flutter/src/services/process_text.dart",
    "dart:core",
    "file:///C:/src/flutter/packages/flutter/lib/src/services/process_text.dart",
    "package:flutter/src/services/platform_channel.dart"
  ];
  var id$ = dart.privateName(process_text, "ProcessTextAction.id");
  var label$ = dart.privateName(process_text, "ProcessTextAction.label");
  var _is = dart.privateName(dart_rti, "_is");
  process_text.ProcessTextAction = class ProcessTextAction extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    static ['_#new#tearOff'](id, label) {
      return new process_text.ProcessTextAction.new(id, label);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return T.ProcessTextAction()[_is](other) && other.id === this.id && other.label === this.label;
    }
    get hashCode() {
      return core.Object.hash(this.id, this.label);
    }
  };
  (process_text.ProcessTextAction.new = function(id, label) {
    this[id$] = id;
    this[label$] = label;
    ;
  }).prototype = process_text.ProcessTextAction.prototype;
  dart.addTypeTests(process_text.ProcessTextAction);
  dart.addRtiResources(process_text.ProcessTextAction, ["flutter__src__services__process_text|ProcessTextAction"]);
  dart.addTypeCaches(process_text.ProcessTextAction);
  dart.setLibraryUri(process_text.ProcessTextAction, I[0]);
  dart.setFieldSignature(process_text.ProcessTextAction, () => dart.global.Object.setPrototypeOf({
    id: {type: T.String(), isConst: false, isFinal: true, libraryUri: I[1]},
    label: {type: T.String(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(process_text.ProcessTextAction))));
  dart.defineExtensionMethods(process_text.ProcessTextAction, ['_equals']);
  dart.defineExtensionAccessors(process_text.ProcessTextAction, ['hashCode']);
  process_text.ProcessTextService = class ProcessTextService extends core.Object {};
  (process_text.ProcessTextService.new = function() {
    ;
  }).prototype = process_text.ProcessTextService.prototype;
  dart.addTypeTests(process_text.ProcessTextService);
  dart.addRtiResources(process_text.ProcessTextService, ["flutter__src__services__process_text|ProcessTextService"]);
  dart.addTypeCaches(process_text.ProcessTextService);
  dart.setLibraryUri(process_text.ProcessTextService, I[0]);
  var __DefaultProcessTextService__processTextChannel = dart.privateName(process_text, "_#DefaultProcessTextService#_processTextChannel");
  var _processTextChannel = dart.privateName(process_text, "_processTextChannel");
  var _as = dart.privateName(dart_rti, "_as");
  process_text.DefaultProcessTextService = class DefaultProcessTextService extends core.Object {
    static ['_#new#tearOff']() {
      return new process_text.DefaultProcessTextService.new();
    }
    get [_processTextChannel]() {
      let t$360;
      t$360 = this[__DefaultProcessTextService__processTextChannel];
      return t$360 == null ? dart.throw(new _internal.LateError.fieldNI("_processTextChannel")) : t$360;
    }
    set [_processTextChannel](_processTextChannel$35param) {
      this[__DefaultProcessTextService__processTextChannel] = _processTextChannel$35param;
    }
    setChannel(newChannel) {
      if (!dart.fn(() => {
        this[_processTextChannel] = newChannel;
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[2], 108, 12, "() {\r\n      _processTextChannel = newChannel;\r\n      return true;\r\n    }()");
    }
    queryTextActions() {
      return async.async(T.ListOfProcessTextAction(), (function* queryTextActions() {
        let textActions = G.JSArrayOfProcessTextAction().of([]);
        let rawResults = null;
        try {
          rawResults = T.MapOfObjectN$ObjectN()[_as](yield this[_processTextChannel].invokeMethod(T.dynamic(), "ProcessText.queryTextActions"));
        } catch (t$36$35e) {
          let e = dart.getThrown(t$36$35e);
          if (T.Object()[_is](e)) {
            return textActions;
          } else
            throw t$36$35e;
        }
        for (let id of rawResults[$keys]) {
          textActions[$add](new process_text.ProcessTextAction.new(T.String()[_as](dart.nullCheck(id)), T.String()[_as](dart.nullCheck(rawResults[$_get](id)))));
        }
        return textActions;
      }).bind(this));
    }
    processTextAction(id, text, readOnly) {
      return async.async(T.StringN(), (function* processTextAction() {
        let processedText = T.StringN()[_as](yield this[_processTextChannel].invokeMethod(T.dynamic(), "ProcessText.processTextAction", [id, text, readOnly]));
        return processedText;
      }).bind(this));
    }
  };
  (process_text.DefaultProcessTextService.new = function() {
    this[__DefaultProcessTextService__processTextChannel] = null;
    this[_processTextChannel] = system_channels.SystemChannels.processText;
  }).prototype = process_text.DefaultProcessTextService.prototype;
  dart.addTypeTests(process_text.DefaultProcessTextService);
  dart.addRtiResources(process_text.DefaultProcessTextService, ["flutter__src__services__process_text|DefaultProcessTextService", "flutter__src__services__process_text|ProcessTextService"]);
  dart.addTypeCaches(process_text.DefaultProcessTextService);
  dart.setMethodSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({
    setChannel: T.MethodChannelTovoid(),
    queryTextActions: T.VoidToFutureOfListOfProcessTextAction(),
    processTextAction: T.StringAndStringAndboolToFutureOfStringN()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setGetterSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({[_processTextChannel]: T.MethodChannel()}, dart.getGetters(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setSetterSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({[_processTextChannel]: T.MethodChannel()}, dart.getSetters(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart.setLibraryUri(process_text.DefaultProcessTextService, I[0]);
  dart.setFieldSignature(process_text.DefaultProcessTextService, () => dart.global.Object.setPrototypeOf({[__DefaultProcessTextService__processTextChannel]: {type: T.MethodChannelN(), isConst: false, isFinal: false, libraryUri: I[3]}}, dart.getFields(dart.global.Object.getPrototypeOf(process_text.DefaultProcessTextService))));
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|Map":{"Map.K":"1","Map.V":"2"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"async|Future":{"Future.T":"1"},"flutter__src__services__process_text|DefaultProcessTextService":{"flutter__src__services__process_text|ProcessTextService":[]}}'));
  dart.trackLibraries("packages/flutter/src/services/process_text.dart", {
    "package:flutter/src/services/process_text.dart": process_text
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["process_text.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAee;;;;;;IAGA;;;;;;;;;YAGW;;AACtB,UAAI,AAAU,SAAM,KAAK;AACvB,cAAO;;AAGT,YAAa,AACI,4BADV,KAAK,KACV,AAAM,AAAG,KAAJ,QAAO,WACZ,AAAM,AAAM,KAAP,WAAU;IACnB;;AAGoB,YAAO,kBAAK,SAAI;IAAM;;iDApBb,IAAS;IAAT;IAAS;;EAAM;;;;;;;;;;;;;;EA2C9C;;;;;;;;;;;;;;AA4CqB;;IAAmB;8BAAnB;;IAAmB;eAOR;AAC5B,WAAO,AAGN;AAFC,oCAAsB,UAAU;AAChC,cAAO;;IAEX;;AAGgD;AAChB,0BAAiC;AAClC;AAE7B;AACE,uBAEE,8BAFW,MAAM,AAAoB,oDACrC;;cAEK;AAAP;AACA,kBAAO,YAAW;;;;AAGpB,iBAAmB,KAAM,AAAW,WAAD;AACrB,UAAZ,WAAW,OAAK,uCAAsB,gBAAF,eAAF,EAAE,IAA6B,gBAAF,eAAd,AAAU,UAAA,QAAC,EAAE;;AAGhE,cAAO,YAAW;MACpB;;sBAKyC,IAAW,MAAW;AAA9B;AACjB,4BAGZ,iBAH4B,MAAM,AAAoB,oDACtD,iCACS,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ;AAG9B,cAAO,cAAa;MACtB;;;;4DA5CmB;AAJjB,gCAAqC;EACvC","file":"../../../../../../../../F:/packages/flutter/src/services/process_text.dart.lib.js"}');
  // Exports:
  return {
    src__services__process_text: process_text
  };
}));

//# sourceMappingURL=process_text.dart.lib.js.map

// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/material_color_utilities/quantize/quantizer_celebi.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/quantize/quantizer_wu.dart', 'packages/material_color_utilities/quantize/quantizer_wsmeans.dart', 'packages/material_color_utilities/quantize/src/point_provider_lab.dart'], (function load__packages__material_color_utilities__quantize__quantizer_celebi_dart(dart_sdk, packages__material_color_utilities__quantize__quantizer_wu$46dart, packages__material_color_utilities__quantize__quantizer_wsmeans$46dart, packages__material_color_utilities__quantize__src__point_provider_lab$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const quantizer_wu = packages__material_color_utilities__quantize__quantizer_wu$46dart.quantize__quantizer_wu;
  const quantizer_wsmeans = packages__material_color_utilities__quantize__quantizer_wsmeans$46dart.quantize__quantizer_wsmeans;
  const point_provider_lab = packages__material_color_utilities__quantize__src__point_provider_lab$46dart.quantize__src__point_provider_lab;
  var quantizer_celebi = Object.create(dart.library);
  var $keys = dartx.keys;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    QuantizerResult: () => (T.QuantizerResult = dart.constFn(dart_rti.findType("material_color_utilities__quantize__quantizer|QuantizerResult")))(),
    IterableOfintAndint__ToFutureOfQuantizerResult: () => (T.IterableOfintAndint__ToFutureOfQuantizerResult = dart.constFn(dart_rti.findType("async|Future<material_color_utilities__quantize__quantizer|QuantizerResult>(core|Iterable<core|int>,core|int{returnInputPixelToClusterPixel:core|bool})")))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:material_color_utilities/quantize/quantizer_celebi.dart"];
  quantizer_celebi.QuantizerCelebi = class QuantizerCelebi extends core.Object {
    quantize(pixels, maxColors, opts) {
      let returnInputPixelToClusterPixel = opts && 'returnInputPixelToClusterPixel' in opts ? opts.returnInputPixelToClusterPixel : false;
      return async.async(T.QuantizerResult(), function* quantize() {
        let wu = new quantizer_wu.QuantizerWu.new();
        let wuResult = (yield wu.quantize(pixels, maxColors));
        let wsmeansResult = quantizer_wsmeans.QuantizerWsmeans.quantize(pixels, maxColors, {startingClusters: wuResult.colorToCount[$keys][$toList](), pointProvider: new point_provider_lab.PointProviderLab.new(), returnInputPixelToClusterPixel: returnInputPixelToClusterPixel});
        return wsmeansResult;
      });
    }
    static ['_#new#tearOff']() {
      return new quantizer_celebi.QuantizerCelebi.new();
    }
  };
  (quantizer_celebi.QuantizerCelebi.new = function() {
    ;
  }).prototype = quantizer_celebi.QuantizerCelebi.prototype;
  dart.addTypeTests(quantizer_celebi.QuantizerCelebi);
  dart.addRtiResources(quantizer_celebi.QuantizerCelebi, ["material_color_utilities__quantize__quantizer_celebi|QuantizerCelebi", "material_color_utilities__quantize__quantizer|Quantizer"]);
  dart.addTypeCaches(quantizer_celebi.QuantizerCelebi);
  dart.setMethodSignature(quantizer_celebi.QuantizerCelebi, () => dart.global.Object.setPrototypeOf({quantize: T.IterableOfintAndint__ToFutureOfQuantizerResult()}, dart.getMethods(dart.global.Object.getPrototypeOf(quantizer_celebi.QuantizerCelebi))));
  dart.setLibraryUri(quantizer_celebi.QuantizerCelebi, I[0]);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"async|Future":{"Future.T":"1"},"core|Iterable":{"Iterable.E":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"material_color_utilities__quantize__quantizer_celebi|QuantizerCelebi":{"material_color_utilities__quantize__quantizer|Quantizer":[]}}'));
  dart.trackLibraries("packages/material_color_utilities/quantize/quantizer_celebi.dart", {
    "package:material_color_utilities/quantize/quantizer_celebi.dart": quantizer_celebi
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["quantizer_celebi.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;aAqBiD,QAAY;UACjD;AADsB;AAExB,iBAAK;AACL,wBAAW,MAAM,AAAG,EAAD,UAAU,MAAM,EAAE,SAAS;AAC9C,4BAAiC,4CAAS,MAAM,EAAE,SAAS,qBAC3C,AAAS,AAAa,AAAK,QAAnB,gDACX,+EACiB,8BAA8B;AAClE,cAAO,cAAa;MACtB;;;;;;;;EACF","file":"../../../../../../../../../../../../F:/packages/material_color_utilities/quantize/quantizer_celebi.dart.lib.js"}');
  // Exports:
  return {
    quantize__quantizer_celebi: quantizer_celebi
  };
}));

//# sourceMappingURL=quantizer_celebi.dart.lib.js.map

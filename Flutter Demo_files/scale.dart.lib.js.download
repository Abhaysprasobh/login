// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/gestures/scale.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/gestures/velocity_tracker.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/gestures/arena.dart'], (function load__packages__flutter__src__gestures__scale_dart(dart_sdk, packages__flutter__src__gestures__velocity_tracker$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__gestures__arena$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const velocity_tracker = packages__flutter__src__gestures__velocity_tracker$46dart.src__gestures__velocity_tracker;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const arena = packages__flutter__src__gestures__arena$46dart.src__gestures__arena;
  var scale$ = Object.create(dart.library);
  var $length = dartx.length;
  var $values = dartx.values;
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $add = dartx.add;
  var $remove = dartx.remove;
  var $keys = dartx.keys;
  var $toDouble = dartx.toDouble;
  var $abs = dartx.abs;
  var $isEmpty = dartx.isEmpty;
  var $map = dartx.map;
  var $reduce = dartx.reduce;
  var $clear = dartx.clear;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOf_ScaleState: () => (T.ListOf_ScaleState = dart.constFn(dart_rti.findType("core|List<flutter__src__gestures__scale|_ScaleState>")))(),
    _ScaleState: () => (T._ScaleState = dart.constFn(dart_rti.findType("flutter__src__gestures__scale|_ScaleState")))(),
    Offset: () => (T.Offset = dart.constFn(dart_rti.findType("ui|Offset")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    ScaleGestureRecognizer: () => (T.ScaleGestureRecognizer = dart.constFn(dart_rti.findType("flutter__src__gestures__scale|ScaleGestureRecognizer")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    DurationN: () => (T.DurationN = dart.constFn(dart_rti.findType("core|Duration?")))(),
    Velocity: () => (T.Velocity = dart.constFn(dart_rti.findType("flutter__src__gestures__velocity_tracker|Velocity")))(),
    VelocityTracker: () => (T.VelocityTracker = dart.constFn(dart_rti.findType("flutter__src__gestures__velocity_tracker|VelocityTracker")))(),
    _PointerPanZoomData: () => (T._PointerPanZoomData = dart.constFn(dart_rti.findType("flutter__src__gestures__scale|_PointerPanZoomData")))(),
    PointerMoveEvent: () => (T.PointerMoveEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerMoveEvent")))(),
    PointerDownEvent: () => (T.PointerDownEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerDownEvent")))(),
    PointerUpEvent: () => (T.PointerUpEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerUpEvent")))(),
    PointerCancelEvent: () => (T.PointerCancelEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerCancelEvent")))(),
    PointerPanZoomStartEvent: () => (T.PointerPanZoomStartEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomStartEvent")))(),
    PointerPanZoomUpdateEvent: () => (T.PointerPanZoomUpdateEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomUpdateEvent")))(),
    PointerPanZoomEndEvent: () => (T.PointerPanZoomEndEvent = dart.constFn(dart_rti.findType("flutter__src__gestures__events|PointerPanZoomEndEvent")))(),
    _PointerPanZoomDataTodouble: () => (T._PointerPanZoomDataTodouble = dart.constFn(dart_rti.findType("core|double(flutter__src__gestures__scale|_PointerPanZoomData)")))(),
    doubleAnddoubleTodouble: () => (T.doubleAnddoubleTodouble = dart.constFn(dart_rti.findType("core|double(core|double,core|double)")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti.findType("~()")))(),
    VoidTodouble: () => (T.VoidTodouble = dart.constFn(dart_rti.findType("core|double()")))(),
    PointerEventTovoid: () => (T.PointerEventTovoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__events|PointerEvent)")))(),
    intTobool: () => (T.intTobool = dart.constFn(dart_rti.findType("core|bool(core|int)")))(),
    boolAndPointerEventTovoid: () => (T.boolAndPointerEventTovoid = dart.constFn(dart_rti.findType("~(core|bool,flutter__src__gestures__events|PointerEvent)")))(),
    intTovoid: () => (T.intTovoid = dart.constFn(dart_rti.findType("~(core|int)")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    DragStartBehavior: () => (T.DragStartBehavior = dart.constFn(dart_rti.findType("flutter__src__gestures__recognizer|DragStartBehavior")))(),
    ScaleStartDetailsToNvoid: () => (T.ScaleStartDetailsToNvoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__scale|ScaleStartDetails)?")))(),
    ScaleUpdateDetailsToNvoid: () => (T.ScaleUpdateDetailsToNvoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__scale|ScaleUpdateDetails)?")))(),
    ScaleEndDetailsToNvoid: () => (T.ScaleEndDetailsToNvoid = dart.constFn(dart_rti.findType("~(flutter__src__gestures__scale|ScaleEndDetails)?")))(),
    Matrix4N: () => (T.Matrix4N = dart.constFn(dart_rti.findType("vector_math__vector_math_64|Matrix4?")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    OffsetN: () => (T.OffsetN = dart.constFn(dart_rti.findType("ui|Offset?")))(),
    doubleN: () => (T.doubleN = dart.constFn(dart_rti.findType("core|double?")))(),
    _LineBetweenPointersN: () => (T._LineBetweenPointersN = dart.constFn(dart_rti.findType("flutter__src__gestures__scale|_LineBetweenPointers?")))(),
    MapOfint$Offset: () => (T.MapOfint$Offset = dart.constFn(dart_rti.findType("core|Map<core|int,ui|Offset>")))(),
    ListOfint: () => (T.ListOfint = dart.constFn(dart_rti.findType("core|List<core|int>")))(),
    MapOfint$VelocityTracker: () => (T.MapOfint$VelocityTracker = dart.constFn(dart_rti.findType("core|Map<core|int,flutter__src__gestures__velocity_tracker|VelocityTracker>")))(),
    VelocityTrackerN: () => (T.VelocityTrackerN = dart.constFn(dart_rti.findType("flutter__src__gestures__velocity_tracker|VelocityTracker?")))(),
    MapOfint$_PointerPanZoomData: () => (T.MapOfint$_PointerPanZoomData = dart.constFn(dart_rti.findType("core|Map<core|int,flutter__src__gestures__scale|_PointerPanZoomData>")))()
  };
  var G = {
    IdentityMapOfint$Offset: () => (G.IdentityMapOfint$Offset = dart.constFn(_js_helper.IdentityMap$(T.int(), T.Offset())))(),
    JSArrayOfint: () => (G.JSArrayOfint = dart.constFn(_interceptors.JSArray$(T.int())))(),
    IdentityMapOfint$VelocityTracker: () => (G.IdentityMapOfint$VelocityTracker = dart.constFn(_js_helper.IdentityMap$(T.int(), T.VelocityTracker())))(),
    IdentityMapOfint$_PointerPanZoomData: () => (G.IdentityMapOfint$_PointerPanZoomData = dart.constFn(_js_helper.IdentityMap$(T.int(), T._PointerPanZoomData())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "ready",
        [_Enum_index]: 0
      }, scale$._ScaleState.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "possible",
        [_Enum_index]: 1
      }, scale$._ScaleState.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "accepted",
        [_Enum_index]: 2
      }, scale$._ScaleState.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "started",
        [_Enum_index]: 3
      }, scale$._ScaleState.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T._ScaleState());
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      }, ui.Offset.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [Velocity_pixelsPerSecond]: C[5] || CT.C5
      }, velocity_tracker.Velocity.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "down",
        [_Enum_index]: 0
      }, recognizer.DragStartBehavior.prototype));
    },
    get C8() {
      return C[8] = dart.const(Object.setPrototypeOf({
        [OffsetBase__dy]: -0.005,
        [OffsetBase__dx]: 0
      }, ui.Offset.prototype));
    }
  }, false);
  var C = Array(9).fill(void 0);
  var I = [
    "package:flutter/src/gestures/scale.dart",
    "dart:core",
    "dart:ui",
    "file:///C:/src/flutter/packages/flutter/lib/src/gestures/scale.dart",
    "package:flutter/src/gestures/velocity_tracker.dart",
    "package:flutter/src/gestures/recognizer.dart",
    "package:vector_math/vector_math_64.dart"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  scale$._ScaleState = class _ScaleState extends core._Enum {
    [_enumToString]() {
      return "_ScaleState." + this[_name];
    }
  };
  (scale$._ScaleState.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(scale$._ScaleState).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = scale$._ScaleState.prototype;
  dart.addTypeTests(scale$._ScaleState);
  dart.addRtiResources(scale$._ScaleState, ["flutter__src__gestures__scale|_ScaleState"]);
  dart.addTypeCaches(scale$._ScaleState);
  dart.setMethodSignature(scale$._ScaleState, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(scale$._ScaleState))));
  dart.setLibraryUri(scale$._ScaleState, I[0]);
  dart.setStaticFieldSignature(scale$._ScaleState, () => ['values', 'ready', 'possible', 'accepted', 'started']);
  dart.defineLazy(scale$._ScaleState, {
    /*scale$._ScaleState.values*/get values() {
      return C[0] || CT.C0;
    },
    /*scale$._ScaleState.ready*/get ready() {
      return C[1] || CT.C1;
    },
    /*scale$._ScaleState.possible*/get possible() {
      return C[2] || CT.C2;
    },
    /*scale$._ScaleState.accepted*/get accepted() {
      return C[3] || CT.C3;
    },
    /*scale$._ScaleState.started*/get started() {
      return C[4] || CT.C4;
    }
  }, false);
  var _position = dart.privateName(scale$, "_position");
  var _pan = dart.privateName(scale$, "_pan");
  var _scale = dart.privateName(scale$, "_scale");
  var _rotation = dart.privateName(scale$, "_rotation");
  scale$._PointerPanZoomData = class _PointerPanZoomData extends core.Object {
    static ['_#fromStartEvent#tearOff'](parent, event) {
      return new scale$._PointerPanZoomData.fromStartEvent(parent, event);
    }
    static ['_#fromUpdateEvent#tearOff'](parent, event) {
      return new scale$._PointerPanZoomData.fromUpdateEvent(parent, event);
    }
    get focalPoint() {
      if (this.parent.trackpadScrollCausesScale) {
        return this[_position];
      }
      return this[_position]['+'](this[_pan]);
    }
    get scale() {
      if (this.parent.trackpadScrollCausesScale) {
        return this[_scale] * math.exp(this[_pan].dx * this.parent.trackpadScrollToScaleFactor.dx + this[_pan].dy * this.parent.trackpadScrollToScaleFactor.dy);
      }
      return this[_scale];
    }
    get rotation() {
      return this[_rotation];
    }
    toString() {
      return "_PointerPanZoomData(parent: " + dart.str(this.parent) + ", _position: " + dart.str(this[_position]) + ", _pan: " + dart.str(this[_pan]) + ", _scale: " + dart.strSafe(this[_scale]) + ", _rotation: " + dart.strSafe(this[_rotation]) + ")";
    }
  };
  (scale$._PointerPanZoomData.fromStartEvent = function(parent, event) {
    this.parent = parent;
    this[_position] = event.position;
    this[_pan] = ui.Offset.zero;
    this[_scale] = 1.0;
    this[_rotation] = 0.0;
    ;
  }).prototype = scale$._PointerPanZoomData.prototype;
  (scale$._PointerPanZoomData.fromUpdateEvent = function(parent, event) {
    this.parent = parent;
    this[_position] = event.position;
    this[_pan] = event.pan;
    this[_scale] = event.scale;
    this[_rotation] = event.rotation;
    ;
  }).prototype = scale$._PointerPanZoomData.prototype;
  dart.addTypeTests(scale$._PointerPanZoomData);
  dart.addRtiResources(scale$._PointerPanZoomData, ["flutter__src__gestures__scale|_PointerPanZoomData"]);
  dart.addTypeCaches(scale$._PointerPanZoomData);
  dart.setGetterSignature(scale$._PointerPanZoomData, () => dart.global.Object.setPrototypeOf({
    focalPoint: T.Offset(),
    scale: T.double(),
    rotation: T.double()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(scale$._PointerPanZoomData))));
  dart.setLibraryUri(scale$._PointerPanZoomData, I[0]);
  dart.setFieldSignature(scale$._PointerPanZoomData, () => dart.global.Object.setPrototypeOf({
    parent: {type: T.ScaleGestureRecognizer(), isConst: false, isFinal: true, libraryUri: I[0]},
    [_position]: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    [_pan]: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    [_scale]: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_rotation]: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$._PointerPanZoomData))));
  dart.defineExtensionMethods(scale$._PointerPanZoomData, ['toString']);
  var focalPoint$ = dart.privateName(scale$, "ScaleStartDetails.focalPoint");
  var localFocalPoint$ = dart.privateName(scale$, "ScaleStartDetails.localFocalPoint");
  var pointerCount$ = dart.privateName(scale$, "ScaleStartDetails.pointerCount");
  var sourceTimeStamp$ = dart.privateName(scale$, "ScaleStartDetails.sourceTimeStamp");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  scale$.ScaleStartDetails = class ScaleStartDetails extends core.Object {
    get focalPoint() {
      return this[focalPoint$];
    }
    set focalPoint(value) {
      super.focalPoint = value;
    }
    get localFocalPoint() {
      return this[localFocalPoint$];
    }
    set localFocalPoint(value) {
      super.localFocalPoint = value;
    }
    get pointerCount() {
      return this[pointerCount$];
    }
    set pointerCount(value) {
      super.pointerCount = value;
    }
    get sourceTimeStamp() {
      return this[sourceTimeStamp$];
    }
    set sourceTimeStamp(value) {
      super.sourceTimeStamp = value;
    }
    static ['_#new#tearOff'](opts) {
      let focalPoint = opts && 'focalPoint' in opts ? opts.focalPoint : C[5] || CT.C5;
      let localFocalPoint = opts && 'localFocalPoint' in opts ? opts.localFocalPoint : null;
      let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
      let sourceTimeStamp = opts && 'sourceTimeStamp' in opts ? opts.sourceTimeStamp : null;
      return new scale$.ScaleStartDetails.new({focalPoint: focalPoint, localFocalPoint: localFocalPoint, pointerCount: pointerCount, sourceTimeStamp: sourceTimeStamp});
    }
    toString() {
      return "ScaleStartDetails(focalPoint: " + dart.str(this.focalPoint) + ", localFocalPoint: " + dart.str(this.localFocalPoint) + ", pointersCount: " + dart.strSafe(this.pointerCount) + ")";
    }
  };
  (scale$.ScaleStartDetails.new = function(opts) {
    let t$362;
    let focalPoint = opts && 'focalPoint' in opts ? opts.focalPoint : C[5] || CT.C5;
    let localFocalPoint = opts && 'localFocalPoint' in opts ? opts.localFocalPoint : null;
    let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
    let sourceTimeStamp = opts && 'sourceTimeStamp' in opts ? opts.sourceTimeStamp : null;
    this[focalPoint$] = focalPoint;
    this[pointerCount$] = pointerCount;
    this[sourceTimeStamp$] = sourceTimeStamp;
    this[localFocalPoint$] = (t$362 = localFocalPoint, t$362 == null ? focalPoint : t$362);
    ;
  }).prototype = scale$.ScaleStartDetails.prototype;
  dart.addTypeTests(scale$.ScaleStartDetails);
  dart.addRtiResources(scale$.ScaleStartDetails, ["flutter__src__gestures__scale|ScaleStartDetails"]);
  dart.addTypeCaches(scale$.ScaleStartDetails);
  dart.setLibraryUri(scale$.ScaleStartDetails, I[0]);
  dart.setFieldSignature(scale$.ScaleStartDetails, () => dart.global.Object.setPrototypeOf({
    focalPoint: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    localFocalPoint: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerCount: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    sourceTimeStamp: {type: T.DurationN(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$.ScaleStartDetails))));
  dart.defineExtensionMethods(scale$.ScaleStartDetails, ['toString']);
  var focalPointDelta$ = dart.privateName(scale$, "ScaleUpdateDetails.focalPointDelta");
  var focalPoint$0 = dart.privateName(scale$, "ScaleUpdateDetails.focalPoint");
  var localFocalPoint$0 = dart.privateName(scale$, "ScaleUpdateDetails.localFocalPoint");
  var scale$0 = dart.privateName(scale$, "ScaleUpdateDetails.scale");
  var horizontalScale$ = dart.privateName(scale$, "ScaleUpdateDetails.horizontalScale");
  var verticalScale$ = dart.privateName(scale$, "ScaleUpdateDetails.verticalScale");
  var rotation$ = dart.privateName(scale$, "ScaleUpdateDetails.rotation");
  var pointerCount$0 = dart.privateName(scale$, "ScaleUpdateDetails.pointerCount");
  var sourceTimeStamp$0 = dart.privateName(scale$, "ScaleUpdateDetails.sourceTimeStamp");
  scale$.ScaleUpdateDetails = class ScaleUpdateDetails extends core.Object {
    get focalPointDelta() {
      return this[focalPointDelta$];
    }
    set focalPointDelta(value) {
      super.focalPointDelta = value;
    }
    get focalPoint() {
      return this[focalPoint$0];
    }
    set focalPoint(value) {
      super.focalPoint = value;
    }
    get localFocalPoint() {
      return this[localFocalPoint$0];
    }
    set localFocalPoint(value) {
      super.localFocalPoint = value;
    }
    get scale() {
      return this[scale$0];
    }
    set scale(value) {
      super.scale = value;
    }
    get horizontalScale() {
      return this[horizontalScale$];
    }
    set horizontalScale(value) {
      super.horizontalScale = value;
    }
    get verticalScale() {
      return this[verticalScale$];
    }
    set verticalScale(value) {
      super.verticalScale = value;
    }
    get rotation() {
      return this[rotation$];
    }
    set rotation(value) {
      super.rotation = value;
    }
    get pointerCount() {
      return this[pointerCount$0];
    }
    set pointerCount(value) {
      super.pointerCount = value;
    }
    get sourceTimeStamp() {
      return this[sourceTimeStamp$0];
    }
    set sourceTimeStamp(value) {
      super.sourceTimeStamp = value;
    }
    static ['_#new#tearOff'](opts) {
      let focalPoint = opts && 'focalPoint' in opts ? opts.focalPoint : C[5] || CT.C5;
      let localFocalPoint = opts && 'localFocalPoint' in opts ? opts.localFocalPoint : null;
      let scale = opts && 'scale' in opts ? opts.scale : 1;
      let horizontalScale = opts && 'horizontalScale' in opts ? opts.horizontalScale : 1;
      let verticalScale = opts && 'verticalScale' in opts ? opts.verticalScale : 1;
      let rotation = opts && 'rotation' in opts ? opts.rotation : 0;
      let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
      let focalPointDelta = opts && 'focalPointDelta' in opts ? opts.focalPointDelta : C[5] || CT.C5;
      let sourceTimeStamp = opts && 'sourceTimeStamp' in opts ? opts.sourceTimeStamp : null;
      return new scale$.ScaleUpdateDetails.new({focalPoint: focalPoint, localFocalPoint: localFocalPoint, scale: scale, horizontalScale: horizontalScale, verticalScale: verticalScale, rotation: rotation, pointerCount: pointerCount, focalPointDelta: focalPointDelta, sourceTimeStamp: sourceTimeStamp});
    }
    toString() {
      return "ScaleUpdateDetails(" + "focalPoint: " + dart.str(this.focalPoint) + "," + " localFocalPoint: " + dart.str(this.localFocalPoint) + "," + " scale: " + dart.strSafe(this.scale) + "," + " horizontalScale: " + dart.strSafe(this.horizontalScale) + "," + " verticalScale: " + dart.strSafe(this.verticalScale) + "," + " rotation: " + dart.strSafe(this.rotation) + "," + " pointerCount: " + dart.strSafe(this.pointerCount) + "," + " focalPointDelta: " + dart.str(this.focalPointDelta) + "," + " sourceTimeStamp: " + dart.str(this.sourceTimeStamp) + ")";
    }
  };
  (scale$.ScaleUpdateDetails.new = function(opts) {
    let t$362;
    let focalPoint = opts && 'focalPoint' in opts ? opts.focalPoint : C[5] || CT.C5;
    let localFocalPoint = opts && 'localFocalPoint' in opts ? opts.localFocalPoint : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let horizontalScale = opts && 'horizontalScale' in opts ? opts.horizontalScale : 1;
    let verticalScale = opts && 'verticalScale' in opts ? opts.verticalScale : 1;
    let rotation = opts && 'rotation' in opts ? opts.rotation : 0;
    let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
    let focalPointDelta = opts && 'focalPointDelta' in opts ? opts.focalPointDelta : C[5] || CT.C5;
    let sourceTimeStamp = opts && 'sourceTimeStamp' in opts ? opts.sourceTimeStamp : null;
    this[focalPoint$0] = focalPoint;
    this[scale$0] = scale;
    this[horizontalScale$] = horizontalScale;
    this[verticalScale$] = verticalScale;
    this[rotation$] = rotation;
    this[pointerCount$0] = pointerCount;
    this[focalPointDelta$] = focalPointDelta;
    this[sourceTimeStamp$0] = sourceTimeStamp;
    if (!(scale >= 0.0)) dart.assertFailed(null, I[3], 159, 15, "scale >= 0.0");
    if (!(horizontalScale >= 0.0)) dart.assertFailed(null, I[3], 160, 15, "horizontalScale >= 0.0");
    if (!(verticalScale >= 0.0)) dart.assertFailed(null, I[3], 161, 15, "verticalScale >= 0.0");
    this[localFocalPoint$0] = (t$362 = localFocalPoint, t$362 == null ? focalPoint : t$362);
    ;
  }).prototype = scale$.ScaleUpdateDetails.prototype;
  dart.addTypeTests(scale$.ScaleUpdateDetails);
  dart.addRtiResources(scale$.ScaleUpdateDetails, ["flutter__src__gestures__scale|ScaleUpdateDetails"]);
  dart.addTypeCaches(scale$.ScaleUpdateDetails);
  dart.setLibraryUri(scale$.ScaleUpdateDetails, I[0]);
  dart.setFieldSignature(scale$.ScaleUpdateDetails, () => dart.global.Object.setPrototypeOf({
    focalPointDelta: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    focalPoint: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    localFocalPoint: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    scale: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    horizontalScale: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    verticalScale: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    rotation: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    pointerCount: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    sourceTimeStamp: {type: T.DurationN(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$.ScaleUpdateDetails))));
  dart.defineExtensionMethods(scale$.ScaleUpdateDetails, ['toString']);
  var velocity$ = dart.privateName(scale$, "ScaleEndDetails.velocity");
  var scaleVelocity$ = dart.privateName(scale$, "ScaleEndDetails.scaleVelocity");
  var pointerCount$1 = dart.privateName(scale$, "ScaleEndDetails.pointerCount");
  var Velocity_pixelsPerSecond = dart.privateName(velocity_tracker, "Velocity.pixelsPerSecond");
  scale$.ScaleEndDetails = class ScaleEndDetails extends core.Object {
    get velocity() {
      return this[velocity$];
    }
    set velocity(value) {
      super.velocity = value;
    }
    get scaleVelocity() {
      return this[scaleVelocity$];
    }
    set scaleVelocity(value) {
      super.scaleVelocity = value;
    }
    get pointerCount() {
      return this[pointerCount$1];
    }
    set pointerCount(value) {
      super.pointerCount = value;
    }
    static ['_#new#tearOff'](opts) {
      let velocity = opts && 'velocity' in opts ? opts.velocity : C[6] || CT.C6;
      let scaleVelocity = opts && 'scaleVelocity' in opts ? opts.scaleVelocity : 0;
      let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
      return new scale$.ScaleEndDetails.new({velocity: velocity, scaleVelocity: scaleVelocity, pointerCount: pointerCount});
    }
    toString() {
      return "ScaleEndDetails(velocity: " + dart.str(this.velocity) + ", scaleVelocity: " + dart.strSafe(this.scaleVelocity) + ", pointerCount: " + dart.strSafe(this.pointerCount) + ")";
    }
  };
  (scale$.ScaleEndDetails.new = function(opts) {
    let velocity = opts && 'velocity' in opts ? opts.velocity : C[6] || CT.C6;
    let scaleVelocity = opts && 'scaleVelocity' in opts ? opts.scaleVelocity : 0;
    let pointerCount = opts && 'pointerCount' in opts ? opts.pointerCount : 0;
    this[velocity$] = velocity;
    this[scaleVelocity$] = scaleVelocity;
    this[pointerCount$1] = pointerCount;
    ;
  }).prototype = scale$.ScaleEndDetails.prototype;
  dart.addTypeTests(scale$.ScaleEndDetails);
  dart.addRtiResources(scale$.ScaleEndDetails, ["flutter__src__gestures__scale|ScaleEndDetails"]);
  dart.addTypeCaches(scale$.ScaleEndDetails);
  dart.setLibraryUri(scale$.ScaleEndDetails, I[0]);
  dart.setFieldSignature(scale$.ScaleEndDetails, () => dart.global.Object.setPrototypeOf({
    velocity: {type: T.Velocity(), isConst: false, isFinal: true, libraryUri: I[4]},
    scaleVelocity: {type: T.double(), isConst: false, isFinal: true, libraryUri: I[1]},
    pointerCount: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$.ScaleEndDetails))));
  dart.defineExtensionMethods(scale$.ScaleEndDetails, ['toString']);
  scale$._LineBetweenPointers = class _LineBetweenPointers extends core.Object {
    static ['_#new#tearOff'](opts) {
      let pointerStartLocation = opts && 'pointerStartLocation' in opts ? opts.pointerStartLocation : C[5] || CT.C5;
      let pointerStartId = opts && 'pointerStartId' in opts ? opts.pointerStartId : 0;
      let pointerEndLocation = opts && 'pointerEndLocation' in opts ? opts.pointerEndLocation : C[5] || CT.C5;
      let pointerEndId = opts && 'pointerEndId' in opts ? opts.pointerEndId : 1;
      return new scale$._LineBetweenPointers.new({pointerStartLocation: pointerStartLocation, pointerStartId: pointerStartId, pointerEndLocation: pointerEndLocation, pointerEndId: pointerEndId});
    }
  };
  (scale$._LineBetweenPointers.new = function(opts) {
    let pointerStartLocation = opts && 'pointerStartLocation' in opts ? opts.pointerStartLocation : C[5] || CT.C5;
    let pointerStartId = opts && 'pointerStartId' in opts ? opts.pointerStartId : 0;
    let pointerEndLocation = opts && 'pointerEndLocation' in opts ? opts.pointerEndLocation : C[5] || CT.C5;
    let pointerEndId = opts && 'pointerEndId' in opts ? opts.pointerEndId : 1;
    this.pointerStartLocation = pointerStartLocation;
    this.pointerStartId = pointerStartId;
    this.pointerEndLocation = pointerEndLocation;
    this.pointerEndId = pointerEndId;
    if (!(pointerStartId !== pointerEndId)) dart.assertFailed(null, I[3], 307, 15, "pointerStartId != pointerEndId");
    ;
  }).prototype = scale$._LineBetweenPointers.prototype;
  dart.addTypeTests(scale$._LineBetweenPointers);
  dart.addRtiResources(scale$._LineBetweenPointers, ["flutter__src__gestures__scale|_LineBetweenPointers"]);
  dart.addTypeCaches(scale$._LineBetweenPointers);
  dart.setLibraryUri(scale$._LineBetweenPointers, I[0]);
  dart.setFieldSignature(scale$._LineBetweenPointers, () => dart.global.Object.setPrototypeOf({
    pointerStartLocation: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerStartId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]},
    pointerEndLocation: {type: T.Offset(), isConst: false, isFinal: true, libraryUri: I[2]},
    pointerEndId: {type: T.int(), isConst: false, isFinal: true, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$._LineBetweenPointers))));
  var dragStartBehavior$ = dart.privateName(scale$, "ScaleGestureRecognizer.dragStartBehavior");
  var onStart = dart.privateName(scale$, "ScaleGestureRecognizer.onStart");
  var onUpdate = dart.privateName(scale$, "ScaleGestureRecognizer.onUpdate");
  var onEnd = dart.privateName(scale$, "ScaleGestureRecognizer.onEnd");
  var trackpadScrollCausesScale$ = dart.privateName(scale$, "ScaleGestureRecognizer.trackpadScrollCausesScale");
  var trackpadScrollToScaleFactor$ = dart.privateName(scale$, "ScaleGestureRecognizer.trackpadScrollToScaleFactor");
  var _state = dart.privateName(scale$, "_state");
  var _lastTransform = dart.privateName(scale$, "_lastTransform");
  var __ScaleGestureRecognizer__initialFocalPoint = dart.privateName(scale$, "_#ScaleGestureRecognizer#_initialFocalPoint");
  var _currentFocalPoint = dart.privateName(scale$, "_currentFocalPoint");
  var __ScaleGestureRecognizer__initialSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_initialSpan");
  var __ScaleGestureRecognizer__currentSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_currentSpan");
  var __ScaleGestureRecognizer__initialHorizontalSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_initialHorizontalSpan");
  var __ScaleGestureRecognizer__currentHorizontalSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_currentHorizontalSpan");
  var __ScaleGestureRecognizer__initialVerticalSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_initialVerticalSpan");
  var __ScaleGestureRecognizer__currentVerticalSpan = dart.privateName(scale$, "_#ScaleGestureRecognizer#_currentVerticalSpan");
  var __ScaleGestureRecognizer__localFocalPoint = dart.privateName(scale$, "_#ScaleGestureRecognizer#_localFocalPoint");
  var _initialLine = dart.privateName(scale$, "_initialLine");
  var _currentLine = dart.privateName(scale$, "_currentLine");
  var _pointerLocations = dart.privateName(scale$, "_pointerLocations");
  var _pointerQueue = dart.privateName(scale$, "_pointerQueue");
  var _velocityTrackers = dart.privateName(scale$, "_velocityTrackers");
  var _scaleVelocityTracker = dart.privateName(scale$, "_scaleVelocityTracker");
  var __ScaleGestureRecognizer__delta = dart.privateName(scale$, "_#ScaleGestureRecognizer#_delta");
  var _pointerPanZooms = dart.privateName(scale$, "_pointerPanZooms");
  var _initialPanZoomScaleFactor = dart.privateName(scale$, "_initialPanZoomScaleFactor");
  var _initialPanZoomRotationFactor = dart.privateName(scale$, "_initialPanZoomRotationFactor");
  var _initialEventTimestamp = dart.privateName(scale$, "_initialEventTimestamp");
  var _initialFocalPoint = dart.privateName(scale$, "_initialFocalPoint");
  var _initialSpan = dart.privateName(scale$, "_initialSpan");
  var _currentSpan = dart.privateName(scale$, "_currentSpan");
  var _initialHorizontalSpan = dart.privateName(scale$, "_initialHorizontalSpan");
  var _currentHorizontalSpan = dart.privateName(scale$, "_currentHorizontalSpan");
  var _initialVerticalSpan = dart.privateName(scale$, "_initialVerticalSpan");
  var _currentVerticalSpan = dart.privateName(scale$, "_currentVerticalSpan");
  var _localFocalPoint = dart.privateName(scale$, "_localFocalPoint");
  var _delta = dart.privateName(scale$, "_delta");
  var _pointerScaleFactor = dart.privateName(scale$, "_pointerScaleFactor");
  var _pointerHorizontalScaleFactor = dart.privateName(scale$, "_pointerHorizontalScaleFactor");
  var _pointerVerticalScaleFactor = dart.privateName(scale$, "_pointerVerticalScaleFactor");
  var _scaleFactor = dart.privateName(scale$, "_scaleFactor");
  var _horizontalScaleFactor = dart.privateName(scale$, "_horizontalScaleFactor");
  var _verticalScaleFactor = dart.privateName(scale$, "_verticalScaleFactor");
  var _computeRotationFactor = dart.privateName(scale$, "_computeRotationFactor");
  var _is = dart.privateName(dart_rti, "_is");
  var _updateLines = dart.privateName(scale$, "_updateLines");
  var _update = dart.privateName(scale$, "_update");
  var _reconfigure = dart.privateName(scale$, "_reconfigure");
  var _advanceStateMachine = dart.privateName(scale$, "_advanceStateMachine");
  var _dispatchOnStartCallbackIfNeeded = dart.privateName(scale$, "_dispatchOnStartCallbackIfNeeded");
  scale$.ScaleGestureRecognizer = class ScaleGestureRecognizer extends recognizer.OneSequenceGestureRecognizer {
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      this[dragStartBehavior$] = value;
    }
    get onStart() {
      return this[onStart];
    }
    set onStart(value) {
      this[onStart] = value;
    }
    get onUpdate() {
      return this[onUpdate];
    }
    set onUpdate(value) {
      this[onUpdate] = value;
    }
    get onEnd() {
      return this[onEnd];
    }
    set onEnd(value) {
      this[onEnd] = value;
    }
    get trackpadScrollCausesScale() {
      return this[trackpadScrollCausesScale$];
    }
    set trackpadScrollCausesScale(value) {
      this[trackpadScrollCausesScale$] = value;
    }
    get trackpadScrollToScaleFactor() {
      return this[trackpadScrollToScaleFactor$];
    }
    set trackpadScrollToScaleFactor(value) {
      this[trackpadScrollToScaleFactor$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
      let supportedDevices = opts && 'supportedDevices' in opts ? opts.supportedDevices : null;
      let allowedButtonsFilter = opts && 'allowedButtonsFilter' in opts ? opts.allowedButtonsFilter : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[7] || CT.C7;
      let trackpadScrollCausesScale = opts && 'trackpadScrollCausesScale' in opts ? opts.trackpadScrollCausesScale : false;
      let trackpadScrollToScaleFactor = opts && 'trackpadScrollToScaleFactor' in opts ? opts.trackpadScrollToScaleFactor : C[8] || CT.C8;
      return new scale$.ScaleGestureRecognizer.new({debugOwner: debugOwner, supportedDevices: supportedDevices, allowedButtonsFilter: allowedButtonsFilter, dragStartBehavior: dragStartBehavior, trackpadScrollCausesScale: trackpadScrollCausesScale, trackpadScrollToScaleFactor: trackpadScrollToScaleFactor});
    }
    get pointerCount() {
      return this[_pointerPanZooms][$length] + this[_pointerQueue][$length];
    }
    get [_initialFocalPoint]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__initialFocalPoint];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_initialFocalPoint")) : t$362;
    }
    set [_initialFocalPoint](_initialFocalPoint$35param) {
      this[__ScaleGestureRecognizer__initialFocalPoint] = _initialFocalPoint$35param;
    }
    get [_initialSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__initialSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_initialSpan")) : t$362;
    }
    set [_initialSpan](_initialSpan$35param) {
      this[__ScaleGestureRecognizer__initialSpan] = _initialSpan$35param;
    }
    get [_currentSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__currentSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_currentSpan")) : t$362;
    }
    set [_currentSpan](_currentSpan$35param) {
      this[__ScaleGestureRecognizer__currentSpan] = _currentSpan$35param;
    }
    get [_initialHorizontalSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__initialHorizontalSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_initialHorizontalSpan")) : t$362;
    }
    set [_initialHorizontalSpan](_initialHorizontalSpan$35param) {
      this[__ScaleGestureRecognizer__initialHorizontalSpan] = _initialHorizontalSpan$35param;
    }
    get [_currentHorizontalSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__currentHorizontalSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_currentHorizontalSpan")) : t$362;
    }
    set [_currentHorizontalSpan](_currentHorizontalSpan$35param) {
      this[__ScaleGestureRecognizer__currentHorizontalSpan] = _currentHorizontalSpan$35param;
    }
    get [_initialVerticalSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__initialVerticalSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_initialVerticalSpan")) : t$362;
    }
    set [_initialVerticalSpan](_initialVerticalSpan$35param) {
      this[__ScaleGestureRecognizer__initialVerticalSpan] = _initialVerticalSpan$35param;
    }
    set [_currentVerticalSpan](_currentVerticalSpan$35param) {
      this[__ScaleGestureRecognizer__currentVerticalSpan] = _currentVerticalSpan$35param;
    }
    get [_currentVerticalSpan]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__currentVerticalSpan];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_currentVerticalSpan")) : t$362;
    }
    get [_localFocalPoint]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__localFocalPoint];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_localFocalPoint")) : t$362;
    }
    set [_localFocalPoint](_localFocalPoint$35param) {
      this[__ScaleGestureRecognizer__localFocalPoint] = _localFocalPoint$35param;
    }
    get [_delta]() {
      let t$362;
      t$362 = this[__ScaleGestureRecognizer__delta];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_delta")) : t$362;
    }
    set [_delta](_delta$35param) {
      this[__ScaleGestureRecognizer__delta] = _delta$35param;
    }
    get [_pointerScaleFactor]() {
      return this[_initialSpan] > 0.0 ? this[_currentSpan] / this[_initialSpan] : 1.0;
    }
    get [_pointerHorizontalScaleFactor]() {
      return this[_initialHorizontalSpan] > 0.0 ? this[_currentHorizontalSpan] / this[_initialHorizontalSpan] : 1.0;
    }
    get [_pointerVerticalScaleFactor]() {
      return this[_initialVerticalSpan] > 0.0 ? this[_currentVerticalSpan] / this[_initialVerticalSpan] : 1.0;
    }
    get [_scaleFactor]() {
      let scale = this[_pointerScaleFactor];
      for (let p of this[_pointerPanZooms][$values]) {
        scale = scale * (p.scale / this[_initialPanZoomScaleFactor]);
      }
      return scale;
    }
    get [_horizontalScaleFactor]() {
      let scale = this[_pointerHorizontalScaleFactor];
      for (let p of this[_pointerPanZooms][$values]) {
        scale = scale * (p.scale / this[_initialPanZoomScaleFactor]);
      }
      return scale;
    }
    get [_verticalScaleFactor]() {
      let scale = this[_pointerVerticalScaleFactor];
      for (let p of this[_pointerPanZooms][$values]) {
        scale = scale * (p.scale / this[_initialPanZoomScaleFactor]);
      }
      return scale;
    }
    [_computeRotationFactor]() {
      let factor = 0.0;
      if (this[_initialLine] != null && this[_currentLine] != null) {
        let fx = dart.nullCheck(this[_initialLine]).pointerStartLocation.dx;
        let fy = dart.nullCheck(this[_initialLine]).pointerStartLocation.dy;
        let sx = dart.nullCheck(this[_initialLine]).pointerEndLocation.dx;
        let sy = dart.nullCheck(this[_initialLine]).pointerEndLocation.dy;
        let nfx = dart.nullCheck(this[_currentLine]).pointerStartLocation.dx;
        let nfy = dart.nullCheck(this[_currentLine]).pointerStartLocation.dy;
        let nsx = dart.nullCheck(this[_currentLine]).pointerEndLocation.dx;
        let nsy = dart.nullCheck(this[_currentLine]).pointerEndLocation.dy;
        let angle1 = math.atan2(fy - sy, fx - sx);
        let angle2 = math.atan2(nfy - nsy, nfx - nsx);
        factor = angle2 - angle1;
      }
      for (let p of this[_pointerPanZooms][$values]) {
        factor = factor + p.rotation;
      }
      factor = factor - this[_initialPanZoomRotationFactor];
      return factor;
    }
    addAllowedPointer(event) {
      super.addAllowedPointer(event);
      this[_velocityTrackers][$_set](event.pointer, new velocity_tracker.VelocityTracker.withKind(event.kind));
      this[_initialEventTimestamp] = event.timeStamp;
      if (this[_state] === scale$._ScaleState.ready) {
        this[_state] = scale$._ScaleState.possible;
        this[_initialSpan] = 0.0;
        this[_currentSpan] = 0.0;
        this[_initialHorizontalSpan] = 0.0;
        this[_currentHorizontalSpan] = 0.0;
        this[_initialVerticalSpan] = 0.0;
        this[_currentVerticalSpan] = 0.0;
      }
    }
    isPointerPanZoomAllowed(event) {
      return true;
    }
    addAllowedPointerPanZoom(event) {
      super.addAllowedPointerPanZoom(event);
      this.startTrackingPointer(event.pointer, event.transform);
      this[_velocityTrackers][$_set](event.pointer, new velocity_tracker.VelocityTracker.withKind(event.kind));
      this[_initialEventTimestamp] = event.timeStamp;
      if (this[_state] === scale$._ScaleState.ready) {
        this[_state] = scale$._ScaleState.possible;
        this[_initialPanZoomScaleFactor] = 1.0;
        this[_initialPanZoomRotationFactor] = 0.0;
      }
    }
    handleEvent(event) {
      if (!(this[_state] !== scale$._ScaleState.ready)) dart.assertFailed(null, I[3], 524, 12, "_state != _ScaleState.ready");
      let didChangeConfiguration = false;
      let shouldStartIfAccepted = false;
      if (T.PointerMoveEvent()[_is](event)) {
        let tracker = dart.nullCheck(this[_velocityTrackers][$_get](event.pointer));
        if (!event.synthesized) {
          tracker.addPosition(event.timeStamp, event.position);
        }
        this[_pointerLocations][$_set](event.pointer, event.position);
        shouldStartIfAccepted = true;
        this[_lastTransform] = event.transform;
      } else if (T.PointerDownEvent()[_is](event)) {
        this[_pointerLocations][$_set](event.pointer, event.position);
        this[_pointerQueue][$add](event.pointer);
        didChangeConfiguration = true;
        shouldStartIfAccepted = true;
        this[_lastTransform] = event.transform;
      } else if (T.PointerUpEvent()[_is](event) || T.PointerCancelEvent()[_is](event)) {
        this[_pointerLocations][$remove](event.pointer);
        this[_pointerQueue][$remove](event.pointer);
        didChangeConfiguration = true;
        this[_lastTransform] = event.transform;
      } else if (T.PointerPanZoomStartEvent()[_is](event)) {
        if (!(this[_pointerPanZooms][$_get](event.pointer) == null)) dart.assertFailed(null, I[3], 547, 14, "_pointerPanZooms[event.pointer] == null");
        this[_pointerPanZooms][$_set](event.pointer, new scale$._PointerPanZoomData.fromStartEvent(this, event));
        didChangeConfiguration = true;
        shouldStartIfAccepted = true;
        this[_lastTransform] = event.transform;
      } else if (T.PointerPanZoomUpdateEvent()[_is](event)) {
        if (!(this[_pointerPanZooms][$_get](event.pointer) != null)) dart.assertFailed(null, I[3], 553, 14, "_pointerPanZooms[event.pointer] != null");
        if (!event.synthesized && !this.trackpadScrollCausesScale) {
          dart.nullCheck(this[_velocityTrackers][$_get](event.pointer)).addPosition(event.timeStamp, event.pan);
        }
        this[_pointerPanZooms][$_set](event.pointer, new scale$._PointerPanZoomData.fromUpdateEvent(this, event));
        this[_lastTransform] = event.transform;
        shouldStartIfAccepted = true;
      } else if (T.PointerPanZoomEndEvent()[_is](event)) {
        if (!(this[_pointerPanZooms][$_get](event.pointer) != null)) dart.assertFailed(null, I[3], 561, 14, "_pointerPanZooms[event.pointer] != null");
        this[_pointerPanZooms][$remove](event.pointer);
        didChangeConfiguration = true;
      }
      this[_updateLines]();
      this[_update]();
      if (!didChangeConfiguration || this[_reconfigure](event.pointer)) {
        this[_advanceStateMachine](shouldStartIfAccepted, event);
      }
      this.stopTrackingIfPointerNoLongerDown(event);
    }
    [_update]() {
      let previousFocalPoint = this[_currentFocalPoint];
      let focalPoint = ui.Offset.zero;
      for (let pointer of this[_pointerLocations][$keys]) {
        focalPoint = focalPoint['+'](dart.nullCheck(this[_pointerLocations][$_get](pointer)));
      }
      for (let p of this[_pointerPanZooms][$values]) {
        focalPoint = focalPoint['+'](p.focalPoint);
      }
      this[_currentFocalPoint] = this.pointerCount > 0 ? focalPoint['/'](this.pointerCount[$toDouble]()) : ui.Offset.zero;
      if (previousFocalPoint == null) {
        this[_localFocalPoint] = events.PointerEvent.transformPosition(this[_lastTransform], dart.nullCheck(this[_currentFocalPoint]));
        this[_delta] = ui.Offset.zero;
      } else {
        let localPreviousFocalPoint = this[_localFocalPoint];
        this[_localFocalPoint] = events.PointerEvent.transformPosition(this[_lastTransform], dart.nullCheck(this[_currentFocalPoint]));
        this[_delta] = this[_localFocalPoint]['-'](localPreviousFocalPoint);
      }
      let count = this[_pointerLocations][$keys][$length];
      let pointerFocalPoint = ui.Offset.zero;
      for (let pointer of this[_pointerLocations][$keys]) {
        pointerFocalPoint = pointerFocalPoint['+'](dart.nullCheck(this[_pointerLocations][$_get](pointer)));
      }
      if (count > 0) {
        pointerFocalPoint = pointerFocalPoint['/'](count[$toDouble]());
      }
      let totalDeviation = 0.0;
      let totalHorizontalDeviation = 0.0;
      let totalVerticalDeviation = 0.0;
      for (let pointer of this[_pointerLocations][$keys]) {
        totalDeviation = totalDeviation + pointerFocalPoint['-'](dart.nullCheck(this[_pointerLocations][$_get](pointer))).distance;
        totalHorizontalDeviation = totalHorizontalDeviation + (pointerFocalPoint.dx - dart.nullCheck(this[_pointerLocations][$_get](pointer)).dx)[$abs]();
        totalVerticalDeviation = totalVerticalDeviation + (pointerFocalPoint.dy - dart.nullCheck(this[_pointerLocations][$_get](pointer)).dy)[$abs]();
      }
      this[_currentSpan] = count > 0 ? totalDeviation / count : 0.0;
      this[_currentHorizontalSpan] = count > 0 ? totalHorizontalDeviation / count : 0.0;
      this[_currentVerticalSpan] = count > 0 ? totalVerticalDeviation / count : 0.0;
    }
    [_updateLines]() {
      let count = this[_pointerLocations][$keys][$length];
      if (!(this[_pointerQueue][$length] >= count)) dart.assertFailed(null, I[3], 633, 12, "_pointerQueue.length >= count");
      if (count < 2) {
        this[_initialLine] = this[_currentLine];
      } else if (this[_initialLine] != null && dart.nullCheck(this[_initialLine]).pointerStartId === this[_pointerQueue][$_get](0) && dart.nullCheck(this[_initialLine]).pointerEndId === this[_pointerQueue][$_get](1)) {
        this[_currentLine] = new scale$._LineBetweenPointers.new({pointerStartId: this[_pointerQueue][$_get](0), pointerStartLocation: dart.nullCheck(this[_pointerLocations][$_get](this[_pointerQueue][$_get](0))), pointerEndId: this[_pointerQueue][$_get](1), pointerEndLocation: dart.nullCheck(this[_pointerLocations][$_get](this[_pointerQueue][$_get](1)))});
      } else {
        this[_initialLine] = new scale$._LineBetweenPointers.new({pointerStartId: this[_pointerQueue][$_get](0), pointerStartLocation: dart.nullCheck(this[_pointerLocations][$_get](this[_pointerQueue][$_get](0))), pointerEndId: this[_pointerQueue][$_get](1), pointerEndLocation: dart.nullCheck(this[_pointerLocations][$_get](this[_pointerQueue][$_get](1)))});
        this[_currentLine] = this[_initialLine];
      }
    }
    [_reconfigure](pointer) {
      this[_initialFocalPoint] = dart.nullCheck(this[_currentFocalPoint]);
      this[_initialSpan] = this[_currentSpan];
      this[_initialLine] = this[_currentLine];
      this[_initialHorizontalSpan] = this[_currentHorizontalSpan];
      this[_initialVerticalSpan] = this[_currentVerticalSpan];
      if (this[_pointerPanZooms][$isEmpty]) {
        this[_initialPanZoomScaleFactor] = 1.0;
        this[_initialPanZoomRotationFactor] = 0.0;
      } else {
        this[_initialPanZoomScaleFactor] = this[_scaleFactor] / this[_pointerScaleFactor];
        this[_initialPanZoomRotationFactor] = this[_pointerPanZooms][$values][$map](T.double(), dart.fn(x => x.rotation, T._PointerPanZoomDataTodouble()))[$reduce](dart.fn((a, b) => a + b, T.doubleAnddoubleTodouble()));
      }
      if (this[_state] === scale$._ScaleState.started) {
        if (this.onEnd != null) {
          let tracker = dart.nullCheck(this[_velocityTrackers][$_get](pointer));
          let velocity = tracker.getVelocity();
          if (scale$._isFlingGesture(velocity)) {
            let pixelsPerSecond = velocity.pixelsPerSecond;
            if (pixelsPerSecond.distanceSquared > 8000 * 8000) {
              velocity = new velocity_tracker.Velocity.new({pixelsPerSecond: pixelsPerSecond['/'](pixelsPerSecond.distance)['*'](8000)});
            }
            this.invokeCallback(T.void(), "onEnd", dart.fn(() => {
              let t$362, t$362$;
              return dart.nullCheck(this.onEnd)(new scale$.ScaleEndDetails.new({velocity: velocity, scaleVelocity: (t$362$ = (t$362 = this[_scaleVelocityTracker], t$362 == null ? null : t$362.getVelocity().pixelsPerSecond.dx), t$362$ == null ? -1.0 : t$362$), pointerCount: this.pointerCount}));
            }, T.VoidTovoid()));
          } else {
            this.invokeCallback(T.void(), "onEnd", dart.fn(() => {
              let t$362, t$362$;
              return dart.nullCheck(this.onEnd)(new scale$.ScaleEndDetails.new({scaleVelocity: (t$362$ = (t$362 = this[_scaleVelocityTracker], t$362 == null ? null : t$362.getVelocity().pixelsPerSecond.dx), t$362$ == null ? -1.0 : t$362$), pointerCount: this.pointerCount}));
            }, T.VoidTovoid()));
          }
        }
        this[_state] = scale$._ScaleState.accepted;
        this[_scaleVelocityTracker] = new velocity_tracker.VelocityTracker.withKind(ui.PointerDeviceKind.touch);
        return false;
      }
      this[_scaleVelocityTracker] = new velocity_tracker.VelocityTracker.withKind(ui.PointerDeviceKind.touch);
      return true;
    }
    [_advanceStateMachine](shouldStartIfAccepted, event) {
      let t$362;
      if (this[_state] === scale$._ScaleState.ready) {
        this[_state] = scale$._ScaleState.possible;
      }
      if (this[_state] === scale$._ScaleState.possible) {
        let spanDelta = (this[_currentSpan] - this[_initialSpan])[$abs]();
        let focalPointDelta = dart.nullCheck(this[_currentFocalPoint])['-'](this[_initialFocalPoint]).distance;
        if (spanDelta > events.computeScaleSlop(event.kind) || focalPointDelta > events.computePanSlop(event.kind, this.gestureSettings) || math.max(T.double(), this[_scaleFactor] / this[_pointerScaleFactor], this[_pointerScaleFactor] / this[_scaleFactor]) > 1.05) {
          this.resolve(arena.GestureDisposition.accepted);
        }
      } else if (this[_state].index >= scale$._ScaleState.accepted.index) {
        this.resolve(arena.GestureDisposition.accepted);
      }
      if (this[_state] === scale$._ScaleState.accepted && shouldStartIfAccepted) {
        this[_initialEventTimestamp] = event.timeStamp;
        this[_state] = scale$._ScaleState.started;
        this[_dispatchOnStartCallbackIfNeeded]();
      }
      if (this[_state] === scale$._ScaleState.started) {
        t$362 = this[_scaleVelocityTracker];
        t$362 == null ? null : t$362.addPosition(event.timeStamp, new ui.Offset.new(this[_scaleFactor], 0.0));
        if (this.onUpdate != null) {
          this.invokeCallback(T.void(), "onUpdate", dart.fn(() => {
            dart.nullCheck(this.onUpdate)(new scale$.ScaleUpdateDetails.new({scale: this[_scaleFactor], horizontalScale: this[_horizontalScaleFactor], verticalScale: this[_verticalScaleFactor], focalPoint: dart.nullCheck(this[_currentFocalPoint]), localFocalPoint: this[_localFocalPoint], rotation: this[_computeRotationFactor](), pointerCount: this.pointerCount, focalPointDelta: this[_delta], sourceTimeStamp: event.timeStamp}));
          }, T.VoidTovoid()));
        }
      }
    }
    [_dispatchOnStartCallbackIfNeeded]() {
      if (!(this[_state] === scale$._ScaleState.started)) dart.assertFailed(null, I[3], 737, 12, "_state == _ScaleState.started");
      if (this.onStart != null) {
        this.invokeCallback(T.void(), "onStart", dart.fn(() => {
          dart.nullCheck(this.onStart)(new scale$.ScaleStartDetails.new({focalPoint: dart.nullCheck(this[_currentFocalPoint]), localFocalPoint: this[_localFocalPoint], pointerCount: this.pointerCount, sourceTimeStamp: this[_initialEventTimestamp]}));
        }, T.VoidTovoid()));
      }
      this[_initialEventTimestamp] = null;
    }
    acceptGesture(pointer) {
      if (this[_state] === scale$._ScaleState.possible) {
        this[_state] = scale$._ScaleState.started;
        this[_dispatchOnStartCallbackIfNeeded]();
        if (this.dragStartBehavior === recognizer.DragStartBehavior.start) {
          this[_initialFocalPoint] = dart.nullCheck(this[_currentFocalPoint]);
          this[_initialSpan] = this[_currentSpan];
          this[_initialLine] = this[_currentLine];
          this[_initialHorizontalSpan] = this[_currentHorizontalSpan];
          this[_initialVerticalSpan] = this[_currentVerticalSpan];
          if (this[_pointerPanZooms][$isEmpty]) {
            this[_initialPanZoomScaleFactor] = 1.0;
            this[_initialPanZoomRotationFactor] = 0.0;
          } else {
            this[_initialPanZoomScaleFactor] = this[_scaleFactor] / this[_pointerScaleFactor];
            this[_initialPanZoomRotationFactor] = this[_pointerPanZooms][$values][$map](T.double(), dart.fn(x => x.rotation, T._PointerPanZoomDataTodouble()))[$reduce](dart.fn((a, b) => a + b, T.doubleAnddoubleTodouble()));
          }
        }
      }
    }
    rejectGesture(pointer) {
      this[_pointerPanZooms][$remove](pointer);
      this[_pointerLocations][$remove](pointer);
      this[_pointerQueue][$remove](pointer);
      this.stopTrackingPointer(pointer);
    }
    didStopTrackingLastPointer(pointer) {
      switch (this[_state]) {
        case C[2] || CT.C2:
          {
            this.resolve(arena.GestureDisposition.rejected);
            break;
          }
        case C[1] || CT.C1:
          {
            if (!false) dart.assertFailed(null, I[3], 787, 16, "false");
            break;
          }
        case C[3] || CT.C3:
          {
            break;
          }
        case C[4] || CT.C4:
          {
            if (!false) dart.assertFailed(null, I[3], 791, 16, "false");
          }
      }
      this[_state] = scale$._ScaleState.ready;
    }
    dispose() {
      this[_velocityTrackers][$clear]();
      super.dispose();
    }
    get debugDescription() {
      return "scale";
    }
  };
  (scale$.ScaleGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    let supportedDevices = opts && 'supportedDevices' in opts ? opts.supportedDevices : null;
    let allowedButtonsFilter = opts && 'allowedButtonsFilter' in opts ? opts.allowedButtonsFilter : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[7] || CT.C7;
    let trackpadScrollCausesScale = opts && 'trackpadScrollCausesScale' in opts ? opts.trackpadScrollCausesScale : false;
    let trackpadScrollToScaleFactor = opts && 'trackpadScrollToScaleFactor' in opts ? opts.trackpadScrollToScaleFactor : C[8] || CT.C8;
    this[onStart] = null;
    this[onUpdate] = null;
    this[onEnd] = null;
    this[_state] = scale$._ScaleState.ready;
    this[_lastTransform] = null;
    this[__ScaleGestureRecognizer__initialFocalPoint] = null;
    this[_currentFocalPoint] = null;
    this[__ScaleGestureRecognizer__initialSpan] = null;
    this[__ScaleGestureRecognizer__currentSpan] = null;
    this[__ScaleGestureRecognizer__initialHorizontalSpan] = null;
    this[__ScaleGestureRecognizer__currentHorizontalSpan] = null;
    this[__ScaleGestureRecognizer__initialVerticalSpan] = null;
    this[__ScaleGestureRecognizer__currentVerticalSpan] = null;
    this[__ScaleGestureRecognizer__localFocalPoint] = null;
    this[_initialLine] = null;
    this[_currentLine] = null;
    this[_pointerLocations] = new (G.IdentityMapOfint$Offset()).new();
    this[_pointerQueue] = G.JSArrayOfint().of([]);
    this[_velocityTrackers] = new (G.IdentityMapOfint$VelocityTracker()).new();
    this[_scaleVelocityTracker] = null;
    this[__ScaleGestureRecognizer__delta] = null;
    this[_pointerPanZooms] = new (G.IdentityMapOfint$_PointerPanZoomData()).new();
    this[_initialPanZoomScaleFactor] = 1.0;
    this[_initialPanZoomRotationFactor] = 0.0;
    this[_initialEventTimestamp] = null;
    this[dragStartBehavior$] = dragStartBehavior;
    this[trackpadScrollCausesScale$] = trackpadScrollCausesScale;
    this[trackpadScrollToScaleFactor$] = trackpadScrollToScaleFactor;
    dart.global.Object.getPrototypeOf(scale$.ScaleGestureRecognizer).new.call(this, {debugOwner: debugOwner, supportedDevices: supportedDevices, allowedButtonsFilter: allowedButtonsFilter});
    ;
  }).prototype = scale$.ScaleGestureRecognizer.prototype;
  dart.addTypeTests(scale$.ScaleGestureRecognizer);
  dart.addRtiResources(scale$.ScaleGestureRecognizer, ["flutter__src__gestures__scale|ScaleGestureRecognizer"]);
  dart.addTypeCaches(scale$.ScaleGestureRecognizer);
  dart.setMethodSignature(scale$.ScaleGestureRecognizer, () => dart.global.Object.setPrototypeOf({
    [_computeRotationFactor]: T.VoidTodouble(),
    handleEvent: T.PointerEventTovoid(),
    [_update]: T.VoidTovoid(),
    [_updateLines]: T.VoidTovoid(),
    [_reconfigure]: T.intTobool(),
    [_advanceStateMachine]: T.boolAndPointerEventTovoid(),
    [_dispatchOnStartCallbackIfNeeded]: T.VoidTovoid(),
    didStopTrackingLastPointer: T.intTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(scale$.ScaleGestureRecognizer))));
  dart.setGetterSignature(scale$.ScaleGestureRecognizer, () => dart.global.Object.setPrototypeOf({
    pointerCount: T.int(),
    [_initialFocalPoint]: T.Offset(),
    [_initialSpan]: T.double(),
    [_currentSpan]: T.double(),
    [_initialHorizontalSpan]: T.double(),
    [_currentHorizontalSpan]: T.double(),
    [_initialVerticalSpan]: T.double(),
    [_currentVerticalSpan]: T.double(),
    [_localFocalPoint]: T.Offset(),
    [_delta]: T.Offset(),
    [_pointerScaleFactor]: T.double(),
    [_pointerHorizontalScaleFactor]: T.double(),
    [_pointerVerticalScaleFactor]: T.double(),
    [_scaleFactor]: T.double(),
    [_horizontalScaleFactor]: T.double(),
    [_verticalScaleFactor]: T.double(),
    debugDescription: T.String()
  }, dart.getGetters(dart.global.Object.getPrototypeOf(scale$.ScaleGestureRecognizer))));
  dart.setSetterSignature(scale$.ScaleGestureRecognizer, () => dart.global.Object.setPrototypeOf({
    [_initialFocalPoint]: T.Offset(),
    [_initialSpan]: T.double(),
    [_currentSpan]: T.double(),
    [_initialHorizontalSpan]: T.double(),
    [_currentHorizontalSpan]: T.double(),
    [_initialVerticalSpan]: T.double(),
    [_currentVerticalSpan]: T.double(),
    [_localFocalPoint]: T.Offset(),
    [_delta]: T.Offset()
  }, dart.getSetters(dart.global.Object.getPrototypeOf(scale$.ScaleGestureRecognizer))));
  dart.setLibraryUri(scale$.ScaleGestureRecognizer, I[0]);
  dart.setFieldSignature(scale$.ScaleGestureRecognizer, () => dart.global.Object.setPrototypeOf({
    dragStartBehavior: {type: T.DragStartBehavior(), isConst: false, isFinal: false, libraryUri: I[5]},
    onStart: {type: T.ScaleStartDetailsToNvoid(), isConst: false, isFinal: false},
    onUpdate: {type: T.ScaleUpdateDetailsToNvoid(), isConst: false, isFinal: false},
    onEnd: {type: T.ScaleEndDetailsToNvoid(), isConst: false, isFinal: false},
    [_state]: {type: T._ScaleState(), isConst: false, isFinal: false, libraryUri: I[0]},
    [_lastTransform]: {type: T.Matrix4N(), isConst: false, isFinal: false, libraryUri: I[6]},
    trackpadScrollCausesScale: {type: T.bool(), isConst: false, isFinal: false, libraryUri: I[1]},
    trackpadScrollToScaleFactor: {type: T.Offset(), isConst: false, isFinal: false, libraryUri: I[2]},
    [__ScaleGestureRecognizer__initialFocalPoint]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [_currentFocalPoint]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [__ScaleGestureRecognizer__initialSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__currentSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__initialHorizontalSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__currentHorizontalSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__initialVerticalSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__currentVerticalSpan]: {type: T.doubleN(), isConst: false, isFinal: false, libraryUri: I[1]},
    [__ScaleGestureRecognizer__localFocalPoint]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [_initialLine]: {type: T._LineBetweenPointersN(), isConst: false, isFinal: false, libraryUri: I[0]},
    [_currentLine]: {type: T._LineBetweenPointersN(), isConst: false, isFinal: false, libraryUri: I[0]},
    [_pointerLocations]: {type: T.MapOfint$Offset(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_pointerQueue]: {type: T.ListOfint(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_velocityTrackers]: {type: T.MapOfint$VelocityTracker(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_scaleVelocityTracker]: {type: T.VelocityTrackerN(), isConst: false, isFinal: false, libraryUri: I[4]},
    [__ScaleGestureRecognizer__delta]: {type: T.OffsetN(), isConst: false, isFinal: false, libraryUri: I[2]},
    [_pointerPanZooms]: {type: T.MapOfint$_PointerPanZoomData(), isConst: false, isFinal: true, libraryUri: I[1]},
    [_initialPanZoomScaleFactor]: {type: T.double(), isConst: false, isFinal: false, libraryUri: I[1]},
    [_initialPanZoomRotationFactor]: {type: T.double(), isConst: false, isFinal: false, libraryUri: I[1]},
    [_initialEventTimestamp]: {type: T.DurationN(), isConst: false, isFinal: false, libraryUri: I[1]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(scale$.ScaleGestureRecognizer))));
  scale$._isFlingGesture = function _isFlingGesture(velocity) {
    let speedSquared = velocity.pixelsPerSecond.distanceSquared;
    return speedSquared > 50 * 50;
  };
  dart.defineLazy(scale$, {
    /*scale$.kDefaultMouseScrollToScaleFactor*/get kDefaultMouseScrollToScaleFactor() {
      return 200;
    },
    /*scale$.kDefaultTrackpadScrollToScaleFactor*/get kDefaultTrackpadScrollToScaleFactor() {
      return C[8] || CT.C8;
    }
  }, false);
  dart.moduleConstCaches.set("packages/flutter/src/gestures/scale.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__gestures__scale|_ScaleState":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"ui|Offset":{"ui|OffsetBase":[]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"flutter__src__gestures__scale|ScaleGestureRecognizer":{"flutter__src__gestures__recognizer|OneSequenceGestureRecognizer":[],"flutter__src__gestures__recognizer|GestureRecognizer":[],"flutter__src__gestures__arena|GestureArenaMember":[],"flutter__src__foundation__diagnostics|DiagnosticableTreeMixin":[],"flutter__src__foundation__diagnostics|DiagnosticableTree":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__recognizer|OneSequenceGestureRecognizer":{"flutter__src__gestures__recognizer|GestureRecognizer":[],"flutter__src__gestures__arena|GestureArenaMember":[],"flutter__src__foundation__diagnostics|DiagnosticableTreeMixin":[],"flutter__src__foundation__diagnostics|DiagnosticableTree":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__recognizer|GestureRecognizer":{"flutter__src__gestures__arena|GestureArenaMember":[],"flutter__src__foundation__diagnostics|DiagnosticableTreeMixin":[],"flutter__src__foundation__diagnostics|DiagnosticableTree":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__foundation__diagnostics|DiagnosticableTreeMixin":{"flutter__src__foundation__diagnostics|DiagnosticableTree":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__foundation__diagnostics|DiagnosticableTree":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Duration":{"Comparable.T":"core|Duration","core|Comparable":["core|Duration"]},"flutter__src__gestures__events|PointerMoveEvent":{"flutter__src__gestures__events|_CopyPointerMoveEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerMoveEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerEvent":{"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_PointerEventDescription":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerDownEvent":{"flutter__src__gestures__events|_CopyPointerDownEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerDownEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerUpEvent":{"flutter__src__gestures__events|_CopyPointerUpEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerUpEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerCancelEvent":{"flutter__src__gestures__events|_CopyPointerCancelEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerCancelEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomStartEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomStartEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomStartEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomUpdateEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomUpdateEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|PointerPanZoomEndEvent":{"flutter__src__gestures__events|_CopyPointerPanZoomEndEvent":[],"flutter__src__gestures__events|PointerEvent":[],"flutter__src__gestures__events|_PointerEventDescription":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__events|_CopyPointerPanZoomEndEvent":{"flutter__src__gestures__events|PointerEvent":[],"flutter__src__foundation__diagnostics|Diagnosticable":[]},"flutter__src__gestures__recognizer|DragStartBehavior":{"core|_Enum":[],"core|Enum":[]},"core|Map":{"Map.K":"1","Map.V":"2"}}'));
  dart.trackLibraries("packages/flutter/src/gestures/scale.dart", {
    "package:flutter/src/gestures/scale.dart": scale$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["scale.dart"],"names":[],"mappings":"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","file":"../../../../../../../../F:/packages/flutter/src/gestures/scale.dart.lib.js"}');
  // Exports:
  return {
    src__gestures__scale: scale$
  };
}));

//# sourceMappingURL=scale.dart.lib.js.map

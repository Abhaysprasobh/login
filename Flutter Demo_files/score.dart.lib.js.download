// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/material_color_utilities/score/score.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/material_color_utilities/hct/hct.dart', 'packages/material_color_utilities/utils/math_utils.dart', 'packages/collection/src/iterable_extensions.dart'], (function load__packages__material_color_utilities__score__score_dart(dart_sdk, packages__material_color_utilities__hct__hct$46dart, packages__material_color_utilities__utils__math_utils$46dart, packages__collection__src__iterable_extensions$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const hct$ = packages__material_color_utilities__hct__hct$46dart.hct__hct;
  const math_utils = packages__material_color_utilities__utils__math_utils$46dart.utils__math_utils;
  const iterable_extensions = packages__collection__src__iterable_extensions$46dart.src__iterable_extensions;
  var score$ = Object.create(dart.library);
  var $compareTo = dartx.compareTo;
  var $entries = dartx.entries;
  var $add = dartx.add;
  var $floor = dartx.floor;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $round = dartx.round;
  var $sort = dartx.sort;
  var $clear = dartx.clear;
  var $length = dartx.length;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    _ScoredHCT: () => (T._ScoredHCT = dart.constFn(dart_rti.findType("material_color_utilities__score__score|_ScoredHCT")))(),
    ObjectNToint: () => (T.ObjectNToint = dart.constFn(dart_rti.findType("core|int(core|Object?)")))(),
    Hct: () => (T.Hct = dart.constFn(dart_rti.findType("material_color_utilities__hct__hct|Hct")))(),
    double: () => (T.double = dart.constFn(dart_rti.findType("core|double")))(),
    int: () => (T.int = dart.constFn(dart_rti.findType("core|int")))(),
    HctTobool: () => (T.HctTobool = dart.constFn(dart_rti.findType("core|bool(material_color_utilities__hct__hct|Hct)")))(),
    MapOfint$int__ToListOfint: () => (T.MapOfint$int__ToListOfint = dart.constFn(dart_rti.findType("core|List<core|int>(core|Map<core|int,core|int>{desired:core|int,fallbackColorARGB:core|int,filter:core|bool})")))()
  };
  var G = {
    JSArrayOfHct: () => (G.JSArrayOfHct = dart.constFn(_interceptors.JSArray$(T.Hct())))(),
    ListOfint: () => (G.ListOfint = dart.constFn(core.List$(T.int())))(),
    ListOfdouble: () => (G.ListOfdouble = dart.constFn(core.List$(T.double())))(),
    JSArrayOf_ScoredHCT: () => (G.JSArrayOf_ScoredHCT = dart.constFn(_interceptors.JSArray$(T._ScoredHCT())))(),
    JSArrayOfint: () => (G.JSArrayOfint = dart.constFn(_interceptors.JSArray$(T.int())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "package:material_color_utilities/score/score.dart",
    "package:material_color_utilities/hct/hct.dart",
    "dart:core"
  ];
  var _as = dart.privateName(dart_rti, "_as");
  score$._ScoredHCT = class _ScoredHCT extends core.Object {
    static ['_#new#tearOff'](hct, score) {
      return new score$._ScoredHCT.new(hct, score);
    }
    compareTo(other) {
      T._ScoredHCT()[_as](other);
      if (this.score > other.score) {
        return -1;
      } else if (this.score === other.score) {
        return 0;
      } else {
        return 1;
      }
    }
  };
  (score$._ScoredHCT.new = function(hct, score) {
    this.hct = hct;
    this.score = score;
    ;
  }).prototype = score$._ScoredHCT.prototype;
  dart.addTypeTests(score$._ScoredHCT);
  dart.addRtiResources(score$._ScoredHCT, ["material_color_utilities__score__score|_ScoredHCT", "core|Comparable"]);
  dart.addTypeCaches(score$._ScoredHCT);
  dart.setMethodSignature(score$._ScoredHCT, () => dart.global.Object.setPrototypeOf({
    compareTo: T.ObjectNToint(),
    [$compareTo]: T.ObjectNToint()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(score$._ScoredHCT))));
  dart.setLibraryUri(score$._ScoredHCT, I[0]);
  dart.setFieldSignature(score$._ScoredHCT, () => dart.global.Object.setPrototypeOf({
    hct: {type: T.Hct(), isConst: false, isFinal: false, libraryUri: I[1]},
    score: {type: T.double(), isConst: false, isFinal: false, libraryUri: I[2]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(score$._ScoredHCT))));
  dart.defineExtensionMethods(score$._ScoredHCT, ['compareTo']);
  score$.Score = class Score extends core.Object {
    static score(colorsToPopulation, opts) {
      let desired = opts && 'desired' in opts ? opts.desired : 4;
      let fallbackColorARGB = opts && 'fallbackColorARGB' in opts ? opts.fallbackColorARGB : 4282549748.0;
      let filter = opts && 'filter' in opts ? opts.filter : true;
      let colorsHct = G.JSArrayOfHct().of([]);
      let huePopulation = G.ListOfint().filled(360, 0);
      let populationSum = 0;
      for (let entry of colorsToPopulation[$entries]) {
        let argb = entry.key;
        let population = entry.value;
        let hct = hct$.Hct.fromInt(argb);
        colorsHct[$add](hct);
        let hue = hct.hue[$floor]();
        huePopulation[$_set](hue, huePopulation[$_get](hue) + population);
        populationSum = populationSum + population;
      }
      let hueExcitedProportions = G.ListOfdouble().filled(360, 0.0);
      for (let hue = 0; hue < 360; hue = hue + 1) {
        let proportion = huePopulation[$_get](hue) / populationSum;
        for (let i = hue - 14; i < hue + 16; i = i + 1) {
          let neighborHue = math_utils.MathUtils.sanitizeDegreesInt(i);
          hueExcitedProportions[$_set](neighborHue, hueExcitedProportions[$_get](neighborHue) + proportion);
        }
      }
      let scoredHcts = G.JSArrayOf_ScoredHCT().of([]);
      for (let hct of colorsHct) {
        let hue = math_utils.MathUtils.sanitizeDegreesInt(hct.hue[$round]());
        let proportion = hueExcitedProportions[$_get](hue);
        if (filter && (hct.chroma < score$.Score._cutoffChroma || proportion <= score$.Score._cutoffExcitedProportion)) {
          continue;
        }
        let proportionScore = proportion * 100.0 * score$.Score._weightProportion;
        let chromaWeight = hct.chroma < score$.Score._targetChroma ? score$.Score._weightChromaBelow : score$.Score._weightChromaAbove;
        let chromaScore = (hct.chroma - score$.Score._targetChroma) * chromaWeight;
        let score = proportionScore + chromaScore;
        scoredHcts[$add](new score$._ScoredHCT.new(hct, score));
      }
      scoredHcts[$sort]();
      let chosenColors = G.JSArrayOfHct().of([]);
      for (let differenceDegrees = 90; differenceDegrees >= 15; differenceDegrees = differenceDegrees - 1) {
        chosenColors[$clear]();
        for (let entry of scoredHcts) {
          let hct = entry.hct;
          let duplicateHue = iterable_extensions['IterableExtension|firstWhereOrNull'](T.Hct(), chosenColors, dart.fn(chosenHct => math_utils.MathUtils.differenceDegrees(hct.hue, chosenHct.hue) < differenceDegrees, T.HctTobool()));
          if (duplicateHue == null) {
            chosenColors[$add](hct);
          }
          if (chosenColors[$length] >= desired) break;
        }
        if (chosenColors[$length] >= desired) break;
      }
      let colors = G.JSArrayOfint().of([]);
      if (chosenColors[$isEmpty]) {
        colors[$add](fallbackColorARGB);
      }
      for (let chosenHct of chosenColors) {
        colors[$add](chosenHct.toInt());
      }
      return colors;
    }
    static ['_#new#tearOff']() {
      return new score$.Score.new();
    }
  };
  (score$.Score.new = function() {
    ;
  }).prototype = score$.Score.prototype;
  dart.addTypeTests(score$.Score);
  dart.addRtiResources(score$.Score, ["material_color_utilities__score__score|Score"]);
  dart.addTypeCaches(score$.Score);
  dart.setStaticMethodSignature(score$.Score, () => ['score']);
  dart.setLibraryUri(score$.Score, I[0]);
  dart.setStaticFieldSignature(score$.Score, () => ['_targetChroma', '_weightProportion', '_weightChromaAbove', '_weightChromaBelow', '_cutoffChroma', '_cutoffExcitedProportion']);
  dart.defineLazy(score$.Score, {
    /*score$.Score._targetChroma*/get _targetChroma() {
      return 48.0;
    },
    /*score$.Score._weightProportion*/get _weightProportion() {
      return 0.7;
    },
    /*score$.Score._weightChromaAbove*/get _weightChromaAbove() {
      return 0.3;
    },
    /*score$.Score._weightChromaBelow*/get _weightChromaBelow() {
      return 0.1;
    },
    /*score$.Score._cutoffChroma*/get _cutoffChroma() {
      return 5.0;
    },
    /*score$.Score._cutoffExcitedProportion*/get _cutoffExcitedProportion() {
      return 0.01;
    }
  }, false);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"material_color_utilities__score__score|_ScoredHCT":{"Comparable.T":"material_color_utilities__score__score|_ScoredHCT","core|Comparable":["material_color_utilities__score__score|_ScoredHCT"]},"core|Comparable":{"Comparable.T":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|double":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|Map":{"Map.K":"1","Map.V":"2"}}'));
  dart.trackLibraries("packages/material_color_utilities/score/score.dart", {
    "package:material_color_utilities/score/score.dart": score$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["score.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAyB2B;;AACvB,UAAI,AAAM,aAAE,AAAM,KAAD;AACf,cAAO,EAAC;YACH,KAAI,AAAM,eAAG,AAAM,KAAD;AACvB,cAAO;;AAEP,cAAO;;IAEX;;oCAXgB,KAAU;IAAV;IAAU;;EAAM;;;;;;;;;;;;;;;iBA2CK;UAC5B;UACD;UACC;AAGD,sBAAiB;AACjB,0BAAgB,qBAAiB,KAAK;AACxC,0BAAgB;AACpB,eAAS,QAAS,AAAmB,mBAAD;AAC5B,mBAAO,AAAM,KAAD;AACZ,yBAAa,AAAM,KAAD;AAClB,kBAAU,iBAAQ,IAAI;AAClB,QAAV,SAAS,OAAK,GAAG;AACX,kBAAM,AAAI,AAAI,GAAL;AACF,QAAb,aAAa,QAAC,GAAG,EAAjB,AAAa,AAAM,aAAN,QAAC,GAAG,IAAK,UAAU;AAChC,wBAAA,AAAc,aAAD,GAAI,UAAU;;AAIvB,kCAAwB,wBAAoB,KAAK;AACvD,eAAS,MAAM,GAAG,AAAI,GAAD,GAAG,KAAK,MAAA,AAAG,GAAA;AACxB,yBAAa,AAAa,AAAM,aAAN,QAAC,GAAG,IAAI,aAAa;AACrD,iBAAS,IAAI,AAAI,GAAD,GAAG,IAAI,AAAE,CAAD,GAAG,AAAI,GAAD,GAAG,IAAI,IAAA,AAAC,CAAA;AAC9B,4BAAwB,wCAAmB,CAAC;AAC7B,UAArB,qBAAqB,QAAC,WAAW,EAAjC,AAAqB,AAAc,qBAAd,QAAC,WAAW,IAAK,UAAU;;;AAM9C,uBAAyB;AAC/B,eAAW,MAAO,UAAS;AACnB,kBAAgB,wCAAmB,AAAI,AAAI,GAAL;AACtC,yBAAa,AAAqB,qBAAA,QAAC,GAAG;AAC5C,YAAI,MAAM,KACL,AAAI,AAAO,GAAR,UAAU,8BACV,AAAW,UAAD,IAAI;AACpB;;AAGI,8BAAkB,AAAW,AAAQ,UAAT,GAAG,QAAQ;AACvC,2BACF,AAAI,AAAO,GAAR,UAAU,6BAAgB,kCAAqB;AAChD,0BAA2C,CAA5B,AAAI,AAAO,GAAR,UAAU,8BAAiB,YAAY;AACzD,oBAAQ,AAAgB,eAAD,GAAG,WAAW;AAChC,QAAX,UAAU,OAAK,0BAAW,GAAG,EAAE,KAAK;;AAG3B,MAAX,UAAU;AAMJ,yBAAoB;AAC1B,eAAS,oBAAoB,IACzB,AAAkB,iBAAD,IAAI,IACrB,oBAAA,AAAiB,iBAAA;AACN,QAAb,YAAY;AACZ,iBAAW,QAAS,WAAU;AACtB,oBAAM,AAAM,KAAD;AACX,6BAA4B,mEAAb,YAAY,EAAkB,QAAC,aACtC,AAA0C,uCAAxB,AAAI,GAAD,MAAM,AAAU,SAAD,QAC9C,iBAAiB;AACrB,cAAI,AAAa,YAAD;AACD,YAAb,YAAY,OAAK,GAAG;;AAEtB,cAAI,AAAa,AAAO,YAAR,aAAW,OAAO,EAAE;;AAEtC,YAAI,AAAa,AAAO,YAAR,aAAW,OAAO,EAAE;;AAEhC,mBAAc;AACpB,UAAI,AAAa,YAAD;AACP,QAAP,MAAM,OAAK,iBAAiB;;AAE9B,eAAW,YAAa,aAAY;AAC3B,QAAP,MAAM,OAAK,AAAU,SAAD;;AAEtB,YAAO,OAAM;IACf;;;;;;;EACF;;;;;;;;MAvGe,0BAAa;YAAG;;MAChB,8BAAiB;YAAG;;MACpB,+BAAkB;YAAG;;MACrB,+BAAkB;YAAG;;MACrB,0BAAa;YAAG;;MAChB,qCAAwB;YAAG","file":"../../../../../../../../../../../../F:/packages/material_color_utilities/score/score.dart.lib.js"}');
  // Exports:
  return {
    score__score: score$
  };
}));

//# sourceMappingURL=score.dart.lib.js.map

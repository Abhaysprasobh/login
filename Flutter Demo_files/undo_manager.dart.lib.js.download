// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.3.3 (stable) (Tue Mar 26 14:21:33 2024 +0000) on "windows_x64"
// Module: packages/flutter/src/services/undo_manager.dart
// Flags: newRuntimeTypes(true), soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/flutter/src/services/text_editing_delta.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__services__undo_manager_dart(dart_sdk, packages__flutter__src__services__text_editing_delta$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const system_channels = packages__flutter__src__services__text_editing_delta$46dart.src__services__system_channels;
  const message_codec = packages__flutter__src__services__text_editing_delta$46dart.src__services__message_codec;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  var undo_manager = Object.create(dart.library);
  var services = Object.create(dart.library);
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(true);
  var T = {
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti.findType("core|String()")))(),
    ListOfUndoDirection: () => (T.ListOfUndoDirection = dart.constFn(dart_rti.findType("core|List<flutter__src__services__undo_manager|UndoDirection>")))(),
    UndoDirection: () => (T.UndoDirection = dart.constFn(dart_rti.findType("flutter__src__services__undo_manager|UndoDirection")))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti.findType("core|bool()")))(),
    List: () => (T.List = dart.constFn(dart_rti.findType("core|List<@>")))(),
    String: () => (T.String = dart.constFn(dart_rti.findType("core|String")))(),
    dynamic: () => (T.dynamic = dart.constFn(dart_rti.findType("@")))(),
    void: () => (T.void = dart.constFn(dart_rti.findType("~")))(),
    bool: () => (T.bool = dart.constFn(dart_rti.findType("core|bool")))(),
    DiagnosticsNode: () => (T.DiagnosticsNode = dart.constFn(dart_rti.findType("flutter__src__foundation__diagnostics|DiagnosticsNode")))(),
    MethodChannelTovoid: () => (T.MethodChannelTovoid = dart.constFn(dart_rti.findType("~(flutter__src__services__platform_channel|MethodChannel)")))(),
    UndoManagerClientN: () => (T.UndoManagerClientN = dart.constFn(dart_rti.findType("flutter__src__services__undo_manager|UndoManagerClient?")))(),
    __Tovoid: () => (T.__Tovoid = dart.constFn(dart_rti.findType("~({canRedo:core|bool,canUndo:core|bool})")))(),
    MethodChannel: () => (T.MethodChannel = dart.constFn(dart_rti.findType("flutter__src__services__platform_channel|MethodChannel")))(),
    MethodCallToFuture: () => (T.MethodCallToFuture = dart.constFn(dart_rti.findType("async|Future<@>(flutter__src__services__message_codec|MethodCall)")))(),
    StringToUndoDirection: () => (T.StringToUndoDirection = dart.constFn(dart_rti.findType("flutter__src__services__undo_manager|UndoDirection(core|String)")))(),
    UndoManager: () => (T.UndoManager = dart.constFn(dart_rti.findType("flutter__src__services__undo_manager|UndoManager")))(),
    MethodChannelN: () => (T.MethodChannelN = dart.constFn(dart_rti.findType("flutter__src__services__platform_channel|MethodChannel?")))()
  };
  var G = {
    IdentityMapOfString$bool: () => (G.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(T.String(), T.bool())))(),
    JSArrayOfDiagnosticsNode: () => (G.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(T.DiagnosticsNode())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "undo",
        [_Enum_index]: 0
      }, undo_manager.UndoDirection.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "redo",
        [_Enum_index]: 1
      }, undo_manager.UndoDirection.prototype));
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2], T.UndoDirection());
    }
  }, false);
  var C = Array(3).fill(void 0);
  var I = [
    "package:flutter/src/services/undo_manager.dart",
    "dart:core",
    "file:///C:/src/flutter/packages/flutter/lib/src/services/undo_manager.dart",
    "package:flutter/src/services/platform_channel.dart"
  ];
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  undo_manager.UndoDirection = class UndoDirection extends core._Enum {
    [_enumToString]() {
      return "UndoDirection." + this[_name];
    }
  };
  (undo_manager.UndoDirection.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(undo_manager.UndoDirection).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = undo_manager.UndoDirection.prototype;
  dart.addTypeTests(undo_manager.UndoDirection);
  dart.addRtiResources(undo_manager.UndoDirection, ["flutter__src__services__undo_manager|UndoDirection"]);
  dart.addTypeCaches(undo_manager.UndoDirection);
  dart.setMethodSignature(undo_manager.UndoDirection, () => dart.global.Object.setPrototypeOf({[_enumToString]: T.VoidToString()}, dart.getMethods(dart.global.Object.getPrototypeOf(undo_manager.UndoDirection))));
  dart.setLibraryUri(undo_manager.UndoDirection, I[0]);
  dart.setStaticFieldSignature(undo_manager.UndoDirection, () => ['values', 'undo', 'redo']);
  dart.defineLazy(undo_manager.UndoDirection, {
    /*undo_manager.UndoDirection.values*/get values() {
      return C[0] || CT.C0;
    },
    /*undo_manager.UndoDirection.undo*/get undo() {
      return C[1] || CT.C1;
    },
    /*undo_manager.UndoDirection.redo*/get redo() {
      return C[2] || CT.C2;
    }
  }, false);
  var __UndoManager__channel = dart.privateName(undo_manager, "_#UndoManager#_channel");
  var _currentClient = dart.privateName(undo_manager, "_currentClient");
  var _channel = dart.privateName(undo_manager, "_channel");
  var _handleUndoManagerInvocation = dart.privateName(undo_manager, "_handleUndoManagerInvocation");
  var _setUndoState = dart.privateName(undo_manager, "_setUndoState");
  var _as = dart.privateName(dart_rti, "_as");
  var _toUndoDirection = dart.privateName(undo_manager, "_toUndoDirection");
  undo_manager.UndoManager = class UndoManager extends core.Object {
    static ['_#_#tearOff']() {
      return new undo_manager.UndoManager.__();
    }
    static setChannel(newChannel) {
      if (!dart.fn(() => {
        let t$362;
        undo_manager.UndoManager._instance[_channel] = (t$362 = newChannel, (() => {
          t$362.setMethodCallHandler(dart.bind(undo_manager.UndoManager._instance, _handleUndoManagerInvocation));
          return t$362;
        })());
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[2], 50, 12, "() {\r\n      _instance._channel = newChannel..setMethodCallHandler(_instance._handleUndoManagerInvocation);\r\n      return true;\r\n    }()");
    }
    static set client(client) {
      undo_manager.UndoManager._instance[_currentClient] = client;
    }
    static get client() {
      return undo_manager.UndoManager._instance[_currentClient];
    }
    static setUndoState(opts) {
      let canUndo = opts && 'canUndo' in opts ? opts.canUndo : false;
      let canRedo = opts && 'canRedo' in opts ? opts.canRedo : false;
      undo_manager.UndoManager._instance[_setUndoState]({canUndo: canUndo, canRedo: canRedo});
    }
    get [_channel]() {
      let t$362;
      t$362 = this[__UndoManager__channel];
      return t$362 == null ? dart.throw(new _internal.LateError.fieldNI("_channel")) : t$362;
    }
    set [_channel](_channel$35param) {
      this[__UndoManager__channel] = _channel$35param;
    }
    [_handleUndoManagerInvocation](methodCall) {
      return async.async(T.dynamic(), (function* _handleUndoManagerInvocation() {
        let method = methodCall.method;
        let args = T.List()[_as](methodCall.arguments);
        if (method === "UndoManagerClient.handleUndo") {
          if (!(this[_currentClient] != null)) dart.assertFailed("There must be a current UndoManagerClient.", I[2], 84, 14, "_currentClient != null");
          dart.nullCheck(this[_currentClient]).handlePlatformUndo(this[_toUndoDirection](T.String()[_as](args[$_get](0))));
          return;
        }
        dart.throw(new message_codec.MissingPluginException.new());
      }).bind(this));
    }
    [_setUndoState](opts) {
      let canUndo = opts && 'canUndo' in opts ? opts.canUndo : false;
      let canRedo = opts && 'canRedo' in opts ? opts.canRedo : false;
      this[_channel].invokeMethod(T.void(), "UndoManager.setUndoState", new (G.IdentityMapOfString$bool()).from(["canUndo", canUndo, "canRedo", canRedo]));
    }
    [_toUndoDirection](direction) {
      switch (direction) {
        case "undo":
          {
            return undo_manager.UndoDirection.undo;
          }
        case "redo":
          {
            return undo_manager.UndoDirection.redo;
          }
      }
      dart.throw(new assertions.FlutterError.fromParts(G.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Unknown undo direction: " + direction)])));
    }
  };
  (undo_manager.UndoManager.__ = function() {
    this[__UndoManager__channel] = null;
    this[_currentClient] = null;
    this[_channel] = system_channels.SystemChannels.undoManager;
    this[_channel].setMethodCallHandler(dart.bind(this, _handleUndoManagerInvocation));
  }).prototype = undo_manager.UndoManager.prototype;
  dart.addTypeTests(undo_manager.UndoManager);
  dart.addRtiResources(undo_manager.UndoManager, ["flutter__src__services__undo_manager|UndoManager"]);
  dart.addTypeCaches(undo_manager.UndoManager);
  dart.setMethodSignature(undo_manager.UndoManager, () => dart.global.Object.setPrototypeOf({
    [_handleUndoManagerInvocation]: T.MethodCallToFuture(),
    [_setUndoState]: T.__Tovoid(),
    [_toUndoDirection]: T.StringToUndoDirection()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(undo_manager.UndoManager))));
  dart.setStaticMethodSignature(undo_manager.UndoManager, () => ['setChannel', 'setUndoState']);
  dart.setGetterSignature(undo_manager.UndoManager, () => dart.global.Object.setPrototypeOf({[_channel]: T.MethodChannel()}, dart.getGetters(dart.global.Object.getPrototypeOf(undo_manager.UndoManager))));
  dart.setSetterSignature(undo_manager.UndoManager, () => dart.global.Object.setPrototypeOf({[_channel]: T.MethodChannel()}, dart.getSetters(dart.global.Object.getPrototypeOf(undo_manager.UndoManager))));
  dart.setStaticGetterSignature(undo_manager.UndoManager, () => ['client']);
  dart.setStaticSetterSignature(undo_manager.UndoManager, () => ['client']);
  dart.setLibraryUri(undo_manager.UndoManager, I[0]);
  dart.setFieldSignature(undo_manager.UndoManager, () => dart.global.Object.setPrototypeOf({
    [__UndoManager__channel]: {type: T.MethodChannelN(), isConst: false, isFinal: false, libraryUri: I[3]},
    [_currentClient]: {type: T.UndoManagerClientN(), isConst: false, isFinal: false, libraryUri: I[0]}
  }, dart.getFields(dart.global.Object.getPrototypeOf(undo_manager.UndoManager))));
  dart.setStaticFieldSignature(undo_manager.UndoManager, () => ['_instance']);
  dart.defineLazy(undo_manager.UndoManager, {
    /*undo_manager.UndoManager._instance*/get _instance() {
      return new undo_manager.UndoManager.__();
    }
  }, false);
  undo_manager.UndoManagerClient = class UndoManagerClient extends core.Object {};
  undo_manager.UndoManagerClient[dart.mixinOn] = Object => class UndoManagerClient extends Object {};
  (undo_manager.UndoManagerClient[dart.mixinNew] = function() {
  }).prototype = undo_manager.UndoManagerClient.prototype;
  dart.addTypeTests(undo_manager.UndoManagerClient);
  dart.addRtiResources(undo_manager.UndoManagerClient, ["flutter__src__services__undo_manager|UndoManagerClient"]);
  dart.addTypeCaches(undo_manager.UndoManagerClient);
  dart.setLibraryUri(undo_manager.UndoManagerClient, I[0]);
  dart.moduleConstCaches.set("packages/flutter/src/services/undo_manager.dart", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"flutter__src__services__undo_manager|UndoDirection":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]},"async|Future":{"Future.T":"1"}}'));
  dart.trackLibraries("packages/flutter/src/services/undo_manager.dart", {
    "package:flutter/src/services/undo_manager.dart": undo_manager,
    "package:flutter/services.dart": services
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["undo_manager.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeA;;;;;;;;;;;;;MANK,iCAAM;;;MAET,+BAAI;;;MAGJ,+BAAI;;;;;;;;;;;;;;;sBAkCiC;AACnC,WAAO,AAGN;;AAFW,QAAV,wDAAqB,UAAU,EAAV;AAAY,qCAA+B,UAAV;;;AACtD,cAAO;;IAEX;sBASqC;AACzB,MAAV,qDAA2B,MAAM;IACnC;;AAGwC,YAAA,AAAU;IAAc;;UAIjC;UAAsB;AACzC,MAAV,4DAAiC,OAAO,WAAW,OAAO;IAC5D;;;AAEmB;;IAAQ;mBAAR;;IAAQ;mCAI6B;AAAZ;AAC7B,qBAAS,AAAW,UAAD;AACZ,mBAA4B,cAArB,AAAW,UAAD;AACrC,YAAI,AAAO,MAAD,KAAI;AACZ,gBAAO,AAAe,iDAAS;AACf,UAAF,eAAd,yCAAmC,uBAAyB,gBAAR,AAAI,IAAA,QAAC;AAEzD;;AAGF,mBAAM;MACR;;;UAEyB;UAAsB;AACpC,MAAT,sCACE,4BACc,yCAAC,WAAW,OAAO,EAAE,WAAW,OAAO;IAEzD;uBAEsC;AACpC,cAAQ,SAAS;;;AAEb,kBAAqB;;;;AAErB,kBAAqB;;;AAEzB,iBAAmB,sCAA2B,iCAAC,gCAAa,AAAoC,6BAAV,SAAS;IACjG;;;mCAhCmB;IAEA;AAvCjB,qBAA0B;AACjB,IAAT,8CAA8B;EAChC;;;;;;;;;;;;;;;;;;;;;MAeyB,kCAAS;YAAe","file":"../../../../../../../../F:/packages/flutter/src/services/undo_manager.dart.lib.js"}');
  // Exports:
  return {
    src__services__undo_manager: undo_manager,
    services: services
  };
}));

//# sourceMappingURL=undo_manager.dart.lib.js.map
